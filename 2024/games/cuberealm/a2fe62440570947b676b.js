'use strict';(self['webpackChunkcuberealm_client']=self['webpackChunkcuberealm_client']||[])['push']([[0x312],{0xbd44:(m,H,O)=>{O(0x7530),O(0xbd95);},0xe70:(m,H,O)=>{O['d'](H,{'U':()=>G});var u=O(0x172d2),N=O(0x3696),J=O(0x17b5d),A=O(0x12e4b),v=function(R){function j(B,z,q,b){return R['call'](this,B,z,q,b)||this;}return(0x0,A['A'])(j,R),j['prototype']['interpolate_']=function(B){return this['copySampleValue_'](B-0x1);},j;}(O(0x28f4)['l']),F=O(0x11c87),G=(function(){function R(B,z,q,b){if(void 0x0===B)throw new Error('THREE.KeyframeTrack:\x20track\x20name\x20is\x20undefined');if(void 0x0===z||0x0===z['length'])throw new Error('THREE.KeyframeTrack:\x20no\x20keyframes\x20in\x20track\x20named\x20'+B);this['name']=B,this['times']=F['r1'](z,this['TimeBufferType']),this['values']=F['r1'](q,this['ValueBufferType']),this['setInterpolation'](b||this['DefaultInterpolation']);}R['toJSON']=function(B){var z,q=B['constructor'];if(q['toJSON']!==this['toJSON'])z=q['toJSON'](B);else{z={'name':B['name'],'times':F['r1'](B['times'],Array),'values':F['r1'](B['values'],Array)};var b=B['getInterpolation']();b!==B['DefaultInterpolation']&&(z['interpolation']=b);}return z['type']=B['ValueTypeName'],z;};var j=R['prototype'];return j['InterpolantFactoryMethodDiscrete']=function(B){return new v(this['times'],this['values'],this['getValueSize'](),B);},j['InterpolantFactoryMethodLinear']=function(B){return new J['e'](this['times'],this['values'],this['getValueSize'](),B);},j['InterpolantFactoryMethodSmooth']=function(B){return new N['P'](this['times'],this['values'],this['getValueSize'](),B);},j['setInterpolation']=function(B){var z;switch(B){case u['ljd']:z=this['InterpolantFactoryMethodDiscrete'];break;case u['PJ3']:z=this['InterpolantFactoryMethodLinear'];break;case u['EQC']:z=this['InterpolantFactoryMethodSmooth'];}if(void 0x0===z){var q='unsupported\x20interpolation\x20for\x20'+this['ValueTypeName']+'\x20keyframe\x20track\x20named\x20'+this['name'];if(void 0x0===this['createInterpolant']){if(B===this['DefaultInterpolation'])throw new Error(q);this['setInterpolation'](this['DefaultInterpolation']);}return console['warn']('THREE.KeyframeTrack:',q),this;}return this['createInterpolant']=z,this;},j['getInterpolation']=function(){switch(this['createInterpolant']){case this['InterpolantFactoryMethodDiscrete']:return u['ljd'];case this['InterpolantFactoryMethodLinear']:return u['PJ3'];case this['InterpolantFactoryMethodSmooth']:return u['EQC'];}},j['getValueSize']=function(){return this['values']['length']/this['times']['length'];},j['shift']=function(B){if(0x0!==B){for(var z=this['times'],q=0x0,b=z['length'];q!==b;++q)z[q]+=B;}return this;},j['scale']=function(B){if(0x1!==B){for(var z=this['times'],q=0x0,b=z['length'];q!==b;++q)z[q]*=B;}return this;},j['trim']=function(B,z){for(var q=this['times'],b=q['length'],L=0x0,y=b-0x1;L!==b&&q[L]<B;)++L;for(;-0x1!==y&&q[y]>z;)--y;if(++y,0x0!==L||y!==b){L>=y&&(L=(y=Math['max'](y,0x1))-0x1);var h=this['getValueSize']();this['times']=q['slice'](L,y),this['values']=this['values']['slice'](L*h,y*h);}return this;},j['validate']=function(){var B=!0x0,z=this['getValueSize']();z-Math['floor'](z)!=0x0&&(console['error']('THREE.KeyframeTrack:\x20Invalid\x20value\x20size\x20in\x20track.',this),B=!0x1);var q=this['times'],b=this['values'],L=q['length'];0x0===L&&(console['error']('THREE.KeyframeTrack:\x20Track\x20is\x20empty.',this),B=!0x1);for(var y=null,X=0x0;X!==L;X++){var C=q[X];if('number'==typeof C&&isNaN(C)){console['error']('THREE.KeyframeTrack:\x20Time\x20is\x20not\x20a\x20valid\x20number.',this,X,C),B=!0x1;break;}if(null!==y&&y>C){console['error']('THREE.KeyframeTrack:\x20Out\x20of\x20order\x20keys.',this,X,C,y),B=!0x1;break;}y=C;}if(void 0x0!==b&&F['iu'](b))for(var T=0x0,E=b['length'];T!==E;++T){var d=b[T];if(isNaN(d)){console['error']('THREE.KeyframeTrack:\x20Value\x20is\x20not\x20a\x20valid\x20number.',this,T,d),B=!0x1;break;}}return B;},j['optimize']=function(){for(var B=this['times']['slice'](),z=this['values']['slice'](),q=this['getValueSize'](),b=this['getInterpolation']()===u['EQC'],L=B['length']-0x1,X=0x1,C=0x1;C<L;++C){var T=!0x1,E=B[C];if(E!==B[C+0x1]&&(0x1!==C||E!==B[0x0])){if(b)T=!0x0;else for(var D=C*q,K=D-q,w=D+q,Q=0x0;Q!==q;++Q){var U=z[D+Q];if(U!==z[K+Q]||U!==z[w+Q]){T=!0x0;break;}}}if(T){if(C!==X){B[X]=B[C];for(var M=C*q,Y=X*q,W=0x0;W!==q;++W)z[Y+W]=z[M+W];}++X;}}if(L>0x0){B[X]=B[L];for(var k=L*q,S=X*q,P=0x0;P!==q;++P)z[S+P]=z[k+P];++X;}return X!==B['length']?(this['times']=B['slice'](0x0,X),this['values']=z['slice'](0x0,X*q)):(this['times']=B,this['values']=z),this;},j['clone']=function(){var B=this['times']['slice'](),z=this['values']['slice'](),q=new(0x0,this['constructor'])(this['name'],B,z);return q['createInterpolant']=this['createInterpolant'],q;},R;}());G['prototype']['TimeBufferType']=Float32Array,G['prototype']['ValueBufferType']=Float32Array,G['prototype']['DefaultInterpolation']=u['PJ3'];},0x152de:(m,H,O)=>{O['d'](H,{'n':()=>N});var u=O(0x12e4b),N=function(J){function A(v){var F;return void 0x0===v&&(v=[]),(F=J['call'](this)||this)['isArrayCamera']=!0x0,F['cameras']=v,F;}return(0x0,u['A'])(A,J),A;}(O(0x152d9)['u']);},0xab79:(m,H,O)=>{O['d'](H,{'i':()=>A});var u=O(0x12e4b),N=O(0x172d2),J=O(0x11ded),A=function(v){function F(){var c;return(c=v['call'](this)||this)['isCamera']=!0x0,c['type']='Camera',c['matrixWorldInverse']=new J['k'](),c['projectionMatrix']=new J['k'](),c['projectionMatrixInverse']=new J['k'](),c['coordinateSystem']=N['TdN'],c;}(0x0,u['A'])(F,v);var G=F['prototype'];return G['copy']=function(c,R){return v['prototype']['copy']['call'](this,c,R),this['matrixWorldInverse']['copy'](c['matrixWorldInverse']),this['projectionMatrix']['copy'](c['projectionMatrix']),this['projectionMatrixInverse']['copy'](c['projectionMatrixInverse']),this['coordinateSystem']=c['coordinateSystem'],this;},G['getWorldDirection']=function(c){return v['prototype']['getWorldDirection']['call'](this,c)['negate']();},G['updateMatrixWorld']=function(c){v['prototype']['updateMatrixWorld']['call'](this,c),this['matrixWorldInverse']['copy'](this['matrixWorld'])['invert']();},G['updateWorldMatrix']=function(c,R){v['prototype']['updateWorldMatrix']['call'](this,c,R),this['matrixWorldInverse']['copy'](this['matrixWorld'])['invert']();},G['clone']=function(){return new this['constructor']()['copy'](this);},F;}(O(0x16f53)['B']);},0x306c:(m,H,O)=>{O['d'](H,{'F':()=>j});var N=O(0x12e4b),J=O(0x172d2),A=O(0x16f53),v=O(0x152d9);function F(B,z){var q='undefined'!=typeof Symbol&&B[Symbol['iterator']]||B['@@iterator'];if(q)return(q=q['call'](B))['next']['bind'](q);if(Array['isArray'](B)||(q=function(L,y){if(!L)return;if('string'==typeof L)return G(L,y);var h=Object['prototype']['toString']['call'](L)['slice'](0x8,-0x1);'Object'===h&&L['constructor']&&(h=L['constructor']['name']);if('Map'===h||'Set'===h)return Array['from'](L);if('Arguments'===h||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/['test'](h))return G(L,y);}(B))||z&&B&&'number'==typeof B['length']){q&&(B=q);var b=0x0;return function(){return b>=B['length']?{'done':!0x0}:{'done':!0x1,'value':B[b++]};};}throw new TypeError('Invalid\x20attempt\x20to\x20iterate\x20non-iterable\x20instance.\x0aIn\x20order\x20to\x20be\x20iterable,\x20non-array\x20objects\x20must\x20have\x20a\x20[Symbol.iterator]()\x20method.');}function G(B,z){(null==z||z>B['length'])&&(z=B['length']);for(var q=0x0,b=new Array(z);q<z;q++)b[q]=B[q];return b;}var R=-0x5a,j=function(B){function z(b,L,y){var X;(X=B['call'](this)||this)['type']='CubeCamera',X['renderTarget']=y,X['coordinateSystem']=null,X['activeMipmapLevel']=0x0;var C=new v['u'](R,0x1,b,L);C['layers']=X['layers'],X['add'](C);var T=new v['u'](R,0x1,b,L);T['layers']=X['layers'],X['add'](T);var E=new v['u'](R,0x1,b,L);E['layers']=X['layers'],X['add'](E);var D=new v['u'](R,0x1,b,L);D['layers']=X['layers'],X['add'](D);var K=new v['u'](R,0x1,b,L);K['layers']=X['layers'],X['add'](K);var w=new v['u'](R,0x1,b,L);return w['layers']=X['layers'],X['add'](w),X;}(0x0,N['A'])(z,B);var q=z['prototype'];return q['updateCoordinateSystem']=function(){for(var b,L=this['coordinateSystem'],y=this['children']['concat'](),X=y[0x0],C=y[0x1],T=y[0x2],E=y[0x3],D=y[0x4],K=y[0x5],w=F(y);!(b=w())['done'];){var Q=b['value'];this['remove'](Q);}if(L===J['TdN'])X['up']['set'](0x0,0x1,0x0),X['lookAt'](0x1,0x0,0x0),C['up']['set'](0x0,0x1,0x0),C['lookAt'](-0x1,0x0,0x0),T['up']['set'](0x0,0x0,-0x1),T['lookAt'](0x0,0x1,0x0),E['up']['set'](0x0,0x0,0x1),E['lookAt'](0x0,-0x1,0x0),D['up']['set'](0x0,0x1,0x0),D['lookAt'](0x0,0x0,0x1),K['up']['set'](0x0,0x1,0x0),K['lookAt'](0x0,0x0,-0x1);else{if(L!==J['i7u'])throw new Error('THREE.CubeCamera.updateCoordinateSystem():\x20Invalid\x20coordinate\x20system:\x20'+L);X['up']['set'](0x0,-0x1,0x0),X['lookAt'](-0x1,0x0,0x0),C['up']['set'](0x0,-0x1,0x0),C['lookAt'](0x1,0x0,0x0),T['up']['set'](0x0,0x0,0x1),T['lookAt'](0x0,0x1,0x0),E['up']['set'](0x0,0x0,-0x1),E['lookAt'](0x0,-0x1,0x0),D['up']['set'](0x0,-0x1,0x0),D['lookAt'](0x0,0x0,0x1),K['up']['set'](0x0,-0x1,0x0),K['lookAt'](0x0,0x0,-0x1);}for(var U,M=F(y);!(U=M())['done'];){var g=U['value'];this['add'](g),g['updateMatrixWorld']();}},q['update']=function(b,L){null===this['parent']&&this['updateMatrixWorld']();var y=this['renderTarget'],X=this['activeMipmapLevel'];this['coordinateSystem']!==b['coordinateSystem']&&(this['coordinateSystem']=b['coordinateSystem'],this['updateCoordinateSystem']());var C=this['children'],T=C[0x0],E=C[0x1],D=C[0x2],K=C[0x3],w=C[0x4],Q=C[0x5],U=b['getRenderTarget'](),M=b['getActiveCubeFace'](),g=b['getActiveMipmapLevel'](),x=b['xr']['enabled'];b['xr']['enabled']=!0x1;var Y=y['texture']['generateMipmaps'];y['texture']['generateMipmaps']=!0x1,b['setRenderTarget'](y,0x0,X),b['render'](L,T),b['setRenderTarget'](y,0x1,X),b['render'](L,E),b['setRenderTarget'](y,0x2,X),b['render'](L,D),b['setRenderTarget'](y,0x3,X),b['render'](L,K),b['setRenderTarget'](y,0x4,X),b['render'](L,w),y['texture']['generateMipmaps']=Y,b['setRenderTarget'](y,0x5,X),b['render'](L,Q),b['setRenderTarget'](U,M,g),b['xr']['enabled']=x,y['texture']['needsPMREMUpdate']=!0x0;},z;}(A['B']);},0x17743:(m,H,O)=>{O['d'](H,{'q':()=>N});var u=O(0x12e4b),N=function(J){function A(F,G,c,R,j,B){var z;return void 0x0===F&&(F=-0x1),void 0x0===G&&(G=0x1),void 0x0===c&&(c=0x1),void 0x0===R&&(R=-0x1),void 0x0===j&&(j=0.1),void 0x0===B&&(B=0x7d0),(z=J['call'](this)||this)['isOrthographicCamera']=!0x0,z['type']='OrthographicCamera',z['zoom']=0x1,z['view']=null,z['left']=F,z['right']=G,z['top']=c,z['bottom']=R,z['near']=j,z['far']=B,z['updateProjectionMatrix'](),z;}(0x0,u['A'])(A,J);var v=A['prototype'];return v['copy']=function(F,a){return J['prototype']['copy']['call'](this,F,a),this['left']=F['left'],this['right']=F['right'],this['top']=F['top'],this['bottom']=F['bottom'],this['near']=F['near'],this['far']=F['far'],this['zoom']=F['zoom'],this['view']=null===F['view']?null:Object['assign']({},F['view']),this;},v['setViewOffset']=function(F,G,c,R,j,B){null===this['view']&&(this['view']={'enabled':!0x0,'fullWidth':0x1,'fullHeight':0x1,'offsetX':0x0,'offsetY':0x0,'width':0x1,'height':0x1}),this['view']['enabled']=!0x0,this['view']['fullWidth']=F,this['view']['fullHeight']=G,this['view']['offsetX']=c,this['view']['offsetY']=R,this['view']['width']=j,this['view']['height']=B,this['updateProjectionMatrix']();},v['clearViewOffset']=function(){null!==this['view']&&(this['view']['enabled']=!0x1),this['updateProjectionMatrix']();},v['updateProjectionMatrix']=function(){var F=(this['right']-this['left'])/(0x2*this['zoom']),G=(this['top']-this['bottom'])/(0x2*this['zoom']),R=(this['right']+this['left'])/0x2,j=(this['top']+this['bottom'])/0x2,B=R-F,z=R+F,q=j+G,b=j-G;if(null!==this['view']&&this['view']['enabled']){var L=(this['right']-this['left'])/this['view']['fullWidth']/this['zoom'],y=(this['top']-this['bottom'])/this['view']['fullHeight']/this['zoom'];z=(B+=L*this['view']['offsetX'])+L*this['view']['width'],b=(q-=y*this['view']['offsetY'])-y*this['view']['height'];}this['projectionMatrix']['makeOrthographic'](B,z,q,b,this['near'],this['far'],this['coordinateSystem']),this['projectionMatrixInverse']['copy'](this['projectionMatrix'])['invert']();},v['toJSON']=function(F){var a=J['prototype']['toJSON']['call'](this,F);return a['object']['zoom']=this['zoom'],a['object']['left']=this['left'],a['object']['right']=this['right'],a['object']['top']=this['top'],a['object']['bottom']=this['bottom'],a['object']['near']=this['near'],a['object']['far']=this['far'],null!==this['view']&&(a['object']['view']=Object['assign']({},this['view'])),a;},A;}(O(0xab79)['i']);},0x152d9:(m,H,O)=>{O['d'](H,{'u':()=>A});var u=O(0x12e4b),N=O(0xab79),J=O(0xbd95),A=function(v){function F(c,R,j,B){var z;return void 0x0===c&&(c=0x32),void 0x0===R&&(R=0x1),void 0x0===j&&(j=0.1),void 0x0===B&&(B=0x7d0),(z=v['call'](this)||this)['isPerspectiveCamera']=!0x0,z['type']='PerspectiveCamera',z['fov']=c,z['zoom']=0x1,z['near']=j,z['far']=B,z['focus']=0xa,z['aspect']=R,z['view']=null,z['filmGauge']=0x23,z['filmOffset']=0x0,z['updateProjectionMatrix'](),z;}(0x0,u['A'])(F,v);var G=F['prototype'];return G['copy']=function(c,R){return v['prototype']['copy']['call'](this,c,R),this['fov']=c['fov'],this['zoom']=c['zoom'],this['near']=c['near'],this['far']=c['far'],this['focus']=c['focus'],this['aspect']=c['aspect'],this['view']=null===c['view']?null:Object['assign']({},c['view']),this['filmGauge']=c['filmGauge'],this['filmOffset']=c['filmOffset'],this;},G['setFocalLength']=function(c){var R=0.5*this['getFilmHeight']()/c;this['fov']=0x2*J['a5']*Math['atan'](R),this['updateProjectionMatrix']();},G['getFocalLength']=function(){var c=Math['tan'](0.5*J['up']*this['fov']);return 0.5*this['getFilmHeight']()/c;},G['getEffectiveFOV']=function(){return 0x2*J['a5']*Math['atan'](Math['tan'](0.5*J['up']*this['fov'])/this['zoom']);},G['getFilmWidth']=function(){return this['filmGauge']*Math['min'](this['aspect'],0x1);},G['getFilmHeight']=function(){return this['filmGauge']/Math['max'](this['aspect'],0x1);},G['setViewOffset']=function(c,R,j,B,z,q){this['aspect']=c/R,null===this['view']&&(this['view']={'enabled':!0x0,'fullWidth':0x1,'fullHeight':0x1,'offsetX':0x0,'offsetY':0x0,'width':0x1,'height':0x1}),this['view']['enabled']=!0x0,this['view']['fullWidth']=c,this['view']['fullHeight']=R,this['view']['offsetX']=j,this['view']['offsetY']=B,this['view']['width']=z,this['view']['height']=q,this['updateProjectionMatrix']();},G['clearViewOffset']=function(){null!==this['view']&&(this['view']['enabled']=!0x1),this['updateProjectionMatrix']();},G['updateProjectionMatrix']=function(){var R=this['near'],j=R*Math['tan'](0.5*J['up']*this['fov'])/this['zoom'],B=0x2*j,z=this['aspect']*B,q=-0.5*z,b=this['view'];if(null!==this['view']&&this['view']['enabled']){var L=b['fullWidth'],y=b['fullHeight'];q+=b['offsetX']*z/L,j-=b['offsetY']*B/y,z*=b['width']/L,B*=b['height']/y;}var h=this['filmOffset'];0x0!==h&&(q+=R*h/this['getFilmWidth']()),this['projectionMatrix']['makePerspective'](q,q+z,j,j-B,R,this['far'],this['coordinateSystem']),this['projectionMatrixInverse']['copy'](this['projectionMatrix'])['invert']();},G['toJSON']=function(c){var R=v['prototype']['toJSON']['call'](this,c);return R['object']['fov']=this['fov'],R['object']['zoom']=this['zoom'],R['object']['near']=this['near'],R['object']['far']=this['far'],R['object']['focus']=this['focus'],R['object']['aspect']=this['aspect'],null!==this['view']&&(R['object']['view']=Object['assign']({},this['view'])),R['object']['filmGauge']=this['filmGauge'],R['object']['filmOffset']=this['filmOffset'],R;},F;}(N['i']);},0x20d1:(m,H,O)=>{O(0x11ded),O(0xbd95),O(0x152d9);},0x16835:(H,O,N)=>{N['d'](O,{'L':()=>U});var J=N(0x12e4b),A=N(0x1008e),F=N(0x1264d),G=N(0x7002),R=N(0x161ea),j=N(0x17dfd),B=N(0x79b5),z=N(0x16f53),q=N(0x11ded),b=N(0x3e78),L=N(0xbd95),X=N(0x1078a),C=0x0,T=new q['k'](),E=new z['B'](),D=new A['P'](),K=new G['N'](),w=new G['N'](),Q=new A['P'](),U=function(Y){function W(){var P;return(P=Y['call'](this)||this)['isBufferGeometry']=!0x0,Object['defineProperty'](P,'id',{'value':C++}),P['uuid']=L['lk'](),P['name']='',P['type']='BufferGeometry',P['index']=null,P['attributes']={},P['morphAttributes']={},P['morphTargetsRelative']=!0x1,P['groups']=[],P['boundingBox']=null,P['boundingSphere']=null,P['drawRange']={'start':0x0,'count':0x1/0x0},P['userData']={},P;}(0x0,J['A'])(W,Y);var k=W['prototype'];return k['getIndex']=function(){return this['index'];},k['setIndex']=function(P){return Array['isArray'](P)?this['index']=new(((0x0,X['AQ'])(P))?j['MW']:j['A$'])(P,0x1):this['index']=P,this;},k['getAttribute']=function(P){return this['attributes'][P];},k['setAttribute']=function(P,I){return this['attributes'][P]=I,this;},k['deleteAttribute']=function(P){return delete this['attributes'][P],this;},k['hasAttribute']=function(P){return void 0x0!==this['attributes'][P];},k['addGroup']=function(P,I,Z){void 0x0===Z&&(Z=0x0),this['groups']['push']({'start':P,'count':I,'materialIndex':Z});},k['clearGroups']=function(){this['groups']=[];},k['setDrawRange']=function(P,I){this['drawRange']['start']=P,this['drawRange']['count']=I;},k['applyMatrix4']=function(P){var I=this['attributes']['position'];void 0x0!==I&&(I['applyMatrix4'](P),I['needsUpdate']=!0x0);var Z=this['attributes']['normal'];if(void 0x0!==Z){var V=new b['d']()['getNormalMatrix'](P);Z['applyNormalMatrix'](V),Z['needsUpdate']=!0x0;}var m0=this['attributes']['tangent'];return void 0x0!==m0&&(m0['transformDirection'](P),m0['needsUpdate']=!0x0),null!==this['boundingBox']&&this['computeBoundingBox'](),null!==this['boundingSphere']&&this['computeBoundingSphere'](),this;},k['applyQuaternion']=function(P){return T['makeRotationFromQuaternion'](P),this['applyMatrix4'](T),this;},k['rotateX']=function(P){return T['makeRotationX'](P),this['applyMatrix4'](T),this;},k['rotateY']=function(P){return T['makeRotationY'](P),this['applyMatrix4'](T),this;},k['rotateZ']=function(P){return T['makeRotationZ'](P),this['applyMatrix4'](T),this;},k['translate']=function(P,I,Z){return T['makeTranslation'](P,I,Z),this['applyMatrix4'](T),this;},k['scale']=function(P,I,Z){return T['makeScale'](P,I,Z),this['applyMatrix4'](T),this;},k['lookAt']=function(P){return E['lookAt'](P),E['updateMatrix'](),this['applyMatrix4'](E['matrix']),this;},k['center']=function(){return this['computeBoundingBox'](),this['boundingBox']['getCenter'](D)['negate'](),this['translate'](D['x'],D['y'],D['z']),this;},k['setFromPoints']=function(P){for(var I=[],Z=0x0,V=P['length'];Z<V;Z++){var m0=P[Z];I['push'](m0['x'],m0['y'],m0['z']||0x0);}return this['setAttribute']('position',new j['qt'](I,0x3)),this;},k['computeBoundingBox']=function(){null===this['boundingBox']&&(this['boundingBox']=new G['N']());var P=this['attributes']['position'],I=this['morphAttributes']['position'];if(P&&P['isGLBufferAttribute'])return console['error']('THREE.BufferGeometry.computeBoundingBox():\x20GLBufferAttribute\x20requires\x20a\x20manual\x20bounding\x20box.\x20Alternatively\x20set\x20\x22mesh.frustumCulled\x22\x20to\x20\x22false\x22.',this),void this['boundingBox']['set'](new A['P'](-0x1/0x0,-0x1/0x0,-0x1/0x0),new A['P'](0x1/0x0,0x1/0x0,0x1/0x0));if(void 0x0!==P){if(this['boundingBox']['setFromBufferAttribute'](P),I)for(var Z=0x0,V=I['length'];Z<V;Z++){var m0=I[Z];K['setFromBufferAttribute'](m0),this['morphTargetsRelative']?(Q['addVectors'](this['boundingBox']['min'],K['min']),this['boundingBox']['expandByPoint'](Q),Q['addVectors'](this['boundingBox']['max'],K['max']),this['boundingBox']['expandByPoint'](Q)):(this['boundingBox']['expandByPoint'](K['min']),this['boundingBox']['expandByPoint'](K['max']));}}else this['boundingBox']['makeEmpty']();(isNaN(this['boundingBox']['min']['x'])||isNaN(this['boundingBox']['min']['y'])||isNaN(this['boundingBox']['min']['z']))&&console['error']('THREE.BufferGeometry.computeBoundingBox():\x20Computed\x20min/max\x20have\x20NaN\x20values.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.',this);},k['computeBoundingSphere']=function(){null===this['boundingSphere']&&(this['boundingSphere']=new B['i']());var P=this['attributes']['position'],I=this['morphAttributes']['position'];if(P&&P['isGLBufferAttribute'])return console['error']('THREE.BufferGeometry.computeBoundingSphere():\x20GLBufferAttribute\x20requires\x20a\x20manual\x20bounding\x20sphere.\x20Alternatively\x20set\x20\x22mesh.frustumCulled\x22\x20to\x20\x22false\x22.',this),void this['boundingSphere']['set'](new A['P'](),0x1/0x0);if(P){var Z=this['boundingSphere']['center'];if(K['setFromBufferAttribute'](P),I)for(var V=0x0,m0=I['length'];V<m0;V++){var m1=I[V];w['setFromBufferAttribute'](m1),this['morphTargetsRelative']?(Q['addVectors'](K['min'],w['min']),K['expandByPoint'](Q),Q['addVectors'](K['max'],w['max']),K['expandByPoint'](Q)):(K['expandByPoint'](w['min']),K['expandByPoint'](w['max']));}K['getCenter'](Z);for(var m2=0x0,m3=0x0,m4=P['count'];m3<m4;m3++)Q['fromBufferAttribute'](P,m3),m2=Math['max'](m2,Z['distanceToSquared'](Q));if(I){for(var m5=0x0,m6=I['length'];m5<m6;m5++)for(var m7=I[m5],m8=this['morphTargetsRelative'],m9=0x0,mm=m7['count'];m9<mm;m9++)Q['fromBufferAttribute'](m7,m9),m8&&(D['fromBufferAttribute'](P,m9),Q['add'](D)),m2=Math['max'](m2,Z['distanceToSquared'](Q));}this['boundingSphere']['radius']=Math['sqrt'](m2),isNaN(this['boundingSphere']['radius'])&&console['error']('THREE.BufferGeometry.computeBoundingSphere():\x20Computed\x20radius\x20is\x20NaN.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.',this);}},k['computeTangents']=function(){var Z=this['index'],V=this['attributes'];if(null!==Z&&void 0x0!==V['position']&&void 0x0!==V['normal']&&void 0x0!==V['uv']){var m0=Z['array'],m1=V['position']['array'],m2=V['normal']['array'],m3=V['uv']['array'],m4=m1['length']/0x3;!0x1===this['hasAttribute']('tangent')&&this['setAttribute']('tangent',new j['TH'](new Float32Array(0x4*m4),0x4));for(var m5=this['getAttribute']('tangent')['array'],m6=[],m7=[],m8=0x0;m8<m4;m8++)m6[m8]=new A['P'](),m7[m8]=new A['P']();var m9=new A['P'](),mm=new A['P'](),me=new A['P'](),mH=new F['I'](),mO=new F['I'](),mu=new F['I'](),mN=new A['P'](),mJ=new A['P'](),mA=this['groups'];0x0===mA['length']&&(mA=[{'start':0x0,'count':m0['length']}]);for(var mv=0x0,mF=mA['length'];mv<mF;++mv)for(var ma=mA[mv],mG=ma['start'],mc=mG,mR=mG+ma['count'];mc<mR;mc+=0x3)mT(m0[mc+0x0],m0[mc+0x1],m0[mc+0x2]);for(var mj=new A['P'](),mB=new A['P'](),mz=new A['P'](),mq=new A['P'](),mb=0x0,mL=mA['length'];mb<mL;++mb)for(var my=mA[mb],mh=my['start'],mX=mh,mC=mh+my['count'];mX<mC;mX+=0x3)mi(m0[mX+0x0]),mi(m0[mX+0x1]),mi(m0[mX+0x2]);}else console['error']('THREE.BufferGeometry:\x20.computeTangents()\x20failed.\x20Missing\x20required\x20attributes\x20(index,\x20position,\x20normal\x20or\x20uv)');function mT(mo,mE,md){m9['fromArray'](m1,0x3*mo),mm['fromArray'](m1,0x3*mE),me['fromArray'](m1,0x3*md),mH['fromArray'](m3,0x2*mo),mO['fromArray'](m3,0x2*mE),mu['fromArray'](m3,0x2*md),mm['sub'](m9),me['sub'](m9),mO['sub'](mH),mu['sub'](mH);var mD=0x1/(mO['x']*mu['y']-mu['x']*mO['y']);isFinite(mD)&&(mN['copy'](mm)['multiplyScalar'](mu['y'])['addScaledVector'](me,-mO['y'])['multiplyScalar'](mD),mJ['copy'](me)['multiplyScalar'](mO['x'])['addScaledVector'](mm,-mu['x'])['multiplyScalar'](mD),m6[mo]['add'](mN),m6[mE]['add'](mN),m6[md]['add'](mN),m7[mo]['add'](mJ),m7[mE]['add'](mJ),m7[md]['add'](mJ));}function mi(mo){mz['fromArray'](m2,0x3*mo),mq['copy'](mz);var mE=m6[mo];mj['copy'](mE),mj['sub'](mz['multiplyScalar'](mz['dot'](mE)))['normalize'](),mB['crossVectors'](mq,mE);var md=mB['dot'](m7[mo])<0x0?-0x1:0x1;m5[0x4*mo]=mj['x'],m5[0x4*mo+0x1]=mj['y'],m5[0x4*mo+0x2]=mj['z'],m5[0x4*mo+0x3]=md;}},k['computeVertexNormals']=function(){var P=this['index'],I=this['getAttribute']('position');if(void 0x0!==I){var Z=this['getAttribute']('normal');if(void 0x0===Z)Z=new j['TH'](new Float32Array(0x3*I['count']),0x3),this['setAttribute']('normal',Z);else{for(var V=0x0,m0=Z['count'];V<m0;V++)Z['setXYZ'](V,0x0,0x0,0x0);}var m1=new A['P'](),m2=new A['P'](),m3=new A['P'](),m4=new A['P'](),m5=new A['P'](),m6=new A['P'](),m7=new A['P'](),m8=new A['P']();if(P)for(var m9=0x0,mm=P['count'];m9<mm;m9+=0x3){var me=P['getX'](m9+0x0),mH=P['getX'](m9+0x1),mO=P['getX'](m9+0x2);m1['fromBufferAttribute'](I,me),m2['fromBufferAttribute'](I,mH),m3['fromBufferAttribute'](I,mO),m7['subVectors'](m3,m2),m8['subVectors'](m1,m2),m7['cross'](m8),m4['fromBufferAttribute'](Z,me),m5['fromBufferAttribute'](Z,mH),m6['fromBufferAttribute'](Z,mO),m4['add'](m7),m5['add'](m7),m6['add'](m7),Z['setXYZ'](me,m4['x'],m4['y'],m4['z']),Z['setXYZ'](mH,m5['x'],m5['y'],m5['z']),Z['setXYZ'](mO,m6['x'],m6['y'],m6['z']);}else{for(var mu=0x0,mN=I['count'];mu<mN;mu+=0x3)m1['fromBufferAttribute'](I,mu+0x0),m2['fromBufferAttribute'](I,mu+0x1),m3['fromBufferAttribute'](I,mu+0x2),m7['subVectors'](m3,m2),m8['subVectors'](m1,m2),m7['cross'](m8),Z['setXYZ'](mu+0x0,m7['x'],m7['y'],m7['z']),Z['setXYZ'](mu+0x1,m7['x'],m7['y'],m7['z']),Z['setXYZ'](mu+0x2,m7['x'],m7['y'],m7['z']);}this['normalizeNormals'](),Z['needsUpdate']=!0x0;}},k['normalizeNormals']=function(){for(var P=this['attributes']['normal'],I=0x0,Z=P['count'];I<Z;I++)Q['fromBufferAttribute'](P,I),Q['normalize'](),P['setXYZ'](I,Q['x'],Q['y'],Q['z']);},k['toNonIndexed']=function(){function P(mO,mu){for(var mN=mO['array'],mJ=mO['itemSize'],mA=mO['normalized'],mv=new mN['constructor'](mu['length']*mJ),mF=0x0,ma=0x0,mG=0x0,mc=mu['length'];mG<mc;mG++){mF=mO['isInterleavedBufferAttribute']?mu[mG]*mO['data']['stride']+mO['offset']:mu[mG]*mJ;for(var mR=0x0;mR<mJ;mR++)mv[ma++]=mN[mF++];}return new j['TH'](mv,mJ,mA);}if(null===this['index'])return console['warn']('THREE.BufferGeometry.toNonIndexed():\x20BufferGeometry\x20is\x20already\x20non-indexed.'),this;var I=new W(),Z=this['index']['array'],V=this['attributes'];for(var m0 in V){var m1=P(V[m0],Z);I['setAttribute'](m0,m1);}var m2=this['morphAttributes'];for(var m3 in m2){for(var m4=[],m5=m2[m3],m6=0x0,m7=m5['length'];m6<m7;m6++){var m8=P(m5[m6],Z);m4['push'](m8);}I['morphAttributes'][m3]=m4;}I['morphTargetsRelative']=this['morphTargetsRelative'];for(var m9=this['groups'],mm=0x0,me=m9['length'];mm<me;mm++){var mH=m9[mm];I['addGroup'](mH['start'],mH['count'],mH['materialIndex']);}return I;},k['toJSON']=function(){var P={'metadata':{'version':4.6,'type':'BufferGeometry','generator':'BufferGeometry.toJSON'}};if(P['uuid']=this['uuid'],P['type']=this['type'],''!==this['name']&&(P['name']=this['name']),Object['keys'](this['userData'])['length']>0x0&&(P['userData']=this['userData']),void 0x0!==this['parameters']){var I=this['parameters'];for(var Z in I)void 0x0!==I[Z]&&(P[Z]=I[Z]);return P;}P['data']={'attributes':{}};var V=this['index'];null!==V&&(P['data']['index']={'type':V['array']['constructor']['name'],'array':Array['prototype']['slice']['call'](V['array'])});var m0=this['attributes'];for(var m1 in m0){var m2=m0[m1];P['data']['attributes'][m1]=m2['toJSON'](P['data']);}var m3={},m4=!0x1;for(var m5 in this['morphAttributes']){for(var m6=this['morphAttributes'][m5],m7=[],m8=0x0,m9=m6['length'];m8<m9;m8++){var mm=m6[m8];m7['push'](mm['toJSON'](P['data']));}m7['length']>0x0&&(m3[m5]=m7,m4=!0x0);}m4&&(P['data']['morphAttributes']=m3,P['data']['morphTargetsRelative']=this['morphTargetsRelative']);var me=this['groups'];me['length']>0x0&&(P['data']['groups']=JSON['parse'](JSON['stringify'](me)));var mH=this['boundingSphere'];return null!==mH&&(P['data']['boundingSphere']={'center':mH['center']['toArray'](),'radius':mH['radius']}),P;},k['clone']=function(){return new this['constructor']()['copy'](this);},k['copy']=function(P){this['index']=null,this['attributes']={},this['morphAttributes']={},this['groups']=[],this['boundingBox']=null,this['boundingSphere']=null;var I={};this['name']=P['name'];var Z=P['index'];null!==Z&&this['setIndex'](Z['clone'](I));var V=P['attributes'];for(var m0 in V){var m1=V[m0];this['setAttribute'](m0,m1['clone'](I));}var m2=P['morphAttributes'];for(var m3 in m2){for(var m4=[],m5=m2[m3],m6=0x0,m7=m5['length'];m6<m7;m6++)m4['push'](m5[m6]['clone'](I));this['morphAttributes'][m3]=m4;}this['morphTargetsRelative']=P['morphTargetsRelative'];for(var m8=P['groups'],m9=0x0,mm=m8['length'];m9<mm;m9++){var me=m8[m9];this['addGroup'](me['start'],me['count'],me['materialIndex']);}var mH=P['boundingBox'];null!==mH&&(this['boundingBox']=mH['clone']());var mO=P['boundingSphere'];return null!==mO&&(this['boundingSphere']=mO['clone']()),this['drawRange']['start']=P['drawRange']['start'],this['drawRange']['count']=P['drawRange']['count'],this['userData']=P['userData'],this;},k['dispose']=function(){this['dispatchEvent']({'type':'dispose'});},W;}(R['Q']);},0x161ea:(m,H,O)=>{O['d'](H,{'Q':()=>u});var u=(function(){function N(){}var J=N['prototype'];return J['addEventListener']=function(A,v){void 0x0===this['_listeners']&&(this['_listeners']={});var F=this['_listeners'];void 0x0===F[A]&&(F[A]=[]),-0x1===F[A]['indexOf'](v)&&F[A]['push'](v);},J['hasEventListener']=function(A,v){if(void 0x0===this['_listeners'])return!0x1;var F=this['_listeners'];return void 0x0!==F[A]&&-0x1!==F[A]['indexOf'](v);},J['removeEventListener']=function(A,v){if(void 0x0!==this['_listeners']){var F=this['_listeners'][A];if(void 0x0!==F){var a=F['indexOf'](v);-0x1!==a&&F['splice'](a,0x1);}}},J['dispatchEvent']=function(A){if(void 0x0!==this['_listeners']){var v=this['_listeners'][A['type']];if(void 0x0!==v){A['target']=this;for(var F=v['slice'](0x0),a=0x0,G=F['length'];a<G;a++)F[a]['call'](this,A);A['target']=null;}}},N;}());},0xc7b1:(m,H,O)=>{O['d'](H,{'z':()=>u});var u=(function(){function N(){this['mask']=0x1;}var J=N['prototype'];return J['set']=function(A){this['mask']=0x1<<A>>>0x0;},J['enable']=function(A){this['mask']|=0x1<<A;},J['enableAll']=function(){this['mask']=-0x1;},J['toggle']=function(A){this['mask']^=0x1<<A;},J['disable']=function(A){this['mask']&=~(0x1<<A);},J['disableAll']=function(){this['mask']=0x0;},J['test']=function(A){return!!(this['mask']&A['mask']);},J['isEnabled']=function(A){return!!(this['mask']&0x1<<A);},N;}());},0x16f53:(H,O,N)=>{N['d'](O,{'B':()=>Z});var J=N(0x12e4b),A=N(0x13294),F=N(0x1008e),G=N(0x11ded),R=N(0x161ea),j=N(0x147e3),B=N(0xc7b1),z=N(0x3e78),q=N(0xbd95),L=0x0,X=new F['P'](),C=new A['P'](),T=new G['k'](),D=new F['P'](),K=new F['P'](),Q=new F['P'](),U=new A['P'](),Y=new F['P'](0x1,0x0,0x0),W=new F['P'](0x0,0x1,0x0),k=new F['P'](0x0,0x0,0x1),P={'type':'added'},I={'type':'removed'},Z=function(V){function m0(){var m2;(m2=V['call'](this)||this)['isObject3D']=!0x0,Object['defineProperty'](m2,'id',{'value':L++}),m2['uuid']=q['lk'](),m2['name']='',m2['type']='Object3D',m2['parent']=null,m2['children']=[],m2['up']=m0['DEFAULT_UP']['clone']();var m3=new F['P'](),m4=new j['O'](),m5=new A['P'](),m6=new F['P'](0x1,0x1,0x1);return m4['_onChange'](function(){m5['setFromEuler'](m4,!0x1);}),m5['_onChange'](function(){m4['setFromQuaternion'](m5,void 0x0,!0x1);}),Object['defineProperties'](m2,{'position':{'configurable':!0x0,'enumerable':!0x0,'value':m3},'rotation':{'configurable':!0x0,'enumerable':!0x0,'value':m4},'quaternion':{'configurable':!0x0,'enumerable':!0x0,'value':m5},'scale':{'configurable':!0x0,'enumerable':!0x0,'value':m6},'modelViewMatrix':{'value':new G['k']()},'normalMatrix':{'value':new z['d']()}}),m2['matrix']=new G['k'](),m2['matrixWorld']=new G['k'](),m2['matrixAutoUpdate']=m0['DEFAULT_MATRIX_AUTO_UPDATE'],m2['matrixWorldAutoUpdate']=m0['DEFAULT_MATRIX_WORLD_AUTO_UPDATE'],m2['matrixWorldNeedsUpdate']=!0x1,m2['layers']=new B['z'](),m2['visible']=!0x0,m2['castShadow']=!0x1,m2['receiveShadow']=!0x1,m2['frustumCulled']=!0x0,m2['renderOrder']=0x0,m2['animations']=[],m2['userData']={},m2;}(0x0,J['A'])(m0,V);var m1=m0['prototype'];return m1['onBeforeShadow']=function(){},m1['onAfterShadow']=function(){},m1['onBeforeRender']=function(){},m1['onAfterRender']=function(){},m1['applyMatrix4']=function(m2){this['matrixAutoUpdate']&&this['updateMatrix'](),this['matrix']['premultiply'](m2),this['matrix']['decompose'](this['position'],this['quaternion'],this['scale']);},m1['applyQuaternion']=function(m2){return this['quaternion']['premultiply'](m2),this;},m1['setRotationFromAxisAngle']=function(m2,m3){this['quaternion']['setFromAxisAngle'](m2,m3);},m1['setRotationFromEuler']=function(m2){this['quaternion']['setFromEuler'](m2,!0x0);},m1['setRotationFromMatrix']=function(m2){this['quaternion']['setFromRotationMatrix'](m2);},m1['setRotationFromQuaternion']=function(m2){this['quaternion']['copy'](m2);},m1['rotateOnAxis']=function(m2,m3){return C['setFromAxisAngle'](m2,m3),this['quaternion']['multiply'](C),this;},m1['rotateOnWorldAxis']=function(m2,m3){return C['setFromAxisAngle'](m2,m3),this['quaternion']['premultiply'](C),this;},m1['rotateX']=function(m2){return this['rotateOnAxis'](Y,m2);},m1['rotateY']=function(m2){return this['rotateOnAxis'](W,m2);},m1['rotateZ']=function(m2){return this['rotateOnAxis'](k,m2);},m1['translateOnAxis']=function(m2,m3){return X['copy'](m2)['applyQuaternion'](this['quaternion']),this['position']['add'](X['multiplyScalar'](m3)),this;},m1['translateX']=function(m2){return this['translateOnAxis'](Y,m2);},m1['translateY']=function(m2){return this['translateOnAxis'](W,m2);},m1['translateZ']=function(m2){return this['translateOnAxis'](k,m2);},m1['localToWorld']=function(m2){return this['updateWorldMatrix'](!0x0,!0x1),m2['applyMatrix4'](this['matrixWorld']);},m1['worldToLocal']=function(m2){return this['updateWorldMatrix'](!0x0,!0x1),m2['applyMatrix4'](T['copy'](this['matrixWorld'])['invert']());},m1['lookAt']=function(m2,m3,m4){m2['isVector3']?D['copy'](m2):D['set'](m2,m3,m4);var m5=this['parent'];this['updateWorldMatrix'](!0x0,!0x1),K['setFromMatrixPosition'](this['matrixWorld']),this['isCamera']||this['isLight']?T['lookAt'](K,D,this['up']):T['lookAt'](D,K,this['up']),this['quaternion']['setFromRotationMatrix'](T),m5&&(T['extractRotation'](m5['matrixWorld']),C['setFromRotationMatrix'](T),this['quaternion']['premultiply'](C['invert']()));},m1['add']=function(m2){if(arguments['length']>0x1){for(var m3=0x0;m3<arguments['length'];m3++)this['add'](arguments[m3]);return this;}return m2===this?(console['error']('THREE.Object3D.add:\x20object\x20can\x27t\x20be\x20added\x20as\x20a\x20child\x20of\x20itself.',m2),this):(m2&&m2['isObject3D']?(null!==m2['parent']&&m2['parent']['remove'](m2),m2['parent']=this,this['children']['push'](m2),m2['dispatchEvent'](P)):console['error']('THREE.Object3D.add:\x20object\x20not\x20an\x20instance\x20of\x20THREE.Object3D.',m2),this);},m1['remove']=function(m2){if(arguments['length']>0x1){for(var m3=0x0;m3<arguments['length'];m3++)this['remove'](arguments[m3]);return this;}var m4=this['children']['indexOf'](m2);return-0x1!==m4&&(m2['parent']=null,this['children']['splice'](m4,0x1),m2['dispatchEvent'](I)),this;},m1['removeFromParent']=function(){var m2=this['parent'];return null!==m2&&m2['remove'](this),this;},m1['clear']=function(){return this['remove']['apply'](this,this['children']);},m1['attach']=function(m2){return this['updateWorldMatrix'](!0x0,!0x1),T['copy'](this['matrixWorld'])['invert'](),null!==m2['parent']&&(m2['parent']['updateWorldMatrix'](!0x0,!0x1),T['multiply'](m2['parent']['matrixWorld'])),m2['applyMatrix4'](T),this['add'](m2),m2['updateWorldMatrix'](!0x1,!0x0),this;},m1['getObjectById']=function(m2){return this['getObjectByProperty']('id',m2);},m1['getObjectByName']=function(m2){return this['getObjectByProperty']('name',m2);},m1['getObjectByProperty']=function(m2,m3){if(this[m2]===m3)return this;for(var m4=0x0,m5=this['children']['length'];m4<m5;m4++){var m6=this['children'][m4]['getObjectByProperty'](m2,m3);if(void 0x0!==m6)return m6;}},m1['getObjectsByProperty']=function(m2,m3,m4){void 0x0===m4&&(m4=[]),this[m2]===m3&&m4['push'](this);for(var m5=this['children'],m6=0x0,m7=m5['length'];m6<m7;m6++)m5[m6]['getObjectsByProperty'](m2,m3,m4);return m4;},m1['getWorldPosition']=function(m2){return this['updateWorldMatrix'](!0x0,!0x1),m2['setFromMatrixPosition'](this['matrixWorld']);},m1['getWorldQuaternion']=function(m2){return this['updateWorldMatrix'](!0x0,!0x1),this['matrixWorld']['decompose'](K,m2,Q),m2;},m1['getWorldScale']=function(m2){return this['updateWorldMatrix'](!0x0,!0x1),this['matrixWorld']['decompose'](K,U,m2),m2;},m1['getWorldDirection']=function(m2){this['updateWorldMatrix'](!0x0,!0x1);var m3=this['matrixWorld']['elements'];return m2['set'](m3[0x8],m3[0x9],m3[0xa])['normalize']();},m1['raycast']=function(){},m1['traverse']=function(m2){m2(this);for(var m3=this['children'],m4=0x0,m5=m3['length'];m4<m5;m4++)m3[m4]['traverse'](m2);},m1['traverseVisible']=function(m2){if(!0x1!==this['visible']){m2(this);for(var m3=this['children'],m4=0x0,m5=m3['length'];m4<m5;m4++)m3[m4]['traverseVisible'](m2);}},m1['traverseAncestors']=function(m2){var m3=this['parent'];null!==m3&&(m2(m3),m3['traverseAncestors'](m2));},m1['updateMatrix']=function(){this['matrix']['compose'](this['position'],this['quaternion'],this['scale']),this['matrixWorldNeedsUpdate']=!0x0;},m1['updateMatrixWorld']=function(m2){this['matrixAutoUpdate']&&this['updateMatrix'](),(this['matrixWorldNeedsUpdate']||m2)&&(null===this['parent']?this['matrixWorld']['copy'](this['matrix']):this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'],this['matrix']),this['matrixWorldNeedsUpdate']=!0x1,m2=!0x0);for(var m3=this['children'],m4=0x0,m5=m3['length'];m4<m5;m4++){var m6=m3[m4];!0x0!==m6['matrixWorldAutoUpdate']&&!0x0!==m2||m6['updateMatrixWorld'](m2);}},m1['updateWorldMatrix']=function(m2,m3){var m4=this['parent'];if(!0x0===m2&&null!==m4&&!0x0===m4['matrixWorldAutoUpdate']&&m4['updateWorldMatrix'](!0x0,!0x1),this['matrixAutoUpdate']&&this['updateMatrix'](),null===this['parent']?this['matrixWorld']['copy'](this['matrix']):this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'],this['matrix']),!0x0===m3)for(var m5=this['children'],m6=0x0,m7=m5['length'];m6<m7;m6++){var m8=m5[m6];!0x0===m8['matrixWorldAutoUpdate']&&m8['updateWorldMatrix'](!0x1,!0x0);}},m1['toJSON']=function(m2){var m3=void 0x0===m2||'string'==typeof m2,m4={};m3&&(m2={'geometries':{},'materials':{},'textures':{},'images':{},'shapes':{},'skeletons':{},'animations':{},'nodes':{}},m4['metadata']={'version':4.6,'type':'Object','generator':'Object3D.toJSON'});var m5={};function m6(mq,mb){return void 0x0===mq[mb['uuid']]&&(mq[mb['uuid']]=mb['toJSON'](m2)),mb['uuid'];}if(m5['uuid']=this['uuid'],m5['type']=this['type'],''!==this['name']&&(m5['name']=this['name']),!0x0===this['castShadow']&&(m5['castShadow']=!0x0),!0x0===this['receiveShadow']&&(m5['receiveShadow']=!0x0),!0x1===this['visible']&&(m5['visible']=!0x1),!0x1===this['frustumCulled']&&(m5['frustumCulled']=!0x1),0x0!==this['renderOrder']&&(m5['renderOrder']=this['renderOrder']),Object['keys'](this['userData'])['length']>0x0&&(m5['userData']=this['userData']),m5['layers']=this['layers']['mask'],m5['matrix']=this['matrix']['toArray'](),m5['up']=this['up']['toArray'](),!0x1===this['matrixAutoUpdate']&&(m5['matrixAutoUpdate']=!0x1),this['isInstancedMesh']&&(m5['type']='InstancedMesh',m5['count']=this['count'],m5['instanceMatrix']=this['instanceMatrix']['toJSON'](),null!==this['instanceColor']&&(m5['instanceColor']=this['instanceColor']['toJSON']())),this['isBatchedMesh']&&(m5['type']='BatchedMesh',m5['perObjectFrustumCulled']=this['perObjectFrustumCulled'],m5['sortObjects']=this['sortObjects'],m5['drawRanges']=this['_drawRanges'],m5['reservedRanges']=this['_reservedRanges'],m5['visibility']=this['_visibility'],m5['active']=this['_active'],m5['bounds']=this['_bounds']['map'](function(mq){return{'boxInitialized':mq['boxInitialized'],'boxMin':mq['box']['min']['toArray'](),'boxMax':mq['box']['max']['toArray'](),'sphereInitialized':mq['sphereInitialized'],'sphereRadius':mq['sphere']['radius'],'sphereCenter':mq['sphere']['center']['toArray']()};}),m5['maxGeometryCount']=this['_maxGeometryCount'],m5['maxVertexCount']=this['_maxVertexCount'],m5['maxIndexCount']=this['_maxIndexCount'],m5['geometryInitialized']=this['_geometryInitialized'],m5['geometryCount']=this['_geometryCount'],m5['matricesTexture']=this['_matricesTexture']['toJSON'](m2),null!==this['boundingSphere']&&(m5['boundingSphere']={'center':m5['boundingSphere']['center']['toArray'](),'radius':m5['boundingSphere']['radius']}),null!==this['boundingBox']&&(m5['boundingBox']={'min':m5['boundingBox']['min']['toArray'](),'max':m5['boundingBox']['max']['toArray']()})),this['isScene'])this['background']&&(this['background']['isColor']?m5['background']=this['background']['toJSON']():this['background']['isTexture']&&(m5['background']=this['background']['toJSON'](m2)['uuid'])),this['environment']&&this['environment']['isTexture']&&!0x0!==this['environment']['isRenderTargetTexture']&&(m5['environment']=this['environment']['toJSON'](m2)['uuid']);else{if(this['isMesh']||this['isLine']||this['isPoints']){m5['geometry']=m6(m2['geometries'],this['geometry']);var m7=this['geometry']['parameters'];if(void 0x0!==m7&&void 0x0!==m7['shapes']){var m8=m7['shapes'];if(Array['isArray'](m8))for(var m9=0x0,mm=m8['length'];m9<mm;m9++){var me=m8[m9];m6(m2['shapes'],me);}else m6(m2['shapes'],m8);}}}if(this['isSkinnedMesh']&&(m5['bindMode']=this['bindMode'],m5['bindMatrix']=this['bindMatrix']['toArray'](),void 0x0!==this['skeleton']&&(m6(m2['skeletons'],this['skeleton']),m5['skeleton']=this['skeleton']['uuid'])),void 0x0!==this['material']){if(Array['isArray'](this['material'])){for(var mH=[],mO=0x0,mu=this['material']['length'];mO<mu;mO++)mH['push'](m6(m2['materials'],this['material'][mO]));m5['material']=mH;}else m5['material']=m6(m2['materials'],this['material']);}if(this['children']['length']>0x0){m5['children']=[];for(var mN=0x0;mN<this['children']['length'];mN++)m5['children']['push'](this['children'][mN]['toJSON'](m2)['object']);}if(this['animations']['length']>0x0){m5['animations']=[];for(var mJ=0x0;mJ<this['animations']['length'];mJ++){var mA=this['animations'][mJ];m5['animations']['push'](m6(m2['animations'],mA));}}if(m3){var mv=mz(m2['geometries']),mF=mz(m2['materials']),ma=mz(m2['textures']),mG=mz(m2['images']),mc=mz(m2['shapes']),mR=mz(m2['skeletons']),mj=mz(m2['animations']),mB=mz(m2['nodes']);mv['length']>0x0&&(m4['geometries']=mv),mF['length']>0x0&&(m4['materials']=mF),ma['length']>0x0&&(m4['textures']=ma),mG['length']>0x0&&(m4['images']=mG),mc['length']>0x0&&(m4['shapes']=mc),mR['length']>0x0&&(m4['skeletons']=mR),mj['length']>0x0&&(m4['animations']=mj),mB['length']>0x0&&(m4['nodes']=mB);}return m4['object']=m5,m4;function mz(mq){var mb=[];for(var mL in mq){var my=mq[mL];delete my['metadata'],mb['push'](my);}return mb;}},m1['clone']=function(m2){return new this['constructor']()['copy'](this,m2);},m1['copy']=function(m2,m3){if(void 0x0===m3&&(m3=!0x0),this['name']=m2['name'],this['up']['copy'](m2['up']),this['position']['copy'](m2['position']),this['rotation']['order']=m2['rotation']['order'],this['quaternion']['copy'](m2['quaternion']),this['scale']['copy'](m2['scale']),this['matrix']['copy'](m2['matrix']),this['matrixWorld']['copy'](m2['matrixWorld']),this['matrixAutoUpdate']=m2['matrixAutoUpdate'],this['matrixWorldAutoUpdate']=m2['matrixWorldAutoUpdate'],this['matrixWorldNeedsUpdate']=m2['matrixWorldNeedsUpdate'],this['layers']['mask']=m2['layers']['mask'],this['visible']=m2['visible'],this['castShadow']=m2['castShadow'],this['receiveShadow']=m2['receiveShadow'],this['frustumCulled']=m2['frustumCulled'],this['renderOrder']=m2['renderOrder'],this['animations']=m2['animations']['slice'](),this['userData']=JSON['parse'](JSON['stringify'](m2['userData'])),!0x0===m3)for(var m4=0x0;m4<m2['children']['length'];m4++){var m5=m2['children'][m4];this['add'](m5['clone']());}return this;},m0;}(R['Q']);Z['DEFAULT_UP']=new F['P'](0x0,0x1,0x0),Z['DEFAULT_MATRIX_AUTO_UPDATE']=!0x0,Z['DEFAULT_MATRIX_WORLD_AUTO_UPDATE']=!0x0;},0xd973:(m,H,O)=>{O(0xbf9a);},0xfbe:(m,H,O)=>{O['d'](H,{'O':()=>j});var N=O(0x12e4b),J=O(0x161ea),A=O(0x17417),v=O(0x172d2),F=O(0xb3ef),G=O(0x14f63),R=O(0x1078a),j=function(B){function z(b,L,y){var h;void 0x0===b&&(b=0x1),void 0x0===L&&(L=0x1),void 0x0===y&&(y={}),(h=B['call'](this)||this)['isRenderTarget']=!0x0,h['width']=b,h['height']=L,h['depth']=0x1,h['scissor']=new F['I'](0x0,0x0,b,L),h['scissorTest']=!0x1,h['viewport']=new F['I'](0x0,0x0,b,L);var X={'width':b,'height':L,'depth':0x1};return void 0x0!==y['encoding']&&((0x0,R['mc'])('THREE.WebGLRenderTarget:\x20option.encoding\x20has\x20been\x20replaced\x20by\x20option.colorSpace.'),y['colorSpace']=y['encoding']===v['S2Q']?v['er$']:v['jf0']),y=Object['assign']({'generateMipmaps':!0x1,'internalFormat':null,'minFilter':v['k6q'],'depthBuffer':!0x0,'stencilBuffer':!0x1,'depthTexture':null,'samples':0x0},y),h['texture']=new A['g'](X,y['mapping'],y['wrapS'],y['wrapT'],y['magFilter'],y['minFilter'],y['format'],y['type'],y['anisotropy'],y['colorSpace']),h['texture']['isRenderTargetTexture']=!0x0,h['texture']['flipY']=!0x1,h['texture']['generateMipmaps']=y['generateMipmaps'],h['texture']['internalFormat']=y['internalFormat'],h['depthBuffer']=y['depthBuffer'],h['stencilBuffer']=y['stencilBuffer'],h['depthTexture']=y['depthTexture'],h['samples']=y['samples'],h;}(0x0,N['A'])(z,B);var q=z['prototype'];return q['setSize']=function(b,L,y){void 0x0===y&&(y=0x1),this['width']===b&&this['height']===L&&this['depth']===y||(this['width']=b,this['height']=L,this['depth']=y,this['texture']['image']['width']=b,this['texture']['image']['height']=L,this['texture']['image']['depth']=y,this['dispose']()),this['viewport']['set'](0x0,0x0,b,L),this['scissor']['set'](0x0,0x0,b,L);},q['clone']=function(){return new this['constructor']()['copy'](this);},q['copy']=function(b){this['width']=b['width'],this['height']=b['height'],this['depth']=b['depth'],this['scissor']['copy'](b['scissor']),this['scissorTest']=b['scissorTest'],this['viewport']['copy'](b['viewport']),this['texture']=b['texture']['clone'](),this['texture']['isRenderTargetTexture']=!0x0;var L=Object['assign']({},b['texture']['image']);return this['texture']['source']=new G['k'](L),this['depthBuffer']=b['depthBuffer'],this['stencilBuffer']=b['stencilBuffer'],null!==b['depthTexture']&&(this['depthTexture']=b['depthTexture']['clone']()),this['samples']=b['samples'],this;},q['dispose']=function(){this['dispatchEvent']({'type':'dispose'});},z;}(J['Q']);},0x18a3:(m,H,O)=>{O(0x172d2);},0x4e82:(m,H,O)=>{O(0xbd95);},0x10d2d:(m,H,O)=>{O['d'](H,{'H':()=>A});var u,N=O(0x1078a),J=O(0x4efe),A=(function(){function v(){}return v['getDataURL']=function(F){if(/^data:/i['test'](F['src']))return F['src'];if('undefined'==typeof HTMLCanvasElement)return F['src'];var G;if(F instanceof HTMLCanvasElement)G=F;else{void 0x0===u&&(u=(0x0,N['qq'])('canvas')),u['width']=F['width'],u['height']=F['height'];var c=u['getContext']('2d');F instanceof ImageData?c['putImageData'](F,0x0,0x0):c['drawImage'](F,0x0,0x0,F['width'],F['height']),G=u;}return G['width']>0x800||G['height']>0x800?(console['warn']('THREE.ImageUtils.getDataURL:\x20Image\x20converted\x20to\x20jpg\x20for\x20performance\x20reasons',F),G['toDataURL']('image/jpeg',0.6)):G['toDataURL']('image/png');},v['sRGBToLinear']=function(F){if('undefined'!=typeof HTMLImageElement&&F instanceof HTMLImageElement||'undefined'!=typeof HTMLCanvasElement&&F instanceof HTMLCanvasElement||'undefined'!=typeof ImageBitmap&&F instanceof ImageBitmap){var G=(0x0,N['qq'])('canvas');G['width']=F['width'],G['height']=F['height'];var R=G['getContext']('2d');R['drawImage'](F,0x0,0x0,F['width'],F['height']);for(var j=R['getImageData'](0x0,0x0,F['width'],F['height']),B=j['data'],z=0x0;z<B['length'];z++)B[z]=0xff*(0x0,J['dk'])(B[z]/0xff);return R['putImageData'](j,0x0,0x0),G;}if(F['data']){for(var q=F['data']['slice'](0x0),b=0x0;b<q['length'];b++)q instanceof Uint8Array||q instanceof Uint8ClampedArray?q[b]=Math['floor'](0xff*(0x0,J['dk'])(q[b]/0xff)):q[b]=(0x0,J['dk'])(q[b]);return{'data':q,'width':F['width'],'height':F['height']};}return console['warn']('THREE.ImageUtils.sRGBToLinear():\x20Unsupported\x20image\x20type.\x20No\x20color\x20space\x20conversion\x20applied.'),F;},v;}());},0x10fc5:(H,O,N)=>{N['d'](O,{'B':()=>m2});var J=N(0x172d2),F=N(0x17dfd),G=N(0x16835),R=N(0x1152b),j=N(0x17743),B=N(0x152d9),z=N(0x7026),q=N(0x1008e),L=N(0x169b1),X=N(0xc42c),D=N(0x14baa),K=N(0x131a1),Q=[0.125,0.215,0.35,0.446,0.526,0.582],U=0x14,Y=new j['q'](),W=new L['Q'](),k=null,I=0x0,Z=0x0,V=(0x1+Math['sqrt'](0x5))/0x2,m0=0x1/V,m1=[new q['P'](0x1,0x1,0x1),new q['P'](-0x1,0x1,0x1),new q['P'](0x1,0x1,-0x1),new q['P'](-0x1,0x1,-0x1),new q['P'](0x0,V,m0),new q['P'](0x0,V,-m0),new q['P'](m0,0x0,V),new q['P'](-m0,0x0,V),new q['P'](V,m0,0x0),new q['P'](-V,m0,0x0)],m2=(function(){function m7(m9){this['_renderer']=m9,this['_pingPongRenderTarget']=null,this['_lodMax']=0x0,this['_cubeSize']=0x0,this['_lodPlanes']=[],this['_sizeLods']=[],this['_sigmas']=[],this['_blurMaterial']=null,this['_cubemapMaterial']=null,this['_equirectMaterial']=null,this['_compileMaterial'](this['_blurMaterial']);}var m8=m7['prototype'];return m8['fromScene']=function(m9,mm,me,mH){void 0x0===mm&&(mm=0x0),void 0x0===me&&(me=0.1),void 0x0===mH&&(mH=0x64),k=this['_renderer']['getRenderTarget'](),I=this['_renderer']['getActiveCubeFace'](),Z=this['_renderer']['getActiveMipmapLevel'](),this['_setSize'](0x100);var mO=this['_allocateTargets']();return mO['depthBuffer']=!0x0,this['_sceneToCubeUV'](m9,me,mH,mO),mm>0x0&&this['_blur'](mO,0x0,0x0,mm),this['_applyPMREM'](mO),this['_cleanup'](mO),mO;},m8['fromEquirectangular']=function(m9,mm){return void 0x0===mm&&(mm=null),this['_fromTexture'](m9,mm);},m8['fromCubemap']=function(m9,mm){return void 0x0===mm&&(mm=null),this['_fromTexture'](m9,mm);},m8['compileCubemapShader']=function(){null===this['_cubemapMaterial']&&(this['_cubemapMaterial']=m6(),this['_compileMaterial'](this['_cubemapMaterial']));},m8['compileEquirectangularShader']=function(){null===this['_equirectMaterial']&&(this['_equirectMaterial']=m5(),this['_compileMaterial'](this['_equirectMaterial']));},m8['dispose']=function(){this['_dispose'](),null!==this['_cubemapMaterial']&&this['_cubemapMaterial']['dispose'](),null!==this['_equirectMaterial']&&this['_equirectMaterial']['dispose']();},m8['_setSize']=function(m9){this['_lodMax']=Math['floor'](Math['log2'](m9)),this['_cubeSize']=Math['pow'](0x2,this['_lodMax']);},m8['_dispose']=function(){null!==this['_blurMaterial']&&this['_blurMaterial']['dispose'](),null!==this['_pingPongRenderTarget']&&this['_pingPongRenderTarget']['dispose']();for(var m9=0x0;m9<this['_lodPlanes']['length'];m9++)this['_lodPlanes'][m9]['dispose']();},m8['_cleanup']=function(m9){this['_renderer']['setRenderTarget'](k,I,Z),m9['scissorTest']=!0x1,m4(m9,0x0,0x0,m9['width'],m9['height']);},m8['_fromTexture']=function(m9,mm){m9['mapping']===J['hy7']||m9['mapping']===J['xFO']?this['_setSize'](0x0===m9['image']['length']?0x10:m9['image'][0x0]['width']||m9['image'][0x0]['image']['width']):this['_setSize'](m9['image']['width']/0x4),k=this['_renderer']['getRenderTarget'](),I=this['_renderer']['getActiveCubeFace'](),Z=this['_renderer']['getActiveMipmapLevel']();var me=mm||this['_allocateTargets']();return this['_textureToCubeUV'](m9,me),this['_applyPMREM'](me),this['_cleanup'](me),me;},m8['_allocateTargets']=function(){var m9=0x3*Math['max'](this['_cubeSize'],0x70),mm=0x4*this['_cubeSize'],me={'magFilter':J['k6q'],'minFilter':J['k6q'],'generateMipmaps':!0x1,'type':J['ix0'],'format':J['GWd'],'colorSpace':J['Zr2'],'depthBuffer':!0x1},mH=m3(m9,mm,me);if(null===this['_pingPongRenderTarget']||this['_pingPongRenderTarget']['width']!==m9||this['_pingPongRenderTarget']['height']!==mm){null!==this['_pingPongRenderTarget']&&this['_dispose'](),this['_pingPongRenderTarget']=m3(m9,mm,me);var mO=this['_lodMax'],mu=function(mN){for(var mJ=[],mA=[],mv=[],mF=mN,ma=mN-0x4+0x1+Q['length'],mG=0x0;mG<ma;mG++){var mc=Math['pow'](0x2,mF);mA['push'](mc);var mR=0x1/mc;mG>mN-0x4?mR=Q[mG-mN+0x4-0x1]:0x0===mG&&(mR=0x0),mv['push'](mR);for(var mj=0x1/(mc-0x2),mB=-mj,mz=0x1+mj,mq=[mB,mB,mz,mB,mz,mz,mB,mB,mz,mz,mB,mz],mb=0x6,mL=0x6,my=0x3,mh=0x2,mX=0x1,mC=new Float32Array(my*mL*mb),mT=new Float32Array(mh*mL*mb),mi=new Float32Array(mX*mL*mb),mo=0x0;mo<mb;mo++){var mE=mo%0x3*0x2/0x3-0x1,md=mo>0x2?0x0:-0x1,mD=[mE,md,0x0,mE+0x2/0x3,md,0x0,mE+0x2/0x3,md+0x1,0x0,mE,md,0x0,mE+0x2/0x3,md+0x1,0x0,mE,md+0x1,0x0];mC['set'](mD,my*mL*mo),mT['set'](mq,mh*mL*mo);var mK=[mo,mo,mo,mo,mo,mo];mi['set'](mK,mX*mL*mo);}var mw=new G['L']();mw['setAttribute']('position',new F['TH'](mC,my)),mw['setAttribute']('uv',new F['TH'](mT,mh)),mw['setAttribute']('faceIndex',new F['TH'](mi,mX)),mJ['push'](mw),mF>0x4&&mF--;}return{'lodPlanes':mJ,'sizeLods':mA,'sigmas':mv};}(mO);this['_sizeLods']=mu['sizeLods'],this['_lodPlanes']=mu['lodPlanes'],this['_sigmas']=mu['sigmas'],this['_blurMaterial']=function(mN,mJ,mA){var mv=new Float32Array(U),mF=new q['P'](0x0,0x1,0x0),ma=new z['B']({'name':'SphericalGaussianBlur','defines':{'n':U,'CUBEUV_TEXEL_WIDTH':0x1/mJ,'CUBEUV_TEXEL_HEIGHT':0x1/mA,'CUBEUV_MAX_MIP':mN+'.0'},'uniforms':{'envMap':{'value':null},'samples':{'value':0x1},'weights':{'value':mv},'latitudinal':{'value':!0x1},'dTheta':{'value':0x0},'mipInt':{'value':0x0},'poleAxis':{'value':mF}},'vertexShader':'\x0a\x0a\x09\x09precision\x20mediump\x20float;\x0a\x09\x09precision\x20mediump\x20int;\x0a\x0a\x09\x09attribute\x20float\x20faceIndex;\x0a\x0a\x09\x09varying\x20vec3\x20vOutputDirection;\x0a\x0a\x09\x09//\x20RH\x20coordinate\x20system;\x20PMREM\x20face-indexing\x20convention\x0a\x09\x09vec3\x20getDirection(\x20vec2\x20uv,\x20float\x20face\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x202.0\x20*\x20uv\x20-\x201.0;\x0a\x0a\x09\x09\x09vec3\x20direction\x20=\x20vec3(\x20uv,\x201.0\x20);\x0a\x0a\x09\x09\x09if\x20(\x20face\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.zyx;\x20//\x20(\x201,\x20v,\x20u\x20)\x20pos\x20x\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.xzy;\x0a\x09\x09\x09\x09direction.xz\x20*=\x20-1.0;\x20//\x20(\x20-u,\x201,\x20-v\x20)\x20pos\x20y\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction.x\x20*=\x20-1.0;\x20//\x20(\x20-u,\x20v,\x201\x20)\x20pos\x20z\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x203.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.zyx;\x0a\x09\x09\x09\x09direction.xz\x20*=\x20-1.0;\x20//\x20(\x20-1,\x20v,\x20-u\x20)\x20neg\x20x\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x204.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.xzy;\x0a\x09\x09\x09\x09direction.xy\x20*=\x20-1.0;\x20//\x20(\x20-u,\x20-1,\x20v\x20)\x20neg\x20y\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x205.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction.z\x20*=\x20-1.0;\x20//\x20(\x20u,\x20v,\x20-1\x20)\x20neg\x20z\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return\x20direction;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09vOutputDirection\x20=\x20getDirection(\x20uv,\x20faceIndex\x20);\x0a\x09\x09\x09gl_Position\x20=\x20vec4(\x20position,\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x09','fragmentShader':'\x0a\x0a\x09\x09\x09precision\x20mediump\x20float;\x0a\x09\x09\x09precision\x20mediump\x20int;\x0a\x0a\x09\x09\x09varying\x20vec3\x20vOutputDirection;\x0a\x0a\x09\x09\x09uniform\x20sampler2D\x20envMap;\x0a\x09\x09\x09uniform\x20int\x20samples;\x0a\x09\x09\x09uniform\x20float\x20weights[\x20n\x20];\x0a\x09\x09\x09uniform\x20bool\x20latitudinal;\x0a\x09\x09\x09uniform\x20float\x20dTheta;\x0a\x09\x09\x09uniform\x20float\x20mipInt;\x0a\x09\x09\x09uniform\x20vec3\x20poleAxis;\x0a\x0a\x09\x09\x09#define\x20ENVMAP_TYPE_CUBE_UV\x0a\x09\x09\x09#include\x20<cube_uv_reflection_fragment>\x0a\x0a\x09\x09\x09vec3\x20getSample(\x20float\x20theta,\x20vec3\x20axis\x20)\x20{\x0a\x0a\x09\x09\x09\x09float\x20cosTheta\x20=\x20cos(\x20theta\x20);\x0a\x09\x09\x09\x09//\x20Rodrigues\x27\x20axis-angle\x20rotation\x0a\x09\x09\x09\x09vec3\x20sampleDirection\x20=\x20vOutputDirection\x20*\x20cosTheta\x0a\x09\x09\x09\x09\x09+\x20cross(\x20axis,\x20vOutputDirection\x20)\x20*\x20sin(\x20theta\x20)\x0a\x09\x09\x09\x09\x09+\x20axis\x20*\x20dot(\x20axis,\x20vOutputDirection\x20)\x20*\x20(\x201.0\x20-\x20cosTheta\x20);\x0a\x0a\x09\x09\x09\x09return\x20bilinearCubeUV(\x20envMap,\x20sampleDirection,\x20mipInt\x20);\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09\x09vec3\x20axis\x20=\x20latitudinal\x20?\x20poleAxis\x20:\x20cross(\x20poleAxis,\x20vOutputDirection\x20);\x0a\x0a\x09\x09\x09\x09if\x20(\x20all(\x20equal(\x20axis,\x20vec3(\x200.0\x20)\x20)\x20)\x20)\x20{\x0a\x0a\x09\x09\x09\x09\x09axis\x20=\x20vec3(\x20vOutputDirection.z,\x200.0,\x20-\x20vOutputDirection.x\x20);\x0a\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09axis\x20=\x20normalize(\x20axis\x20);\x0a\x0a\x09\x09\x09\x09gl_FragColor\x20=\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x09\x09\x09\x09gl_FragColor.rgb\x20+=\x20weights[\x200\x20]\x20*\x20getSample(\x200.0,\x20axis\x20);\x0a\x0a\x09\x09\x09\x09for\x20(\x20int\x20i\x20=\x201;\x20i\x20<\x20n;\x20i++\x20)\x20{\x0a\x0a\x09\x09\x09\x09\x09if\x20(\x20i\x20>=\x20samples\x20)\x20{\x0a\x0a\x09\x09\x09\x09\x09\x09break;\x0a\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09float\x20theta\x20=\x20dTheta\x20*\x20float(\x20i\x20);\x0a\x09\x09\x09\x09\x09gl_FragColor.rgb\x20+=\x20weights[\x20i\x20]\x20*\x20getSample(\x20-1.0\x20*\x20theta,\x20axis\x20);\x0a\x09\x09\x09\x09\x09gl_FragColor.rgb\x20+=\x20weights[\x20i\x20]\x20*\x20getSample(\x20theta,\x20axis\x20);\x0a\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09}\x0a\x09\x09','blending':J['XIg'],'depthTest':!0x1,'depthWrite':!0x1});return ma;}(mO,m9,mm);}return mH;},m8['_compileMaterial']=function(m9){var mm=new R['e'](this['_lodPlanes'][0x0],m9);this['_renderer']['compile'](mm,Y);},m8['_sceneToCubeUV']=function(m9,mm,me,mH){var mO=new B['u'](0x5a,0x1,mm,me),mu=[0x1,-0x1,0x1,0x1,0x1,0x1],mN=[0x1,0x1,0x1,-0x1,-0x1,-0x1],mJ=this['_renderer'],mA=mJ['autoClear'],mv=mJ['toneMapping'];mJ['getClearColor'](W),mJ['toneMapping']=J['y_p'],mJ['autoClear']=!0x1;var mF=new D['V']({'name':'PMREM.Background','side':J['hsX'],'depthWrite':!0x1,'depthTest':!0x1}),ma=new R['e'](new K['i'](),mF),mG=!0x1,mc=m9['background'];mc?mc['isColor']&&(mF['color']['copy'](mc),m9['background']=null,mG=!0x0):(mF['color']['copy'](W),mG=!0x0);for(var mR=0x0;mR<0x6;mR++){var mj=mR%0x3;0x0===mj?(mO['up']['set'](0x0,mu[mR],0x0),mO['lookAt'](mN[mR],0x0,0x0)):0x1===mj?(mO['up']['set'](0x0,0x0,mu[mR]),mO['lookAt'](0x0,mN[mR],0x0)):(mO['up']['set'](0x0,mu[mR],0x0),mO['lookAt'](0x0,0x0,mN[mR]));var mB=this['_cubeSize'];m4(mH,mj*mB,mR>0x2?mB:0x0,mB,mB),mJ['setRenderTarget'](mH),mG&&mJ['render'](ma,mO),mJ['render'](m9,mO);}ma['geometry']['dispose'](),ma['material']['dispose'](),mJ['toneMapping']=mv,mJ['autoClear']=mA,m9['background']=mc;},m8['_textureToCubeUV']=function(m9,mm){var me=this['_renderer'],mH=m9['mapping']===J['hy7']||m9['mapping']===J['xFO'];mH?(null===this['_cubemapMaterial']&&(this['_cubemapMaterial']=m6()),this['_cubemapMaterial']['uniforms']['flipEnvMap']['value']=!0x1===m9['isRenderTargetTexture']?-0x1:0x1):null===this['_equirectMaterial']&&(this['_equirectMaterial']=m5());var mO=mH?this['_cubemapMaterial']:this['_equirectMaterial'],mu=new R['e'](this['_lodPlanes'][0x0],mO);mO['uniforms']['envMap']['value']=m9;var mN=this['_cubeSize'];m4(mm,0x0,0x0,0x3*mN,0x2*mN),me['setRenderTarget'](mm),me['render'](mu,Y);},m8['_applyPMREM']=function(m9){var mm=this['_renderer'],me=mm['autoClear'];mm['autoClear']=!0x1;for(var mH=0x1;mH<this['_lodPlanes']['length'];mH++){var mO=Math['sqrt'](this['_sigmas'][mH]*this['_sigmas'][mH]-this['_sigmas'][mH-0x1]*this['_sigmas'][mH-0x1]),mu=m1[(mH-0x1)%m1['length']];this['_blur'](m9,mH-0x1,mH,mO,mu);}mm['autoClear']=me;},m8['_blur']=function(m9,mm,me,mH,mO){var mu=this['_pingPongRenderTarget'];this['_halfBlur'](m9,mu,mm,me,mH,'latitudinal',mO),this['_halfBlur'](mu,m9,me,me,mH,'longitudinal',mO);},m8['_halfBlur']=function(m9,mm,me,mH,mO,mu,mN){var mJ=this['_renderer'],mA=this['_blurMaterial'];'latitudinal'!==mu&&'longitudinal'!==mu&&console['error']('blur\x20direction\x20must\x20be\x20either\x20latitudinal\x20or\x20longitudinal!');var mv=new R['e'](this['_lodPlanes'][mH],mA),mF=mA['uniforms'],ma=this['_sizeLods'][me]-0x1,mG=isFinite(mO)?Math['PI']/(0x2*ma):0x2*Math['PI']/0x27,mc=mO/mG,mR=isFinite(mO)?0x1+Math['floor'](0x3*mc):U;mR>U&&console['warn']('sigmaRadians,\x20'+mO+',\x20is\x20too\x20large\x20and\x20will\x20clip,\x20as\x20it\x20requested\x20'+mR+'\x20samples\x20when\x20the\x20maximum\x20is\x20set\x20to\x20'+U);for(var mj=[],mB=0x0,mz=0x0;mz<U;++mz){var mq=mz/mc,mb=Math['exp'](-mq*mq/0x2);mj['push'](mb),0x0===mz?mB+=mb:mz<mR&&(mB+=0x2*mb);}for(var mL=0x0;mL<mj['length'];mL++)mj[mL]=mj[mL]/mB;mF['envMap']['value']=m9['texture'],mF['samples']['value']=mR,mF['weights']['value']=mj,mF['latitudinal']['value']='latitudinal'===mu,mN&&(mF['poleAxis']['value']=mN);var my=this['_lodMax'];mF['dTheta']['value']=mG,mF['mipInt']['value']=my-me;var mh=this['_sizeLods'][mH];m4(mm,0x3*mh*(mH>my-0x4?mH-my+0x4:0x0),0x4*(this['_cubeSize']-mh),0x3*mh,0x2*mh),mJ['setRenderTarget'](mm),mJ['render'](mv,Y);},m7;}());function m3(m7,m8,m9){var mm=new X['n'](m7,m8,m9);return mm['texture']['mapping']=J['Om'],mm['texture']['name']='PMREM.cubeUv',mm['scissorTest']=!0x0,mm;}function m4(m7,m8,m9,mm,me){m7['viewport']['set'](m8,m9,mm,me),m7['scissor']['set'](m8,m9,mm,me);}function m5(){return new z['B']({'name':'EquirectangularToCubeUV','uniforms':{'envMap':{'value':null}},'vertexShader':'\x0a\x0a\x09\x09precision\x20mediump\x20float;\x0a\x09\x09precision\x20mediump\x20int;\x0a\x0a\x09\x09attribute\x20float\x20faceIndex;\x0a\x0a\x09\x09varying\x20vec3\x20vOutputDirection;\x0a\x0a\x09\x09//\x20RH\x20coordinate\x20system;\x20PMREM\x20face-indexing\x20convention\x0a\x09\x09vec3\x20getDirection(\x20vec2\x20uv,\x20float\x20face\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x202.0\x20*\x20uv\x20-\x201.0;\x0a\x0a\x09\x09\x09vec3\x20direction\x20=\x20vec3(\x20uv,\x201.0\x20);\x0a\x0a\x09\x09\x09if\x20(\x20face\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.zyx;\x20//\x20(\x201,\x20v,\x20u\x20)\x20pos\x20x\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.xzy;\x0a\x09\x09\x09\x09direction.xz\x20*=\x20-1.0;\x20//\x20(\x20-u,\x201,\x20-v\x20)\x20pos\x20y\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction.x\x20*=\x20-1.0;\x20//\x20(\x20-u,\x20v,\x201\x20)\x20pos\x20z\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x203.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.zyx;\x0a\x09\x09\x09\x09direction.xz\x20*=\x20-1.0;\x20//\x20(\x20-1,\x20v,\x20-u\x20)\x20neg\x20x\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x204.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.xzy;\x0a\x09\x09\x09\x09direction.xy\x20*=\x20-1.0;\x20//\x20(\x20-u,\x20-1,\x20v\x20)\x20neg\x20y\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x205.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction.z\x20*=\x20-1.0;\x20//\x20(\x20u,\x20v,\x20-1\x20)\x20neg\x20z\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return\x20direction;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09vOutputDirection\x20=\x20getDirection(\x20uv,\x20faceIndex\x20);\x0a\x09\x09\x09gl_Position\x20=\x20vec4(\x20position,\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x09','fragmentShader':'\x0a\x0a\x09\x09\x09precision\x20mediump\x20float;\x0a\x09\x09\x09precision\x20mediump\x20int;\x0a\x0a\x09\x09\x09varying\x20vec3\x20vOutputDirection;\x0a\x0a\x09\x09\x09uniform\x20sampler2D\x20envMap;\x0a\x0a\x09\x09\x09#include\x20<common>\x0a\x0a\x09\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09\x09vec3\x20outputDirection\x20=\x20normalize(\x20vOutputDirection\x20);\x0a\x09\x09\x09\x09vec2\x20uv\x20=\x20equirectUv(\x20outputDirection\x20);\x0a\x0a\x09\x09\x09\x09gl_FragColor\x20=\x20vec4(\x20texture2D\x20(\x20envMap,\x20uv\x20).rgb,\x201.0\x20);\x0a\x0a\x09\x09\x09}\x0a\x09\x09','blending':J['XIg'],'depthTest':!0x1,'depthWrite':!0x1});}function m6(){return new z['B']({'name':'CubemapToCubeUV','uniforms':{'envMap':{'value':null},'flipEnvMap':{'value':-0x1}},'vertexShader':'\x0a\x0a\x09\x09precision\x20mediump\x20float;\x0a\x09\x09precision\x20mediump\x20int;\x0a\x0a\x09\x09attribute\x20float\x20faceIndex;\x0a\x0a\x09\x09varying\x20vec3\x20vOutputDirection;\x0a\x0a\x09\x09//\x20RH\x20coordinate\x20system;\x20PMREM\x20face-indexing\x20convention\x0a\x09\x09vec3\x20getDirection(\x20vec2\x20uv,\x20float\x20face\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x202.0\x20*\x20uv\x20-\x201.0;\x0a\x0a\x09\x09\x09vec3\x20direction\x20=\x20vec3(\x20uv,\x201.0\x20);\x0a\x0a\x09\x09\x09if\x20(\x20face\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.zyx;\x20//\x20(\x201,\x20v,\x20u\x20)\x20pos\x20x\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.xzy;\x0a\x09\x09\x09\x09direction.xz\x20*=\x20-1.0;\x20//\x20(\x20-u,\x201,\x20-v\x20)\x20pos\x20y\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction.x\x20*=\x20-1.0;\x20//\x20(\x20-u,\x20v,\x201\x20)\x20pos\x20z\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x203.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.zyx;\x0a\x09\x09\x09\x09direction.xz\x20*=\x20-1.0;\x20//\x20(\x20-1,\x20v,\x20-u\x20)\x20neg\x20x\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x204.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction\x20=\x20direction.xzy;\x0a\x09\x09\x09\x09direction.xy\x20*=\x20-1.0;\x20//\x20(\x20-u,\x20-1,\x20v\x20)\x20neg\x20y\x0a\x0a\x09\x09\x09}\x20else\x20if\x20(\x20face\x20==\x205.0\x20)\x20{\x0a\x0a\x09\x09\x09\x09direction.z\x20*=\x20-1.0;\x20//\x20(\x20u,\x20v,\x20-1\x20)\x20neg\x20z\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return\x20direction;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09vOutputDirection\x20=\x20getDirection(\x20uv,\x20faceIndex\x20);\x0a\x09\x09\x09gl_Position\x20=\x20vec4(\x20position,\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x09','fragmentShader':'\x0a\x0a\x09\x09\x09precision\x20mediump\x20float;\x0a\x09\x09\x09precision\x20mediump\x20int;\x0a\x0a\x09\x09\x09uniform\x20float\x20flipEnvMap;\x0a\x0a\x09\x09\x09varying\x20vec3\x20vOutputDirection;\x0a\x0a\x09\x09\x09uniform\x20samplerCube\x20envMap;\x0a\x0a\x09\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09\x09gl_FragColor\x20=\x20textureCube(\x20envMap,\x20vec3(\x20flipEnvMap\x20*\x20vOutputDirection.x,\x20vOutputDirection.yz\x20)\x20);\x0a\x0a\x09\x09\x09}\x0a\x09\x09','blending':J['XIg'],'depthTest':!0x1,'depthWrite':!0x1});}},0xf066:()=>{},0x52dc:(m,H,O)=>{O(0xbd95),O(0x1264d),O(0x1008e),O(0x11ded);},0x6bf:(m,H,O)=>{O(0x52dc),O(0x144de);},0xf750:(m,H,O)=>{O(0x1264d),O(0x6bf),O(0x134b),O(0x14890),O(0x1d6e),O(0x9a92),O(0x3c6d);},0x11562:(m,H,O)=>{O(0xf750),O(0xbd95);},0x1819d:(m,H,O)=>{O(0x169b1),O(0xf750),O(0x11562),O(0xf066);},0x1d6e:(m,H,O)=>{O(0x52dc),O(0x1264d);},0x144de:(m,H,O)=>{O(0x134b),O(0x1008e),O(0x52dc),(O(0x1d6e),O(0x3c6d),O(0x9a92),O(0x14890));},0x134b:(m,H,O)=>{O(0x52dc),O(0x1264d);},0x3c6d:(m,H,O)=>{O(0x1264d),O(0x52dc);},0x9a92:(m,H,O)=>{O(0x52dc),O(0x1264d);},0x14890:(m,H,O)=>{O(0x52dc),O(0x1264d);},0x131a1:(m,H,O)=>{O['d'](H,{'i':()=>v});var u=O(0x12e4b),N=O(0x16835),J=O(0x17dfd),A=O(0x1008e),v=function(F){function G(R,j,B,z,q,b){var L;void 0x0===R&&(R=0x1),void 0x0===j&&(j=0x1),void 0x0===B&&(B=0x1),void 0x0===z&&(z=0x1),void 0x0===q&&(q=0x1),void 0x0===b&&(b=0x1),(L=F['call'](this)||this)['type']='BoxGeometry',L['parameters']={'width':R,'height':j,'depth':B,'widthSegments':z,'heightSegments':q,'depthSegments':b};var y=L;z=Math['floor'](z),q=Math['floor'](q),b=Math['floor'](b);var X=[],C=[],T=[],E=[],D=0x0,K=0x0;function w(Q,Y,W,k,Z,V,m0,m1,m2,m3,m4){for(var m5=V/m2,m6=m0/m3,m7=V/0x2,m8=m0/0x2,m9=m1/0x2,mm=m2+0x1,me=m3+0x1,mH=0x0,mO=0x0,mu=new A['P'](),mN=0x0;mN<me;mN++)for(var mJ=mN*m6-m8,mA=0x0;mA<mm;mA++){var mv=mA*m5-m7;mu[Q]=mv*k,mu[Y]=mJ*Z,mu[W]=m9,C['push'](mu['x'],mu['y'],mu['z']),mu[Q]=0x0,mu[Y]=0x0,mu[W]=m1>0x0?0x1:-0x1,T['push'](mu['x'],mu['y'],mu['z']),E['push'](mA/m2),E['push'](0x1-mN/m3),mH+=0x1;}for(var mF=0x0;mF<m3;mF++)for(var ma=0x0;ma<m2;ma++){var mG=D+ma+mm*mF,mc=D+ma+mm*(mF+0x1),mR=D+(ma+0x1)+mm*(mF+0x1),mj=D+(ma+0x1)+mm*mF;X['push'](mG,mc,mj),X['push'](mc,mR,mj),mO+=0x6;}y['addGroup'](K,mO,m4),K+=mO,D+=mH;}return w('z','y','x',-0x1,-0x1,B,j,R,b,q,0x0),w('z','y','x',0x1,-0x1,B,j,-R,b,q,0x1),w('x','z','y',0x1,0x1,R,B,j,z,b,0x2),w('x','z','y',0x1,-0x1,R,B,-j,z,b,0x3),w('x','y','z',0x1,-0x1,R,j,B,z,q,0x4),w('x','y','z',-0x1,-0x1,R,j,-B,z,q,0x5),L['setIndex'](X),L['setAttribute']('position',new J['qt'](C,0x3)),L['setAttribute']('normal',new J['qt'](T,0x3)),L['setAttribute']('uv',new J['qt'](E,0x2)),L;}return(0x0,u['A'])(G,F),G['prototype']['copy']=function(c){return F['prototype']['copy']['call'](this,c),this['parameters']=Object['assign']({},c['parameters']),this;},G['fromJSON']=function(c){return new G(c['width'],c['height'],c['depth'],c['widthSegments'],c['heightSegments'],c['depthSegments']);},G;}(N['L']);},0x39e3:(m,H,O)=>{O(0xf750),O(0x13a3a);},0xd666:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x1008e),O(0x1264d);},0x16f21:(m,H,O)=>{O(0xf824);},0x3450:(m,H,O)=>{O(0xc538);},0x16eca:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0xbd95),O(0x37c8),O(0x1008e);},0x3071:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x144de),O(0x1264d),O(0x1008e),O(0x11562),O(0xf066);},0xf151:(m,H,O)=>{O(0xc538);},0x13a3a:(m,H,O)=>{O(0x17dfd),O(0x16835),O(0x1008e),O(0x1264d),O(0xbd95);},0xbccb:(m,H,O)=>{O(0xc538);},0x101aa:(m,H,O)=>{O['d'](H,{'b':()=>A});var u=O(0x12e4b),N=O(0x16835),J=O(0x17dfd),A=function(v){function F(G,R,j,B){var z;void 0x0===G&&(G=0x1),void 0x0===R&&(R=0x1),void 0x0===j&&(j=0x1),void 0x0===B&&(B=0x1),(z=v['call'](this)||this)['type']='PlaneGeometry',z['parameters']={'width':G,'height':R,'widthSegments':j,'heightSegments':B};for(var q=G/0x2,L=R/0x2,X=Math['floor'](j),C=Math['floor'](B),D=X+0x1,K=C+0x1,Q=G/X,U=R/C,Y=[],W=[],k=[],I=[],Z=0x0;Z<K;Z++)for(var V=Z*U-L,m0=0x0;m0<D;m0++){var m1=m0*Q-q;W['push'](m1,-V,0x0),k['push'](0x0,0x0,0x1),I['push'](m0/X),I['push'](0x1-Z/C);}for(var m2=0x0;m2<C;m2++)for(var m3=0x0;m3<X;m3++){var m4=m3+D*m2,m5=m3+D*(m2+0x1),m6=m3+0x1+D*(m2+0x1),m7=m3+0x1+D*m2;Y['push'](m4,m5,m7),Y['push'](m5,m6,m7);}return z['setIndex'](Y),z['setAttribute']('position',new J['qt'](W,0x3)),z['setAttribute']('normal',new J['qt'](k,0x3)),z['setAttribute']('uv',new J['qt'](I,0x2)),z;}return(0x0,u['A'])(F,v),F['prototype']['copy']=function(G){return v['prototype']['copy']['call'](this,G),this['parameters']=Object['assign']({},G['parameters']),this;},F['fromJSON']=function(G){return new F(G['width'],G['height'],G['widthSegments'],G['heightSegments']);},F;}(N['L']);},0xc538:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x1008e),O(0x1264d);},0x12bd8:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x1264d),O(0x1008e);},0xe96d:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x11562),O(0xf066),O(0x1264d);},0x9a9c:(m,H,O)=>{O(0xc538);},0x143d1:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x1008e);},0x82fb:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x1008e);},0x844c:(m,H,O)=>{O(0x16835),O(0x17dfd),O(0x144de),O(0x1264d),O(0x1008e);},0xcde0:(m,H,O)=>{O(0x1499a),O(0x617),O(0x17dfd),O(0x16835),O(0x169b1);},0x17e6f:(m,H,O)=>{O(0x1499a),O(0x617),O(0x17dfd),O(0x16835);},0x1461c:(m,H,O)=>{O(0x7002),O(0x1499a),O(0x617),O(0x17dfd),O(0x16835);},0xb396:(m,H,O)=>{O(0xab79),O(0x1008e),O(0x1499a),O(0x169b1),O(0x617),O(0x16835),O(0x17dfd);},0x8d79:(m,H,O)=>{O(0x1008e),O(0x16f53),O(0x7404),O(0x17dfd),O(0x16835),O(0x617);},0x14b85:(m,H,O)=>{O(0x1499a),O(0x617),O(0x17dfd),O(0x16835),O(0x169b1);},0x71a1:(m,H,O)=>{O(0x1008e),O(0x169b1),O(0x16f53),O(0x1152b),O(0x14baa),O(0xbccb),O(0x17dfd);},0x1a2f:(m,H,O)=>{O(0x7404),O(0x1152b),O(0x617),O(0x14baa),O(0x17dfd),O(0x16835);},0x17c23:(m,H,O)=>{O(0x1152b),O(0x14baa),O(0x11397);},0x7ebd:(m,H,O)=>{O(0x1499a),O(0x617),O(0x17dfd),O(0x16835),O(0x169b1);},0x7396:(m,H,O)=>{O(0x1499a),O(0x11ded),O(0x617),O(0x169b1),O(0x1008e),O(0x16835),O(0x17dfd);},0x15281:(m,H,O)=>{O(0x1008e),O(0x16f53),O(0x1499a),O(0x617),O(0x17dfd),O(0x16835);},0x1503f:(m,H,O)=>{O(0xe3ac),O(0xb8f1);},0x5eb0:(m,H,O)=>{O(0xb8f1);},0xd109:(m,H,O)=>{O(0x4fda),O(0x16e3b),O(0x1191);},0x1708b:(m,H,O)=>{O(0x79b5),O(0x1008e),O(0x17dfd),O(0x16835),O(0x16e3b),O(0x1191),O(0x12e6c),O(0x76e),O(0xd3e8),O(0x8222),O(0x1078a);},0x350f:(m,H,O)=>{O(0x172d2),O(0x16e3b),O(0x308),O(0x1191);},0x8558:(m,H,O)=>{O(0x172d2),O(0x16e3b),O(0x2277),O(0x1191);},0x6235:(m,H,O)=>{O['d'](H,{'h':()=>u});var u=new function(N,J,A){var v=this,F=!0x1,G=0x0,R=0x0,j=void 0x0,B=[];this['onStart']=void 0x0,this['onLoad']=N,this['onProgress']=J,this['onError']=A,this['itemStart']=function(z){R++,!0x1===F&&void 0x0!==v['onStart']&&v['onStart'](z,G,R),F=!0x0;},this['itemEnd']=function(z){G++,void 0x0!==v['onProgress']&&v['onProgress'](z,G,R),G===R&&(F=!0x1,void 0x0!==v['onLoad']&&v['onLoad']());},this['itemError']=function(z){void 0x0!==v['onError']&&v['onError'](z);},this['resolveURL']=function(z){return j?j(z):z;},this['setURLModifier']=function(z){return j=z,this;},this['addHandler']=function(z,q){return B['push'](z,q),this;},this['removeHandler']=function(z){var q=B['indexOf'](z);return-0x1!==q&&B['splice'](q,0x2),this;},this['getHandler']=function(z){for(var q=0x0,b=B['length'];q<b;q+=0x2){var L=B[q],y=B[q+0x1];if(L['global']&&(L['lastIndex']=0x0),L['test'](z))return y;}return null;};}();},0x1036c:(m,H,O)=>{O(0x169b1),O(0x1264d),O(0x1008e),O(0xb3ef),O(0x3e78),O(0x11ded),O(0x16e3b),O(0x1191),O(0x13eec);},0x16d92:(m,H,O)=>{O(0xd5e4);var u=O(0x172d2);O(0x76e),O(0x169b1),O(0x16f53),O(0x658b),O(0x4bd8),O(0xad70),O(0x137fb),O(0xf5e1),O(0x7404),O(0x11f76),O(0x1499a),O(0x138bf),O(0x1152b),O(0x162d1),O(0xad2c),O(0x8fb1),O(0x11562),O(0x12331),O(0xb9f2),O(0x31f1),O(0x10c9e),O(0x12c97),O(0x1535f),O(0x1348d),O(0x5eb0),O(0x1503f),O(0x17743),O(0x152d9),O(0x1ea9),O(0xb12c),O(0x17417),O(0x14f63),O(0x2277),O(0x14b92),O(0x6235),O(0x4fda),O(0x1036c),O(0x1708b),O(0x1191),O(0x16e3b),O(0x567e),O(0x1078a),O(0x7002),O(0x79b5),u['UTZ'],u['hy7'],u['xFO'],u['wfO'],u['uV5'],u['Om'],u['GJx'],u['ghU'],u['kTW'],u['hxR'],u['pHI'],u['Cfg'],u['k6q'],u['kRr'],u['$_I'];},0x11396:(m,H,O)=>{O(0x617);},0x10849:(m,H,O)=>{O['d'](H,{'i':()=>j});var N=O(0x14124),J=O(0x12e4b),A=O(0x169b1),v=O(0x161ea),F=O(0x172d2),G=O(0xbd95),R=0x0,j=function(B){function z(){var b;return(b=B['call'](this)||this)['isMaterial']=!0x0,Object['defineProperty'](b,'id',{'value':R++}),b['uuid']=G['lk'](),b['name']='',b['type']='Material',b['blending']=F['NTi'],b['side']=F['hB5'],b['vertexColors']=!0x1,b['opacity']=0x1,b['transparent']=!0x1,b['alphaHash']=!0x1,b['blendSrc']=F['ie2'],b['blendDst']=F['OuU'],b['blendEquation']=F['gO9'],b['blendSrcAlpha']=null,b['blendDstAlpha']=null,b['blendEquationAlpha']=null,b['blendColor']=new A['Q'](0x0,0x0,0x0),b['blendAlpha']=0x0,b['depthFunc']=F['xSv'],b['depthTest']=!0x0,b['depthWrite']=!0x0,b['stencilWriteMask']=0xff,b['stencilFunc']=F['sKt'],b['stencilRef']=0x0,b['stencilFuncMask']=0xff,b['stencilFail']=F['VVr'],b['stencilZFail']=F['VVr'],b['stencilZPass']=F['VVr'],b['stencilWrite']=!0x1,b['clippingPlanes']=null,b['clipIntersection']=!0x1,b['clipShadows']=!0x1,b['shadowSide']=null,b['colorWrite']=!0x0,b['precision']=null,b['polygonOffset']=!0x1,b['polygonOffsetFactor']=0x0,b['polygonOffsetUnits']=0x0,b['dithering']=!0x1,b['alphaToCoverage']=!0x1,b['premultipliedAlpha']=!0x1,b['forceSinglePass']=!0x1,b['visible']=!0x0,b['toneMapped']=!0x0,b['userData']={},b['version']=0x0,b['_alphaTest']=0x0,b;}(0x0,J['A'])(z,B);var q=z['prototype'];return q['onBuild']=function(){},q['onBeforeRender']=function(){},q['onBeforeCompile']=function(){},q['customProgramCacheKey']=function(){return this['onBeforeCompile']['toString']();},q['setValues']=function(b){if(void 0x0!==b)for(var L in b){var y=b[L];if(void 0x0!==y){var h=this[L];void 0x0!==h?h&&h['isColor']?h['set'](y):h&&h['isVector3']&&y&&y['isVector3']?h['copy'](y):this[L]=y:console['warn']('THREE.Material:\x20\x27'+L+'\x27\x20is\x20not\x20a\x20property\x20of\x20THREE.'+this['type']+'.');}else console['warn']('THREE.Material:\x20parameter\x20\x27'+L+'\x27\x20has\x20value\x20of\x20undefined.');}},q['toJSON']=function(b){var L=void 0x0===b||'string'==typeof b;L&&(b={'textures':{},'images':{}});var y={'metadata':{'version':4.6,'type':'Material','generator':'Material.toJSON'}};function h(T){var E=[];for(var d in T){var D=T[d];delete D['metadata'],E['push'](D);}return E;}if(y['uuid']=this['uuid'],y['type']=this['type'],''!==this['name']&&(y['name']=this['name']),this['color']&&this['color']['isColor']&&(y['color']=this['color']['getHex']()),void 0x0!==this['roughness']&&(y['roughness']=this['roughness']),void 0x0!==this['metalness']&&(y['metalness']=this['metalness']),void 0x0!==this['sheen']&&(y['sheen']=this['sheen']),this['sheenColor']&&this['sheenColor']['isColor']&&(y['sheenColor']=this['sheenColor']['getHex']()),void 0x0!==this['sheenRoughness']&&(y['sheenRoughness']=this['sheenRoughness']),this['emissive']&&this['emissive']['isColor']&&(y['emissive']=this['emissive']['getHex']()),this['emissiveIntensity']&&0x1!==this['emissiveIntensity']&&(y['emissiveIntensity']=this['emissiveIntensity']),this['specular']&&this['specular']['isColor']&&(y['specular']=this['specular']['getHex']()),void 0x0!==this['specularIntensity']&&(y['specularIntensity']=this['specularIntensity']),this['specularColor']&&this['specularColor']['isColor']&&(y['specularColor']=this['specularColor']['getHex']()),void 0x0!==this['shininess']&&(y['shininess']=this['shininess']),void 0x0!==this['clearcoat']&&(y['clearcoat']=this['clearcoat']),void 0x0!==this['clearcoatRoughness']&&(y['clearcoatRoughness']=this['clearcoatRoughness']),this['clearcoatMap']&&this['clearcoatMap']['isTexture']&&(y['clearcoatMap']=this['clearcoatMap']['toJSON'](b)['uuid']),this['clearcoatRoughnessMap']&&this['clearcoatRoughnessMap']['isTexture']&&(y['clearcoatRoughnessMap']=this['clearcoatRoughnessMap']['toJSON'](b)['uuid']),this['clearcoatNormalMap']&&this['clearcoatNormalMap']['isTexture']&&(y['clearcoatNormalMap']=this['clearcoatNormalMap']['toJSON'](b)['uuid'],y['clearcoatNormalScale']=this['clearcoatNormalScale']['toArray']()),void 0x0!==this['iridescence']&&(y['iridescence']=this['iridescence']),void 0x0!==this['iridescenceIOR']&&(y['iridescenceIOR']=this['iridescenceIOR']),void 0x0!==this['iridescenceThicknessRange']&&(y['iridescenceThicknessRange']=this['iridescenceThicknessRange']),this['iridescenceMap']&&this['iridescenceMap']['isTexture']&&(y['iridescenceMap']=this['iridescenceMap']['toJSON'](b)['uuid']),this['iridescenceThicknessMap']&&this['iridescenceThicknessMap']['isTexture']&&(y['iridescenceThicknessMap']=this['iridescenceThicknessMap']['toJSON'](b)['uuid']),void 0x0!==this['anisotropy']&&(y['anisotropy']=this['anisotropy']),void 0x0!==this['anisotropyRotation']&&(y['anisotropyRotation']=this['anisotropyRotation']),this['anisotropyMap']&&this['anisotropyMap']['isTexture']&&(y['anisotropyMap']=this['anisotropyMap']['toJSON'](b)['uuid']),this['map']&&this['map']['isTexture']&&(y['map']=this['map']['toJSON'](b)['uuid']),this['matcap']&&this['matcap']['isTexture']&&(y['matcap']=this['matcap']['toJSON'](b)['uuid']),this['alphaMap']&&this['alphaMap']['isTexture']&&(y['alphaMap']=this['alphaMap']['toJSON'](b)['uuid']),this['lightMap']&&this['lightMap']['isTexture']&&(y['lightMap']=this['lightMap']['toJSON'](b)['uuid'],y['lightMapIntensity']=this['lightMapIntensity']),this['aoMap']&&this['aoMap']['isTexture']&&(y['aoMap']=this['aoMap']['toJSON'](b)['uuid'],y['aoMapIntensity']=this['aoMapIntensity']),this['bumpMap']&&this['bumpMap']['isTexture']&&(y['bumpMap']=this['bumpMap']['toJSON'](b)['uuid'],y['bumpScale']=this['bumpScale']),this['normalMap']&&this['normalMap']['isTexture']&&(y['normalMap']=this['normalMap']['toJSON'](b)['uuid'],y['normalMapType']=this['normalMapType'],y['normalScale']=this['normalScale']['toArray']()),this['displacementMap']&&this['displacementMap']['isTexture']&&(y['displacementMap']=this['displacementMap']['toJSON'](b)['uuid'],y['displacementScale']=this['displacementScale'],y['displacementBias']=this['displacementBias']),this['roughnessMap']&&this['roughnessMap']['isTexture']&&(y['roughnessMap']=this['roughnessMap']['toJSON'](b)['uuid']),this['metalnessMap']&&this['metalnessMap']['isTexture']&&(y['metalnessMap']=this['metalnessMap']['toJSON'](b)['uuid']),this['emissiveMap']&&this['emissiveMap']['isTexture']&&(y['emissiveMap']=this['emissiveMap']['toJSON'](b)['uuid']),this['specularMap']&&this['specularMap']['isTexture']&&(y['specularMap']=this['specularMap']['toJSON'](b)['uuid']),this['specularIntensityMap']&&this['specularIntensityMap']['isTexture']&&(y['specularIntensityMap']=this['specularIntensityMap']['toJSON'](b)['uuid']),this['specularColorMap']&&this['specularColorMap']['isTexture']&&(y['specularColorMap']=this['specularColorMap']['toJSON'](b)['uuid']),this['envMap']&&this['envMap']['isTexture']&&(y['envMap']=this['envMap']['toJSON'](b)['uuid'],void 0x0!==this['combine']&&(y['combine']=this['combine'])),void 0x0!==this['envMapIntensity']&&(y['envMapIntensity']=this['envMapIntensity']),void 0x0!==this['reflectivity']&&(y['reflectivity']=this['reflectivity']),void 0x0!==this['refractionRatio']&&(y['refractionRatio']=this['refractionRatio']),this['gradientMap']&&this['gradientMap']['isTexture']&&(y['gradientMap']=this['gradientMap']['toJSON'](b)['uuid']),void 0x0!==this['transmission']&&(y['transmission']=this['transmission']),this['transmissionMap']&&this['transmissionMap']['isTexture']&&(y['transmissionMap']=this['transmissionMap']['toJSON'](b)['uuid']),void 0x0!==this['thickness']&&(y['thickness']=this['thickness']),this['thicknessMap']&&this['thicknessMap']['isTexture']&&(y['thicknessMap']=this['thicknessMap']['toJSON'](b)['uuid']),void 0x0!==this['attenuationDistance']&&this['attenuationDistance']!==0x1/0x0&&(y['attenuationDistance']=this['attenuationDistance']),void 0x0!==this['attenuationColor']&&(y['attenuationColor']=this['attenuationColor']['getHex']()),void 0x0!==this['size']&&(y['size']=this['size']),null!==this['shadowSide']&&(y['shadowSide']=this['shadowSide']),void 0x0!==this['sizeAttenuation']&&(y['sizeAttenuation']=this['sizeAttenuation']),this['blending']!==F['NTi']&&(y['blending']=this['blending']),this['side']!==F['hB5']&&(y['side']=this['side']),!0x0===this['vertexColors']&&(y['vertexColors']=!0x0),this['opacity']<0x1&&(y['opacity']=this['opacity']),!0x0===this['transparent']&&(y['transparent']=!0x0),this['blendSrc']!==F['ie2']&&(y['blendSrc']=this['blendSrc']),this['blendDst']!==F['OuU']&&(y['blendDst']=this['blendDst']),this['blendEquation']!==F['gO9']&&(y['blendEquation']=this['blendEquation']),null!==this['blendSrcAlpha']&&(y['blendSrcAlpha']=this['blendSrcAlpha']),null!==this['blendDstAlpha']&&(y['blendDstAlpha']=this['blendDstAlpha']),null!==this['blendEquationAlpha']&&(y['blendEquationAlpha']=this['blendEquationAlpha']),this['blendColor']&&this['blendColor']['isColor']&&(y['blendColor']=this['blendColor']['getHex']()),0x0!==this['blendAlpha']&&(y['blendAlpha']=this['blendAlpha']),this['depthFunc']!==F['xSv']&&(y['depthFunc']=this['depthFunc']),!0x1===this['depthTest']&&(y['depthTest']=this['depthTest']),!0x1===this['depthWrite']&&(y['depthWrite']=this['depthWrite']),!0x1===this['colorWrite']&&(y['colorWrite']=this['colorWrite']),0xff!==this['stencilWriteMask']&&(y['stencilWriteMask']=this['stencilWriteMask']),this['stencilFunc']!==F['sKt']&&(y['stencilFunc']=this['stencilFunc']),0x0!==this['stencilRef']&&(y['stencilRef']=this['stencilRef']),0xff!==this['stencilFuncMask']&&(y['stencilFuncMask']=this['stencilFuncMask']),this['stencilFail']!==F['VVr']&&(y['stencilFail']=this['stencilFail']),this['stencilZFail']!==F['VVr']&&(y['stencilZFail']=this['stencilZFail']),this['stencilZPass']!==F['VVr']&&(y['stencilZPass']=this['stencilZPass']),!0x0===this['stencilWrite']&&(y['stencilWrite']=this['stencilWrite']),void 0x0!==this['rotation']&&0x0!==this['rotation']&&(y['rotation']=this['rotation']),!0x0===this['polygonOffset']&&(y['polygonOffset']=!0x0),0x0!==this['polygonOffsetFactor']&&(y['polygonOffsetFactor']=this['polygonOffsetFactor']),0x0!==this['polygonOffsetUnits']&&(y['polygonOffsetUnits']=this['polygonOffsetUnits']),void 0x0!==this['linewidth']&&0x1!==this['linewidth']&&(y['linewidth']=this['linewidth']),void 0x0!==this['dashSize']&&(y['dashSize']=this['dashSize']),void 0x0!==this['gapSize']&&(y['gapSize']=this['gapSize']),void 0x0!==this['scale']&&(y['scale']=this['scale']),!0x0===this['dithering']&&(y['dithering']=!0x0),this['alphaTest']>0x0&&(y['alphaTest']=this['alphaTest']),!0x0===this['alphaHash']&&(y['alphaHash']=!0x0),!0x0===this['alphaToCoverage']&&(y['alphaToCoverage']=!0x0),!0x0===this['premultipliedAlpha']&&(y['premultipliedAlpha']=!0x0),!0x0===this['forceSinglePass']&&(y['forceSinglePass']=!0x0),!0x0===this['wireframe']&&(y['wireframe']=!0x0),this['wireframeLinewidth']>0x1&&(y['wireframeLinewidth']=this['wireframeLinewidth']),'round'!==this['wireframeLinecap']&&(y['wireframeLinecap']=this['wireframeLinecap']),'round'!==this['wireframeLinejoin']&&(y['wireframeLinejoin']=this['wireframeLinejoin']),!0x0===this['flatShading']&&(y['flatShading']=!0x0),!0x1===this['visible']&&(y['visible']=!0x1),!0x1===this['toneMapped']&&(y['toneMapped']=!0x1),!0x1===this['fog']&&(y['fog']=!0x1),Object['keys'](this['userData'])['length']>0x0&&(y['userData']=this['userData']),L){var X=h(b['textures']),C=h(b['images']);X['length']>0x0&&(y['textures']=X),C['length']>0x0&&(y['images']=C);}return y;},q['clone']=function(){return new this['constructor']()['copy'](this);},q['copy']=function(b){this['name']=b['name'],this['blending']=b['blending'],this['side']=b['side'],this['vertexColors']=b['vertexColors'],this['opacity']=b['opacity'],this['transparent']=b['transparent'],this['blendSrc']=b['blendSrc'],this['blendDst']=b['blendDst'],this['blendEquation']=b['blendEquation'],this['blendSrcAlpha']=b['blendSrcAlpha'],this['blendDstAlpha']=b['blendDstAlpha'],this['blendEquationAlpha']=b['blendEquationAlpha'],this['blendColor']['copy'](b['blendColor']),this['blendAlpha']=b['blendAlpha'],this['depthFunc']=b['depthFunc'],this['depthTest']=b['depthTest'],this['depthWrite']=b['depthWrite'],this['stencilWriteMask']=b['stencilWriteMask'],this['stencilFunc']=b['stencilFunc'],this['stencilRef']=b['stencilRef'],this['stencilFuncMask']=b['stencilFuncMask'],this['stencilFail']=b['stencilFail'],this['stencilZFail']=b['stencilZFail'],this['stencilZPass']=b['stencilZPass'],this['stencilWrite']=b['stencilWrite'];var L=b['clippingPlanes'],y=null;if(null!==L){var h=L['length'];y=new Array(h);for(var X=0x0;X!==h;++X)y[X]=L[X]['clone']();}return this['clippingPlanes']=y,this['clipIntersection']=b['clipIntersection'],this['clipShadows']=b['clipShadows'],this['shadowSide']=b['shadowSide'],this['colorWrite']=b['colorWrite'],this['precision']=b['precision'],this['polygonOffset']=b['polygonOffset'],this['polygonOffsetFactor']=b['polygonOffsetFactor'],this['polygonOffsetUnits']=b['polygonOffsetUnits'],this['dithering']=b['dithering'],this['alphaTest']=b['alphaTest'],this['alphaHash']=b['alphaHash'],this['alphaToCoverage']=b['alphaToCoverage'],this['premultipliedAlpha']=b['premultipliedAlpha'],this['forceSinglePass']=b['forceSinglePass'],this['visible']=b['visible'],this['toneMapped']=b['toneMapped'],this['userData']=JSON['parse'](JSON['stringify'](b['userData'])),this;},q['dispose']=function(){this['dispatchEvent']({'type':'dispose'});},(0x0,N['A'])(z,[{'key':'alphaTest','get':function(){return this['_alphaTest'];},'set':function(b){this['_alphaTest']>0x0!=b>0x0&&this['version']++,this['_alphaTest']=b;}},{'key':'needsUpdate','set':function(b){!0x0===b&&this['version']++;}}]);}(v['Q']);},0x14baa:(m,H,O)=>{O['d'](H,{'V':()=>v});var u=O(0x12e4b),N=O(0x10849),J=O(0x172d2),A=O(0x169b1),v=function(F){function G(c){var R;return(R=F['call'](this)||this)['isMeshBasicMaterial']=!0x0,R['type']='MeshBasicMaterial',R['color']=new A['Q'](0xffffff),R['map']=null,R['lightMap']=null,R['lightMapIntensity']=0x1,R['aoMap']=null,R['aoMapIntensity']=0x1,R['specularMap']=null,R['alphaMap']=null,R['envMap']=null,R['combine']=J['caT'],R['reflectivity']=0x1,R['refractionRatio']=0.98,R['wireframe']=!0x1,R['wireframeLinewidth']=0x1,R['wireframeLinecap']='round',R['wireframeLinejoin']='round',R['fog']=!0x0,R['setValues'](c),R;}return(0x0,u['A'])(G,F),G['prototype']['copy']=function(c){return F['prototype']['copy']['call'](this,c),this['color']['copy'](c['color']),this['map']=c['map'],this['lightMap']=c['lightMap'],this['lightMapIntensity']=c['lightMapIntensity'],this['aoMap']=c['aoMap'],this['aoMapIntensity']=c['aoMapIntensity'],this['specularMap']=c['specularMap'],this['alphaMap']=c['alphaMap'],this['envMap']=c['envMap'],this['combine']=c['combine'],this['reflectivity']=c['reflectivity'],this['refractionRatio']=c['refractionRatio'],this['wireframe']=c['wireframe'],this['wireframeLinewidth']=c['wireframeLinewidth'],this['wireframeLinecap']=c['wireframeLinecap'],this['wireframeLinejoin']=c['wireframeLinejoin'],this['fog']=c['fog'],this;},G;}(N['i']);},0x1bfd:(m,H,O)=>{O['d'](H,{'C':()=>A});var u=O(0x12e4b),N=O(0x10849),J=O(0x172d2),A=function(v){function F(G){var c;return(c=v['call'](this)||this)['isMeshDepthMaterial']=!0x0,c['type']='MeshDepthMaterial',c['depthPacking']=J['Rkk'],c['map']=null,c['alphaMap']=null,c['displacementMap']=null,c['displacementScale']=0x1,c['displacementBias']=0x0,c['wireframe']=!0x1,c['wireframeLinewidth']=0x1,c['setValues'](G),c;}return(0x0,u['A'])(F,v),F['prototype']['copy']=function(G){return v['prototype']['copy']['call'](this,G),this['depthPacking']=G['depthPacking'],this['map']=G['map'],this['alphaMap']=G['alphaMap'],this['displacementMap']=G['displacementMap'],this['displacementScale']=G['displacementScale'],this['displacementBias']=G['displacementBias'],this['wireframe']=G['wireframe'],this['wireframeLinewidth']=G['wireframeLinewidth'],this;},F;}(N['i']);},0x11833:(m,H,O)=>{O['d'](H,{'a':()=>N});var u=O(0x12e4b),N=function(J){function A(v){var F;return(F=J['call'](this)||this)['isMeshDistanceMaterial']=!0x0,F['type']='MeshDistanceMaterial',F['map']=null,F['alphaMap']=null,F['displacementMap']=null,F['displacementScale']=0x1,F['displacementBias']=0x0,F['setValues'](v),F;}return(0x0,u['A'])(A,J),A['prototype']['copy']=function(v){return J['prototype']['copy']['call'](this,v),this['map']=v['map'],this['alphaMap']=v['alphaMap'],this['displacementMap']=v['displacementMap'],this['displacementScale']=v['displacementScale'],this['displacementBias']=v['displacementBias'],this;},A;}(O(0x10849)['i']);},0x10b7d:(m,H,O)=>{O(0x172d2),O(0x10849),O(0x1264d),O(0x169b1);},0x2ef2:(m,H,O)=>{O(0x172d2),O(0x10849),O(0x1264d),O(0x169b1);},0x8ab:(m,H,O)=>{O(0x172d2),O(0x10849),O(0x1264d);},0x10c4e:(m,H,O)=>{O(0x172d2),O(0x10849),O(0x1264d),O(0x169b1);},0x14d0c:(m,H,O)=>{O(0x172d2),O(0x10849),O(0x1264d),O(0x169b1);},0x5d74:(m,H,O)=>{O(0x7026);},0x7026:(m,H,O)=>{O['d'](H,{'B':()=>A});var u=O(0x12e4b),N=O(0x10849),J=O(0x41ef),A=function(v){function F(c){var R;return(R=v['call'](this)||this)['isShaderMaterial']=!0x0,R['type']='ShaderMaterial',R['defines']={},R['uniforms']={},R['uniformsGroups']=[],R['vertexShader']='\x0avoid\x20main()\x20{\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}\x0a',R['fragmentShader']='\x0avoid\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x201.0,\x200.0,\x200.0,\x201.0\x20);\x0a}\x0a',R['linewidth']=0x1,R['wireframe']=!0x1,R['wireframeLinewidth']=0x1,R['fog']=!0x1,R['lights']=!0x1,R['clipping']=!0x1,R['forceSinglePass']=!0x0,R['extensions']={'derivatives':!0x1,'fragDepth':!0x1,'drawBuffers':!0x1,'shaderTextureLOD':!0x1},R['defaultAttributeValues']={'color':[0x1,0x1,0x1],'uv':[0x0,0x0],'uv1':[0x0,0x0]},R['index0AttributeName']=void 0x0,R['uniformsNeedUpdate']=!0x1,R['glslVersion']=null,void 0x0!==c&&R['setValues'](c),R;}(0x0,u['A'])(F,v);var G=F['prototype'];return G['copy']=function(c){return v['prototype']['copy']['call'](this,c),this['fragmentShader']=c['fragmentShader'],this['vertexShader']=c['vertexShader'],this['uniforms']=(0x0,J['lx'])(c['uniforms']),this['uniformsGroups']=(0x0,J['Jd'])(c['uniformsGroups']),this['defines']=Object['assign']({},c['defines']),this['wireframe']=c['wireframe'],this['wireframeLinewidth']=c['wireframeLinewidth'],this['fog']=c['fog'],this['lights']=c['lights'],this['clipping']=c['clipping'],this['extensions']=Object['assign']({},c['extensions']),this['glslVersion']=c['glslVersion'],this;},G['toJSON']=function(c){var R=v['prototype']['toJSON']['call'](this,c);for(var j in(R['glslVersion']=this['glslVersion'],R['uniforms']={},this['uniforms'])){var B=this['uniforms'][j]['value'];B&&B['isTexture']?R['uniforms'][j]={'type':'t','value':B['toJSON'](c)['uuid']}:B&&B['isColor']?R['uniforms'][j]={'type':'c','value':B['getHex']()}:B&&B['isVector2']?R['uniforms'][j]={'type':'v2','value':B['toArray']()}:B&&B['isVector3']?R['uniforms'][j]={'type':'v3','value':B['toArray']()}:B&&B['isVector4']?R['uniforms'][j]={'type':'v4','value':B['toArray']()}:B&&B['isMatrix3']?R['uniforms'][j]={'type':'m3','value':B['toArray']()}:B&&B['isMatrix4']?R['uniforms'][j]={'type':'m4','value':B['toArray']()}:R['uniforms'][j]={'value':B};}Object['keys'](this['defines'])['length']>0x0&&(R['defines']=this['defines']),R['vertexShader']=this['vertexShader'],R['fragmentShader']=this['fragmentShader'],R['lights']=this['lights'],R['clipping']=this['clipping'];var z={};for(var q in this['extensions'])!0x0===this['extensions'][q]&&(z[q]=!0x0);return Object['keys'](z)['length']>0x0&&(R['extensions']=z),R;},F;}(N['i']);},0x259:(m,H,O)=>{O(0x10849),O(0x169b1);},0xb7f1:(m,H,O)=>{},0x7002:(H,O,N)=>{N['d'](O,{'N':()=>A});var J=N(0x1008e),A=(function(){function D(w,Q){void 0x0===w&&(w=new J['P'](0x1/0x0,0x1/0x0,0x1/0x0)),void 0x0===Q&&(Q=new J['P'](-0x1/0x0,-0x1/0x0,-0x1/0x0)),this['isBox3']=!0x0,this['min']=w,this['max']=Q;}var K=D['prototype'];return K['set']=function(w,Q){return this['min']['copy'](w),this['max']['copy'](Q),this;},K['setFromArray']=function(w){this['makeEmpty']();for(var Q=0x0,U=w['length'];Q<U;Q+=0x3)this['expandByPoint'](G['fromArray'](w,Q));return this;},K['setFromBufferAttribute']=function(w){this['makeEmpty']();for(var Q=0x0,U=w['count'];Q<U;Q++)this['expandByPoint'](G['fromBufferAttribute'](w,Q));return this;},K['setFromPoints']=function(w){this['makeEmpty']();for(var Q=0x0,U=w['length'];Q<U;Q++)this['expandByPoint'](w[Q]);return this;},K['setFromCenterAndSize']=function(w,Q){var U=G['copy'](Q)['multiplyScalar'](0.5);return this['min']['copy'](w)['sub'](U),this['max']['copy'](w)['add'](U),this;},K['setFromObject']=function(w,Q){return void 0x0===Q&&(Q=!0x1),this['makeEmpty'](),this['expandByObject'](w,Q);},K['clone']=function(){return new this['constructor']()['copy'](this);},K['copy']=function(w){return this['min']['copy'](w['min']),this['max']['copy'](w['max']),this;},K['makeEmpty']=function(){return this['min']['x']=this['min']['y']=this['min']['z']=0x1/0x0,this['max']['x']=this['max']['y']=this['max']['z']=-0x1/0x0,this;},K['isEmpty']=function(){return this['max']['x']<this['min']['x']||this['max']['y']<this['min']['y']||this['max']['z']<this['min']['z'];},K['getCenter']=function(w){return this['isEmpty']()?w['set'](0x0,0x0,0x0):w['addVectors'](this['min'],this['max'])['multiplyScalar'](0.5);},K['getSize']=function(w){return this['isEmpty']()?w['set'](0x0,0x0,0x0):w['subVectors'](this['max'],this['min']);},K['expandByPoint']=function(w){return this['min']['min'](w),this['max']['max'](w),this;},K['expandByVector']=function(w){return this['min']['sub'](w),this['max']['add'](w),this;},K['expandByScalar']=function(w){return this['min']['addScalar'](-w),this['max']['addScalar'](w),this;},K['expandByObject']=function(w,Q){void 0x0===Q&&(Q=!0x1),w['updateWorldMatrix'](!0x1,!0x1);var U=w['geometry'];if(void 0x0!==U){var M=U['getAttribute']('position');if(!0x0===Q&&void 0x0!==M&&!0x0!==w['isInstancedMesh']){for(var x=0x0,Y=M['count'];x<Y;x++)!0x0===w['isMesh']?w['getVertexPosition'](x,G):G['fromBufferAttribute'](M,x),G['applyMatrix4'](w['matrixWorld']),this['expandByPoint'](G);}else void 0x0!==w['boundingBox']?(null===w['boundingBox']&&w['computeBoundingBox'](),R['copy'](w['boundingBox'])):(null===U['boundingBox']&&U['computeBoundingBox'](),R['copy'](U['boundingBox'])),R['applyMatrix4'](w['matrixWorld']),this['union'](R);}for(var W=w['children'],k=0x0,S=W['length'];k<S;k++)this['expandByObject'](W[k],Q);return this;},K['containsPoint']=function(w){return!(w['x']<this['min']['x']||w['x']>this['max']['x']||w['y']<this['min']['y']||w['y']>this['max']['y']||w['z']<this['min']['z']||w['z']>this['max']['z']);},K['containsBox']=function(w){return this['min']['x']<=w['min']['x']&&w['max']['x']<=this['max']['x']&&this['min']['y']<=w['min']['y']&&w['max']['y']<=this['max']['y']&&this['min']['z']<=w['min']['z']&&w['max']['z']<=this['max']['z'];},K['getParameter']=function(w,Q){return Q['set']((w['x']-this['min']['x'])/(this['max']['x']-this['min']['x']),(w['y']-this['min']['y'])/(this['max']['y']-this['min']['y']),(w['z']-this['min']['z'])/(this['max']['z']-this['min']['z']));},K['intersectsBox']=function(w){return!(w['max']['x']<this['min']['x']||w['min']['x']>this['max']['x']||w['max']['y']<this['min']['y']||w['min']['y']>this['max']['y']||w['max']['z']<this['min']['z']||w['min']['z']>this['max']['z']);},K['intersectsSphere']=function(w){return this['clampPoint'](w['center'],G),G['distanceToSquared'](w['center'])<=w['radius']*w['radius'];},K['intersectsPlane']=function(w){var Q,U;return w['normal']['x']>0x0?(Q=w['normal']['x']*this['min']['x'],U=w['normal']['x']*this['max']['x']):(Q=w['normal']['x']*this['max']['x'],U=w['normal']['x']*this['min']['x']),w['normal']['y']>0x0?(Q+=w['normal']['y']*this['min']['y'],U+=w['normal']['y']*this['max']['y']):(Q+=w['normal']['y']*this['max']['y'],U+=w['normal']['y']*this['min']['y']),w['normal']['z']>0x0?(Q+=w['normal']['z']*this['min']['z'],U+=w['normal']['z']*this['max']['z']):(Q+=w['normal']['z']*this['max']['z'],U+=w['normal']['z']*this['min']['z']),Q<=-w['constant']&&U>=-w['constant'];},K['intersectsTriangle']=function(w){if(this['isEmpty']())return!0x1;this['getCenter'](y),X['subVectors'](this['max'],y),j['subVectors'](w['a'],y),B['subVectors'](w['b'],y),z['subVectors'](w['c'],y),q['subVectors'](B,j),b['subVectors'](z,B),L['subVectors'](j,z);var Q=[0x0,-q['z'],q['y'],0x0,-b['z'],b['y'],0x0,-L['z'],L['y'],q['z'],0x0,-q['x'],b['z'],0x0,-b['x'],L['z'],0x0,-L['x'],-q['y'],q['x'],0x0,-b['y'],b['x'],0x0,-L['y'],L['x'],0x0];return!!E(Q,j,B,z,X)&&(!!E(Q=[0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1],j,B,z,X)&&(C['crossVectors'](q,b),E(Q=[C['x'],C['y'],C['z']],j,B,z,X)));},K['clampPoint']=function(w,Q){return Q['copy'](w)['clamp'](this['min'],this['max']);},K['distanceToPoint']=function(w){return this['clampPoint'](w,G)['distanceTo'](w);},K['getBoundingSphere']=function(w){return this['isEmpty']()?w['makeEmpty']():(this['getCenter'](w['center']),w['radius']=0.5*this['getSize'](G)['length']()),w;},K['intersect']=function(w){return this['min']['max'](w['min']),this['max']['min'](w['max']),this['isEmpty']()&&this['makeEmpty'](),this;},K['union']=function(w){return this['min']['min'](w['min']),this['max']['max'](w['max']),this;},K['applyMatrix4']=function(w){return this['isEmpty']()||(F[0x0]['set'](this['min']['x'],this['min']['y'],this['min']['z'])['applyMatrix4'](w),F[0x1]['set'](this['min']['x'],this['min']['y'],this['max']['z'])['applyMatrix4'](w),F[0x2]['set'](this['min']['x'],this['max']['y'],this['min']['z'])['applyMatrix4'](w),F[0x3]['set'](this['min']['x'],this['max']['y'],this['max']['z'])['applyMatrix4'](w),F[0x4]['set'](this['max']['x'],this['min']['y'],this['min']['z'])['applyMatrix4'](w),F[0x5]['set'](this['max']['x'],this['min']['y'],this['max']['z'])['applyMatrix4'](w),F[0x6]['set'](this['max']['x'],this['max']['y'],this['min']['z'])['applyMatrix4'](w),F[0x7]['set'](this['max']['x'],this['max']['y'],this['max']['z'])['applyMatrix4'](w),this['setFromPoints'](F)),this;},K['translate']=function(w){return this['min']['add'](w),this['max']['add'](w),this;},K['equals']=function(w){return w['min']['equals'](this['min'])&&w['max']['equals'](this['max']);},D;}()),F=[new J['P'](),new J['P'](),new J['P'](),new J['P'](),new J['P'](),new J['P'](),new J['P'](),new J['P']()],G=new J['P'](),R=new A(),j=new J['P'](),B=new J['P'](),z=new J['P'](),q=new J['P'](),b=new J['P'](),L=new J['P'](),y=new J['P'](),X=new J['P'](),C=new J['P'](),T=new J['P']();function E(D,K,w,Q,U){for(var M=0x0,x=D['length']-0x3;M<=x;M+=0x3){T['fromArray'](D,M);var Y=U['x']*Math['abs'](T['x'])+U['y']*Math['abs'](T['y'])+U['z']*Math['abs'](T['z']),W=K['dot'](T),k=w['dot'](T),S=Q['dot'](T);if(Math['max'](-Math['max'](W,k,S),Math['min'](W,k,S))>Y)return!0x1;}return!0x0;}},0x169b1:(m,H,O)=>{O['d'](H,{'Q':()=>z});var N=O(0xd5e4),J=O['n'](N),A=O(0xbd95),v=O(0x4efe),F=O(0x172d2),G={'aliceblue':0xf0f8ff,'antiquewhite':0xfaebd7,'aqua':0xffff,'aquamarine':0x7fffd4,'azure':0xf0ffff,'beige':0xf5f5dc,'bisque':0xffe4c4,'black':0x0,'blanchedalmond':0xffebcd,'blue':0xff,'blueviolet':0x8a2be2,'brown':0xa52a2a,'burlywood':0xdeb887,'cadetblue':0x5f9ea0,'chartreuse':0x7fff00,'chocolate':0xd2691e,'coral':0xff7f50,'cornflowerblue':0x6495ed,'cornsilk':0xfff8dc,'crimson':0xdc143c,'cyan':0xffff,'darkblue':0x8b,'darkcyan':0x8b8b,'darkgoldenrod':0xb8860b,'darkgray':0xa9a9a9,'darkgreen':0x6400,'darkgrey':0xa9a9a9,'darkkhaki':0xbdb76b,'darkmagenta':0x8b008b,'darkolivegreen':0x556b2f,'darkorange':0xff8c00,'darkorchid':0x9932cc,'darkred':0x8b0000,'darksalmon':0xe9967a,'darkseagreen':0x8fbc8f,'darkslateblue':0x483d8b,'darkslategray':0x2f4f4f,'darkslategrey':0x2f4f4f,'darkturquoise':0xced1,'darkviolet':0x9400d3,'deeppink':0xff1493,'deepskyblue':0xbfff,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1e90ff,'firebrick':0xb22222,'floralwhite':0xfffaf0,'forestgreen':0x228b22,'fuchsia':0xff00ff,'gainsboro':0xdcdcdc,'ghostwhite':0xf8f8ff,'gold':0xffd700,'goldenrod':0xdaa520,'gray':0x808080,'green':0x8000,'greenyellow':0xadff2f,'grey':0x808080,'honeydew':0xf0fff0,'hotpink':0xff69b4,'indianred':0xcd5c5c,'indigo':0x4b0082,'ivory':0xfffff0,'khaki':0xf0e68c,'lavender':0xe6e6fa,'lavenderblush':0xfff0f5,'lawngreen':0x7cfc00,'lemonchiffon':0xfffacd,'lightblue':0xadd8e6,'lightcoral':0xf08080,'lightcyan':0xe0ffff,'lightgoldenrodyellow':0xfafad2,'lightgray':0xd3d3d3,'lightgreen':0x90ee90,'lightgrey':0xd3d3d3,'lightpink':0xffb6c1,'lightsalmon':0xffa07a,'lightseagreen':0x20b2aa,'lightskyblue':0x87cefa,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xb0c4de,'lightyellow':0xffffe0,'lime':0xff00,'limegreen':0x32cd32,'linen':0xfaf0e6,'magenta':0xff00ff,'maroon':0x800000,'mediumaquamarine':0x66cdaa,'mediumblue':0xcd,'mediumorchid':0xba55d3,'mediumpurple':0x9370db,'mediumseagreen':0x3cb371,'mediumslateblue':0x7b68ee,'mediumspringgreen':0xfa9a,'mediumturquoise':0x48d1cc,'mediumvioletred':0xc71585,'midnightblue':0x191970,'mintcream':0xf5fffa,'mistyrose':0xffe4e1,'moccasin':0xffe4b5,'navajowhite':0xffdead,'navy':0x80,'oldlace':0xfdf5e6,'olive':0x808000,'olivedrab':0x6b8e23,'orange':0xffa500,'orangered':0xff4500,'orchid':0xda70d6,'palegoldenrod':0xeee8aa,'palegreen':0x98fb98,'paleturquoise':0xafeeee,'palevioletred':0xdb7093,'papayawhip':0xffefd5,'peachpuff':0xffdab9,'peru':0xcd853f,'pink':0xffc0cb,'plum':0xdda0dd,'powderblue':0xb0e0e6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xff0000,'rosybrown':0xbc8f8f,'royalblue':0x4169e1,'saddlebrown':0x8b4513,'salmon':0xfa8072,'sandybrown':0xf4a460,'seagreen':0x2e8b57,'seashell':0xfff5ee,'sienna':0xa0522d,'silver':0xc0c0c0,'skyblue':0x87ceeb,'slateblue':0x6a5acd,'slategray':0x708090,'slategrey':0x708090,'snow':0xfffafa,'springgreen':0xff7f,'steelblue':0x4682b4,'tan':0xd2b48c,'teal':0x8080,'thistle':0xd8bfd8,'tomato':0xff6347,'turquoise':0x40e0d0,'violet':0xee82ee,'wheat':0xf5deb3,'white':0xffffff,'whitesmoke':0xf5f5f5,'yellow':0xffff00,'yellowgreen':0x9acd32},R={'h':0x0,'s':0x0,'l':0x0},j={'h':0x0,'s':0x0,'l':0x0};function B(b,L,y){return y<0x0&&(y+=0x1),y>0x1&&(y-=0x1),y<0x1/0x6?b+0x6*(L-b)*y:y<0.5?L:y<0x2/0x3?b+0x6*(L-b)*(0x2/0x3-y):b;}var z=(function(){function b(y,X,C){return this['isColor']=!0x0,this['r']=0x1,this['g']=0x1,this['b']=0x1,this['set'](y,X,C);}var L=b['prototype'];return L['set']=function(y,X,C){if(void 0x0===X&&void 0x0===C){var T=y;T&&T['isColor']?this['copy'](T):'number'==typeof T?this['setHex'](T):'string'==typeof T&&this['setStyle'](T);}else this['setRGB'](y,X,C);return this;},L['setScalar']=function(y){return this['r']=y,this['g']=y,this['b']=y,this;},L['setHex']=function(y,X){return void 0x0===X&&(X=F['er$']),y=Math['floor'](y),this['r']=(y>>0x10&0xff)/0xff,this['g']=(y>>0x8&0xff)/0xff,this['b']=(0xff&y)/0xff,v['pp']['toWorkingColorSpace'](this,X),this;},L['setRGB']=function(y,X,C,T){return void 0x0===T&&(T=v['pp']['workingColorSpace']),this['r']=y,this['g']=X,this['b']=C,v['pp']['toWorkingColorSpace'](this,T),this;},L['setHSL']=function(y,X,C,T){if(void 0x0===T&&(T=v['pp']['workingColorSpace']),y=(0x0,A['rl'])(y,0x1),X=(0x0,A['qE'])(X,0x0,0x1),C=(0x0,A['qE'])(C,0x0,0x1),0x0===X)this['r']=this['g']=this['b']=C;else{var E=C<=0.5?C*(0x1+X):C+X-C*X,D=0x2*C-E;this['r']=B(D,E,y+0x1/0x3),this['g']=B(D,E,y),this['b']=B(D,E,y-0x1/0x3);}return v['pp']['toWorkingColorSpace'](this,T),this;},L['setStyle']=function(y,X){function C(Q){void 0x0!==Q&&parseFloat(Q)<0x1&&console['warn']('THREE.Color:\x20Alpha\x20component\x20of\x20'+y+'\x20will\x20be\x20ignored.');}var T;if(void 0x0===X&&(X=F['er$']),T=/^(\w+)\(([^\)]*)\)/['exec'](y)){var E,D=T[0x1],K=T[0x2];switch(D){case'rgb':case'rgba':if(E=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/['exec'](K))return C(E[0x4]),this['setRGB'](Math['min'](0xff,parseInt(E[0x1],0xa))/0xff,Math['min'](0xff,parseInt(E[0x2],0xa))/0xff,Math['min'](0xff,parseInt(E[0x3],0xa))/0xff,X);if(E=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/['exec'](K))return C(E[0x4]),this['setRGB'](Math['min'](0x64,parseInt(E[0x1],0xa))/0x64,Math['min'](0x64,parseInt(E[0x2],0xa))/0x64,Math['min'](0x64,parseInt(E[0x3],0xa))/0x64,X);break;case'hsl':case'hsla':if(E=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/['exec'](K))return C(E[0x4]),this['setHSL'](parseFloat(E[0x1])/0x168,parseFloat(E[0x2])/0x64,parseFloat(E[0x3])/0x64,X);break;default:console['warn']('THREE.Color:\x20Unknown\x20color\x20model\x20'+y);}}else{if(T=/^\#([A-Fa-f\d]+)$/['exec'](y)){var w=T[0x1],p=w['length'];if(0x3===p)return this['setRGB'](parseInt(w['charAt'](0x0),0x10)/0xf,parseInt(w['charAt'](0x1),0x10)/0xf,parseInt(w['charAt'](0x2),0x10)/0xf,X);if(0x6===p)return this['setHex'](parseInt(w,0x10),X);console['warn']('THREE.Color:\x20Invalid\x20hex\x20color\x20'+y);}else{if(y&&y['length']>0x0)return this['setColorName'](y,X);}}return this;},L['setColorName']=function(y,X){void 0x0===X&&(X=F['er$']);var C=G[y['toLowerCase']()];return void 0x0!==C?this['setHex'](C,X):console['warn']('THREE.Color:\x20Unknown\x20color\x20'+y),this;},L['clone']=function(){return new this['constructor'](this['r'],this['g'],this['b']);},L['copy']=function(y){return this['r']=y['r'],this['g']=y['g'],this['b']=y['b'],this;},L['copySRGBToLinear']=function(y){return this['r']=(0x0,v['dk'])(y['r']),this['g']=(0x0,v['dk'])(y['g']),this['b']=(0x0,v['dk'])(y['b']),this;},L['copyLinearToSRGB']=function(y){return this['r']=(0x0,v['rd'])(y['r']),this['g']=(0x0,v['rd'])(y['g']),this['b']=(0x0,v['rd'])(y['b']),this;},L['convertSRGBToLinear']=function(){return this['copySRGBToLinear'](this),this;},L['convertLinearToSRGB']=function(){return this['copyLinearToSRGB'](this),this;},L['getHex']=function(y){return void 0x0===y&&(y=F['er$']),v['pp']['fromWorkingColorSpace'](q['copy'](this),y),0x10000*Math['round']((0x0,A['qE'])(0xff*q['r'],0x0,0xff))+0x100*Math['round']((0x0,A['qE'])(0xff*q['g'],0x0,0xff))+Math['round']((0x0,A['qE'])(0xff*q['b'],0x0,0xff));},L['getHexString']=function(y){return void 0x0===y&&(y=F['er$']),('000000'+this['getHex'](y)['toString'](0x10))['slice'](-0x6);},L['getHSL']=function(y,X){void 0x0===X&&(X=v['pp']['workingColorSpace']),v['pp']['fromWorkingColorSpace'](q['copy'](this),X);var C,T,E=q['r'],D=q['g'],K=q['b'],w=Math['max'](E,D,K),p=Math['min'](E,D,K),Q=(p+w)/0x2;if(p===w)C=0x0,T=0x0;else{var U=w-p;switch(T=Q<=0.5?U/(w+p):U/(0x2-w-p),w){case E:C=(D-K)/U+(D<K?0x6:0x0);break;case D:C=(K-E)/U+0x2;break;case K:C=(E-D)/U+0x4;}C/=0x6;}return y['h']=C,y['s']=T,y['l']=Q,y;},L['getRGB']=function(y,X){return void 0x0===X&&(X=v['pp']['workingColorSpace']),v['pp']['fromWorkingColorSpace'](q['copy'](this),X),y['r']=q['r'],y['g']=q['g'],y['b']=q['b'],y;},L['getStyle']=function(y){void 0x0===y&&(y=F['er$']),v['pp']['fromWorkingColorSpace'](q['copy'](this),y);var X=q['r'],C=q['g'],T=q['b'];return y!==F['er$']?'color('+y+'\x20'+X['toFixed'](0x3)+'\x20'+C['toFixed'](0x3)+'\x20'+T['toFixed'](0x3)+')':'rgb('+Math['round'](0xff*X)+','+Math['round'](0xff*C)+','+Math['round'](0xff*T)+')';},L['offsetHSL']=function(y,X,C){return this['getHSL'](R),this['setHSL'](R['h']+y,R['s']+X,R['l']+C);},L['add']=function(y){return this['r']+=y['r'],this['g']+=y['g'],this['b']+=y['b'],this;},L['addColors']=function(y,X){return this['r']=y['r']+X['r'],this['g']=y['g']+X['g'],this['b']=y['b']+X['b'],this;},L['addScalar']=function(y){return this['r']+=y,this['g']+=y,this['b']+=y,this;},L['sub']=function(y){return this['r']=Math['max'](0x0,this['r']-y['r']),this['g']=Math['max'](0x0,this['g']-y['g']),this['b']=Math['max'](0x0,this['b']-y['b']),this;},L['multiply']=function(y){return this['r']*=y['r'],this['g']*=y['g'],this['b']*=y['b'],this;},L['multiplyScalar']=function(y){return this['r']*=y,this['g']*=y,this['b']*=y,this;},L['lerp']=function(y,X){return this['r']+=(y['r']-this['r'])*X,this['g']+=(y['g']-this['g'])*X,this['b']+=(y['b']-this['b'])*X,this;},L['lerpColors']=function(y,X,C){return this['r']=y['r']+(X['r']-y['r'])*C,this['g']=y['g']+(X['g']-y['g'])*C,this['b']=y['b']+(X['b']-y['b'])*C,this;},L['lerpHSL']=function(y,X){this['getHSL'](R),y['getHSL'](j);var C=(0x0,A['Cc'])(R['h'],j['h'],X),T=(0x0,A['Cc'])(R['s'],j['s'],X),E=(0x0,A['Cc'])(R['l'],j['l'],X);return this['setHSL'](C,T,E),this;},L['setFromVector3']=function(y){return this['r']=y['x'],this['g']=y['y'],this['b']=y['z'],this;},L['applyMatrix3']=function(y){var X=this['r'],C=this['g'],T=this['b'],E=y['elements'];return this['r']=E[0x0]*X+E[0x3]*C+E[0x6]*T,this['g']=E[0x1]*X+E[0x4]*C+E[0x7]*T,this['b']=E[0x2]*X+E[0x5]*C+E[0x8]*T,this;},L['equals']=function(y){return y['r']===this['r']&&y['g']===this['g']&&y['b']===this['b'];},L['fromArray']=function(y,X){return void 0x0===X&&(X=0x0),this['r']=y[X],this['g']=y[X+0x1],this['b']=y[X+0x2],this;},L['toArray']=function(y,X){return void 0x0===y&&(y=[]),void 0x0===X&&(X=0x0),y[X]=this['r'],y[X+0x1]=this['g'],y[X+0x2]=this['b'],y;},L['fromBufferAttribute']=function(y,X){return this['r']=y['getX'](X),this['g']=y['getY'](X),this['b']=y['getZ'](X),this;},L['toJSON']=function(){return this['getHex']();},L[Symbol['iterator']]=J()['mark'](function y(){return J()['wrap'](function(X){for(;;)switch(X['prev']=X['next']){case 0x0:return X['next']=0x2,this['r'];case 0x2:return X['next']=0x4,this['g'];case 0x4:return X['next']=0x6,this['b'];case 0x6:case'end':return X['stop']();}},y,this);}),b;}()),q=new z();z['NAMES']=G;},0x4efe:(m,H,O)=>{O['d'](H,{'dk':()=>B,'pp':()=>j,'rd':()=>z});var N,J=O(0x172d2),A=O(0x3e78),v=new A['d']()['set'](0.8224621,0.177538,0x0,0.0331941,0.9668058,0x0,0.0170827,0.0723974,0.9105199),F=new A['d']()['set'](1.2249401,-0.2249404,0x0,-0.0420569,1.0420571,0x0,-0.0196376,-0.0786361,1.0982735),G=((N={})[J['Zr2']]={'transfer':J['VxR'],'primaries':J['z5'],'toReference':function(q){return q;},'fromReference':function(q){return q;}},N[J['er$']]={'transfer':J['KLL'],'primaries':J['z5'],'toReference':function(q){return q['convertSRGBToLinear']();},'fromReference':function(q){return q['convertLinearToSRGB']();}},N[J['qIQ']]={'transfer':J['VxR'],'primaries':J['wqq'],'toReference':function(q){return q['applyMatrix3'](F);},'fromReference':function(q){return q['applyMatrix3'](v);}},N[J['V5c']]={'transfer':J['KLL'],'primaries':J['wqq'],'toReference':function(q){return q['convertSRGBToLinear']()['applyMatrix3'](F);},'fromReference':function(q){return q['applyMatrix3'](v)['convertLinearToSRGB']();}},N),R=new Set([J['Zr2'],J['qIQ']]),j={'enabled':!0x0,'_workingColorSpace':J['Zr2'],get 'legacyMode'(){return console['warn']('THREE.ColorManagement:\x20.legacyMode=false\x20renamed\x20to\x20.enabled=true\x20in\x20r150.'),!this['enabled'];},set 'legacyMode'(q){console['warn']('THREE.ColorManagement:\x20.legacyMode=false\x20renamed\x20to\x20.enabled=true\x20in\x20r150.'),this['enabled']=!q;},get 'workingColorSpace'(){return this['_workingColorSpace'];},set 'workingColorSpace'(q){if(!R['has'](q))throw new Error('Unsupported\x20working\x20color\x20space,\x20\x22'+q+'\x22.');this['_workingColorSpace']=q;},'convert':function(q,b,L){if(!0x1===this['enabled']||b===L||!b||!L)return q;var y=G[b]['toReference'];return(0x0,G[L]['fromReference'])(y(q));},'fromWorkingColorSpace':function(q,b){return this['convert'](q,this['_workingColorSpace'],b);},'toWorkingColorSpace':function(q,b){return this['convert'](q,b,this['_workingColorSpace']);},'getPrimaries':function(q){return G[q]['primaries'];},'getTransfer':function(q){return q===J['jf0']?J['VxR']:G[q]['transfer'];}};function B(q){return q<0.04045?0.0773993808*q:Math['pow'](0.9478672986*q+0.0521327014,2.4);}function z(q){return q<0.0031308?12.92*q:1.055*Math['pow'](q,0.41666)-0.055;}},0x6a24:(m,H,O)=>{O['d'](H,{'P':()=>G});var u=O(0x172d2),N=O(0x1008e),J=O(0x79b5),A=O(0xa3bc),v=new J['i'](),F=new N['P'](),G=(function(){function R(B,z,q,b,L,y){void 0x0===B&&(B=new A['Z']()),void 0x0===z&&(z=new A['Z']()),void 0x0===q&&(q=new A['Z']()),void 0x0===b&&(b=new A['Z']()),void 0x0===L&&(L=new A['Z']()),void 0x0===y&&(y=new A['Z']()),this['planes']=[B,z,q,b,L,y];}var j=R['prototype'];return j['set']=function(B,z,q,b,L,y){var h=this['planes'];return h[0x0]['copy'](B),h[0x1]['copy'](z),h[0x2]['copy'](q),h[0x3]['copy'](b),h[0x4]['copy'](L),h[0x5]['copy'](y),this;},j['copy']=function(B){for(var z=this['planes'],q=0x0;q<0x6;q++)z[q]['copy'](B['planes'][q]);return this;},j['setFromProjectionMatrix']=function(B,z){void 0x0===z&&(z=u['TdN']);var q=this['planes'],b=B['elements'],L=b[0x0],X=b[0x1],C=b[0x2],T=b[0x3],E=b[0x4],D=b[0x5],K=b[0x6],w=b[0x7],Q=b[0x8],U=b[0x9],M=b[0xa],Y=b[0xb],W=b[0xc],k=b[0xd],S=b[0xe],P=b[0xf];if(q[0x0]['setComponents'](T-L,w-E,Y-Q,P-W)['normalize'](),q[0x1]['setComponents'](T+L,w+E,Y+Q,P+W)['normalize'](),q[0x2]['setComponents'](T+X,w+D,Y+U,P+k)['normalize'](),q[0x3]['setComponents'](T-X,w-D,Y-U,P-k)['normalize'](),q[0x4]['setComponents'](T-C,w-K,Y-M,P-S)['normalize'](),z===u['TdN'])q[0x5]['setComponents'](T+C,w+K,Y+M,P+S)['normalize']();else{if(z!==u['i7u'])throw new Error('THREE.Frustum.setFromProjectionMatrix():\x20Invalid\x20coordinate\x20system:\x20'+z);q[0x5]['setComponents'](C,K,M,S)['normalize']();}return this;},j['intersectsObject']=function(B){if(void 0x0!==B['boundingSphere'])null===B['boundingSphere']&&B['computeBoundingSphere'](),v['copy'](B['boundingSphere'])['applyMatrix4'](B['matrixWorld']);else{var z=B['geometry'];null===z['boundingSphere']&&z['computeBoundingSphere'](),v['copy'](z['boundingSphere'])['applyMatrix4'](B['matrixWorld']);}return this['intersectsSphere'](v);},j['intersectsSprite']=function(B){return v['center']['set'](0x0,0x0,0x0),v['radius']=0.7071067811865476,v['applyMatrix4'](B['matrixWorld']),this['intersectsSphere'](v);},j['intersectsSphere']=function(B){for(var z=this['planes'],q=B['center'],b=-B['radius'],L=0x0;L<0x6;L++){if(z[L]['distanceToPoint'](q)<b)return!0x1;}return!0x0;},j['intersectsBox']=function(B){for(var z=this['planes'],q=0x0;q<0x6;q++){var b=z[q];if(F['x']=b['normal']['x']>0x0?B['max']['x']:B['min']['x'],F['y']=b['normal']['y']>0x0?B['max']['y']:B['min']['y'],F['z']=b['normal']['z']>0x0?B['max']['z']:B['min']['z'],b['distanceToPoint'](F)<0x0)return!0x1;}return!0x0;},j['containsPoint']=function(B){for(var z=this['planes'],q=0x0;q<0x6;q++)if(z[q]['distanceToPoint'](B)<0x0)return!0x1;return!0x0;},j['clone']=function(){return new this['constructor']()['copy'](this);},R;}());},0x28f4:(m,H,O)=>{O['d'](H,{'l':()=>u});var u=(function(){function N(A,v,F,a){this['parameterPositions']=A,this['_cachedIndex']=0x0,this['resultBuffer']=void 0x0!==a?a:new v['constructor'](F),this['sampleValues']=v,this['valueSize']=F,this['settings']=null,this['DefaultSettings_']={};}var J=N['prototype'];return J['evaluate']=function(A){var v=this['parameterPositions'],F=this['_cachedIndex'],G=v[F],R=v[F-0x1];L:{y:{var j;h:{X:if(!(A<G)){for(var B=F+0x2;;){if(void 0x0===G){if(A<R)break X;return F=v['length'],this['_cachedIndex']=F,this['copySampleValue_'](F-0x1);}if(F===B)break;if(R=G,A<(G=v[++F]))break y;}j=v['length'];break h;}if(A>=R)break L;var z=v[0x1];A<z&&(F=0x2,R=z);for(var q=F-0x2;;){if(void 0x0===R)return this['_cachedIndex']=0x0,this['copySampleValue_'](0x0);if(F===q)break;if(G=R,A>=(R=v[--F-0x1]))break y;}j=F,F=0x0;}for(;F<j;){var b=F+j>>>0x1;A<v[b]?j=b:F=b+0x1;}if(G=v[F],void 0x0===(R=v[F-0x1]))return this['_cachedIndex']=0x0,this['copySampleValue_'](0x0);if(void 0x0===G)return F=v['length'],this['_cachedIndex']=F,this['copySampleValue_'](F-0x1);}this['_cachedIndex']=F,this['intervalChanged_'](F,R,G);}return this['interpolate_'](F,R,A,G);},J['getSettings_']=function(){return this['settings']||this['DefaultSettings_'];},J['copySampleValue_']=function(A){for(var v=this['resultBuffer'],F=this['sampleValues'],G=this['valueSize'],c=A*G,R=0x0;R!==G;++R)v[R]=F[c+R];return v;},J['interpolate_']=function(){throw new Error('call\x20to\x20abstract\x20method');},J['intervalChanged_']=function(){},N;}());},0x3e78:(m,H,O)=>{O['d'](H,{'d':()=>u});var u=(function(){function J(v,F,G,R,j,B,z,q,b){J['prototype']['isMatrix3']=!0x0,this['elements']=[0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1],void 0x0!==v&&this['set'](v,F,G,R,j,B,z,q,b);}var A=J['prototype'];return A['set']=function(v,F,G,R,j,B,z,q,b){var L=this['elements'];return L[0x0]=v,L[0x1]=R,L[0x2]=z,L[0x3]=F,L[0x4]=j,L[0x5]=q,L[0x6]=G,L[0x7]=B,L[0x8]=b,this;},A['identity']=function(){return this['set'](0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1),this;},A['copy']=function(v){var F=this['elements'],a=v['elements'];return F[0x0]=a[0x0],F[0x1]=a[0x1],F[0x2]=a[0x2],F[0x3]=a[0x3],F[0x4]=a[0x4],F[0x5]=a[0x5],F[0x6]=a[0x6],F[0x7]=a[0x7],F[0x8]=a[0x8],this;},A['extractBasis']=function(v,F,a){return v['setFromMatrix3Column'](this,0x0),F['setFromMatrix3Column'](this,0x1),a['setFromMatrix3Column'](this,0x2),this;},A['setFromMatrix4']=function(v){var F=v['elements'];return this['set'](F[0x0],F[0x4],F[0x8],F[0x1],F[0x5],F[0x9],F[0x2],F[0x6],F[0xa]),this;},A['multiply']=function(v){return this['multiplyMatrices'](this,v);},A['premultiply']=function(v){return this['multiplyMatrices'](v,this);},A['multiplyMatrices']=function(F,G){var R=F['elements'],j=G['elements'],B=this['elements'],z=R[0x0],q=R[0x3],b=R[0x6],L=R[0x1],X=R[0x4],C=R[0x7],T=R[0x2],E=R[0x5],D=R[0x8],K=j[0x0],w=j[0x3],Q=j[0x6],U=j[0x1],Y=j[0x4],W=j[0x7],k=j[0x2],P=j[0x5],I=j[0x8];return B[0x0]=z*K+q*U+b*k,B[0x3]=z*w+q*Y+b*P,B[0x6]=z*Q+q*W+b*I,B[0x1]=L*K+X*U+C*k,B[0x4]=L*w+X*Y+C*P,B[0x7]=L*Q+X*W+C*I,B[0x2]=T*K+E*U+D*k,B[0x5]=T*w+E*Y+D*P,B[0x8]=T*Q+E*W+D*I,this;},A['multiplyScalar']=function(v){var F=this['elements'];return F[0x0]*=v,F[0x3]*=v,F[0x6]*=v,F[0x1]*=v,F[0x4]*=v,F[0x7]*=v,F[0x2]*=v,F[0x5]*=v,F[0x8]*=v,this;},A['determinant']=function(){var v=this['elements'],F=v[0x0],G=v[0x1],R=v[0x2],j=v[0x3],B=v[0x4],z=v[0x5],q=v[0x6],b=v[0x7],L=v[0x8];return F*B*L-F*z*b-G*j*L+G*z*q+R*j*b-R*B*q;},A['invert']=function(){var v=this['elements'],F=v[0x0],G=v[0x1],R=v[0x2],j=v[0x3],B=v[0x4],z=v[0x5],q=v[0x6],b=v[0x7],L=v[0x8],y=L*B-z*b,X=z*q-L*j,C=b*j-B*q,T=F*y+G*X+R*C;if(0x0===T)return this['set'](0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0);var E=0x1/T;return v[0x0]=y*E,v[0x1]=(R*b-L*G)*E,v[0x2]=(z*G-R*B)*E,v[0x3]=X*E,v[0x4]=(L*F-R*q)*E,v[0x5]=(R*j-z*F)*E,v[0x6]=C*E,v[0x7]=(G*q-b*F)*E,v[0x8]=(B*F-G*j)*E,this;},A['transpose']=function(){var v,F=this['elements'];return v=F[0x1],F[0x1]=F[0x3],F[0x3]=v,v=F[0x2],F[0x2]=F[0x6],F[0x6]=v,v=F[0x5],F[0x5]=F[0x7],F[0x7]=v,this;},A['getNormalMatrix']=function(v){return this['setFromMatrix4'](v)['invert']()['transpose']();},A['transposeIntoArray']=function(v){var F=this['elements'];return v[0x0]=F[0x0],v[0x1]=F[0x3],v[0x2]=F[0x6],v[0x3]=F[0x1],v[0x4]=F[0x4],v[0x5]=F[0x7],v[0x6]=F[0x2],v[0x7]=F[0x5],v[0x8]=F[0x8],this;},A['setUvTransform']=function(v,F,G,R,j,B,z){var q=Math['cos'](j),b=Math['sin'](j);return this['set'](G*q,G*b,-G*(q*B+b*z)+B+v,-R*b,R*q,-R*(-b*B+q*z)+z+F,0x0,0x0,0x1),this;},A['scale']=function(v,F){return this['premultiply'](N['makeScale'](v,F)),this;},A['rotate']=function(v){return this['premultiply'](N['makeRotation'](-v)),this;},A['translate']=function(v,F){return this['premultiply'](N['makeTranslation'](v,F)),this;},A['makeTranslation']=function(v,F){return v['isVector2']?this['set'](0x1,0x0,v['x'],0x0,0x1,v['y'],0x0,0x0,0x1):this['set'](0x1,0x0,v,0x0,0x1,F,0x0,0x0,0x1),this;},A['makeRotation']=function(v){var F=Math['cos'](v),a=Math['sin'](v);return this['set'](F,-a,0x0,a,F,0x0,0x0,0x0,0x1),this;},A['makeScale']=function(v,F){return this['set'](v,0x0,0x0,0x0,F,0x0,0x0,0x0,0x1),this;},A['equals']=function(v){for(var F=this['elements'],a=v['elements'],G=0x0;G<0x9;G++)if(F[G]!==a[G])return!0x1;return!0x0;},A['fromArray']=function(v,F){void 0x0===F&&(F=0x0);for(var a=0x0;a<0x9;a++)this['elements'][a]=v[a+F];return this;},A['toArray']=function(v,F){void 0x0===v&&(v=[]),void 0x0===F&&(F=0x0);var a=this['elements'];return v[F]=a[0x0],v[F+0x1]=a[0x1],v[F+0x2]=a[0x2],v[F+0x3]=a[0x3],v[F+0x4]=a[0x4],v[F+0x5]=a[0x5],v[F+0x6]=a[0x6],v[F+0x7]=a[0x7],v[F+0x8]=a[0x8],v;},A['clone']=function(){return new this['constructor']()['fromArray'](this['elements']);},J;}()),N=new u();},0x11ded:(m,H,O)=>{O['d'](H,{'k':()=>A});var N=O(0x172d2),J=O(0x1008e),A=(function(){function q(L,y,X,C,T,E,D,K,w,Q,U,M,g,x,Y,W){q['prototype']['isMatrix4']=!0x0,this['elements']=[0x1,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,0x1],void 0x0!==L&&this['set'](L,y,X,C,T,E,D,K,w,Q,U,M,g,x,Y,W);}var b=q['prototype'];return b['set']=function(L,y,X,C,T,E,D,K,w,Q,U,M,g,x,Y,W){var k=this['elements'];return k[0x0]=L,k[0x4]=y,k[0x8]=X,k[0xc]=C,k[0x1]=T,k[0x5]=E,k[0x9]=D,k[0xd]=K,k[0x2]=w,k[0x6]=Q,k[0xa]=U,k[0xe]=M,k[0x3]=g,k[0x7]=x,k[0xb]=Y,k[0xf]=W,this;},b['identity']=function(){return this['set'](0x1,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,0x1),this;},b['clone']=function(){return new q()['fromArray'](this['elements']);},b['copy']=function(L){var y=this['elements'],X=L['elements'];return y[0x0]=X[0x0],y[0x1]=X[0x1],y[0x2]=X[0x2],y[0x3]=X[0x3],y[0x4]=X[0x4],y[0x5]=X[0x5],y[0x6]=X[0x6],y[0x7]=X[0x7],y[0x8]=X[0x8],y[0x9]=X[0x9],y[0xa]=X[0xa],y[0xb]=X[0xb],y[0xc]=X[0xc],y[0xd]=X[0xd],y[0xe]=X[0xe],y[0xf]=X[0xf],this;},b['copyPosition']=function(L){var y=this['elements'],X=L['elements'];return y[0xc]=X[0xc],y[0xd]=X[0xd],y[0xe]=X[0xe],this;},b['setFromMatrix3']=function(L){var y=L['elements'];return this['set'](y[0x0],y[0x3],y[0x6],0x0,y[0x1],y[0x4],y[0x7],0x0,y[0x2],y[0x5],y[0x8],0x0,0x0,0x0,0x0,0x1),this;},b['extractBasis']=function(L,y,X){return L['setFromMatrixColumn'](this,0x0),y['setFromMatrixColumn'](this,0x1),X['setFromMatrixColumn'](this,0x2),this;},b['makeBasis']=function(L,y,X){return this['set'](L['x'],y['x'],X['x'],0x0,L['y'],y['y'],X['y'],0x0,L['z'],y['z'],X['z'],0x0,0x0,0x0,0x0,0x1),this;},b['extractRotation']=function(L){var y=this['elements'],X=L['elements'],C=0x1/v['setFromMatrixColumn'](L,0x0)['length'](),T=0x1/v['setFromMatrixColumn'](L,0x1)['length'](),E=0x1/v['setFromMatrixColumn'](L,0x2)['length']();return y[0x0]=X[0x0]*C,y[0x1]=X[0x1]*C,y[0x2]=X[0x2]*C,y[0x3]=0x0,y[0x4]=X[0x4]*T,y[0x5]=X[0x5]*T,y[0x6]=X[0x6]*T,y[0x7]=0x0,y[0x8]=X[0x8]*E,y[0x9]=X[0x9]*E,y[0xa]=X[0xa]*E,y[0xb]=0x0,y[0xc]=0x0,y[0xd]=0x0,y[0xe]=0x0,y[0xf]=0x1,this;},b['makeRotationFromEuler']=function(X){var K=this['elements'],Q=X['x'],U=X['y'],Y=X['z'],W=Math['cos'](Q),k=Math['sin'](Q),Z=Math['cos'](U),V=Math['sin'](U),m0=Math['cos'](Y),m1=Math['sin'](Y);if('XYZ'===X['order']){var m2=W*m0,m3=W*m1,m4=k*m0,m5=k*m1;K[0x0]=Z*m0,K[0x4]=-Z*m1,K[0x8]=V,K[0x1]=m3+m4*V,K[0x5]=m2-m5*V,K[0x9]=-k*Z,K[0x2]=m5-m2*V,K[0x6]=m4+m3*V,K[0xa]=W*Z;}else{if('YXZ'===X['order']){var m6=Z*m0,m7=Z*m1,m8=V*m0,m9=V*m1;K[0x0]=m6+m9*k,K[0x4]=m8*k-m7,K[0x8]=W*V,K[0x1]=W*m1,K[0x5]=W*m0,K[0x9]=-k,K[0x2]=m7*k-m8,K[0x6]=m9+m6*k,K[0xa]=W*Z;}else{if('ZXY'===X['order']){var mm=Z*m0,me=Z*m1,mH=V*m0,mO=V*m1;K[0x0]=mm-mO*k,K[0x4]=-W*m1,K[0x8]=mH+me*k,K[0x1]=me+mH*k,K[0x5]=W*m0,K[0x9]=mO-mm*k,K[0x2]=-W*V,K[0x6]=k,K[0xa]=W*Z;}else{if('ZYX'===X['order']){var mu=W*m0,mN=W*m1,mJ=k*m0,mA=k*m1;K[0x0]=Z*m0,K[0x4]=mJ*V-mN,K[0x8]=mu*V+mA,K[0x1]=Z*m1,K[0x5]=mA*V+mu,K[0x9]=mN*V-mJ,K[0x2]=-V,K[0x6]=k*Z,K[0xa]=W*Z;}else{if('YZX'===X['order']){var mv=W*Z,mF=W*V,ma=k*Z,mG=k*V;K[0x0]=Z*m0,K[0x4]=mG-mv*m1,K[0x8]=ma*m1+mF,K[0x1]=m1,K[0x5]=W*m0,K[0x9]=-k*m0,K[0x2]=-V*m0,K[0x6]=mF*m1+ma,K[0xa]=mv-mG*m1;}else{if('XZY'===X['order']){var mc=W*Z,mR=W*V,mj=k*Z,mB=k*V;K[0x0]=Z*m0,K[0x4]=-m1,K[0x8]=V*m0,K[0x1]=mc*m1+mB,K[0x5]=W*m0,K[0x9]=mR*m1-mj,K[0x2]=mj*m1-mR,K[0x6]=k*m0,K[0xa]=mB*m1+mc;}}}}}}return K[0x3]=0x0,K[0x7]=0x0,K[0xb]=0x0,K[0xc]=0x0,K[0xd]=0x0,K[0xe]=0x0,K[0xf]=0x1,this;},b['makeRotationFromQuaternion']=function(L){return this['compose'](G,L,R);},b['lookAt']=function(L,y,X){var C=this['elements'];return z['subVectors'](L,y),0x0===z['lengthSq']()&&(z['z']=0x1),z['normalize'](),j['crossVectors'](X,z),0x0===j['lengthSq']()&&(0x1===Math['abs'](X['z'])?z['x']+=0.0001:z['z']+=0.0001,z['normalize'](),j['crossVectors'](X,z)),j['normalize'](),B['crossVectors'](z,j),C[0x0]=j['x'],C[0x4]=B['x'],C[0x8]=z['x'],C[0x1]=j['y'],C[0x5]=B['y'],C[0x9]=z['y'],C[0x2]=j['z'],C[0x6]=B['z'],C[0xa]=z['z'],this;},b['multiply']=function(L){return this['multiplyMatrices'](this,L);},b['premultiply']=function(L){return this['multiplyMatrices'](L,this);},b['multiplyMatrices']=function(X,K){var Q=X['elements'],Y=K['elements'],W=this['elements'],k=Q[0x0],Z=Q[0x4],V=Q[0x8],m0=Q[0xc],m1=Q[0x1],m2=Q[0x5],m3=Q[0x9],m4=Q[0xd],m5=Q[0x2],m6=Q[0x6],m7=Q[0xa],m8=Q[0xe],m9=Q[0x3],mm=Q[0x7],me=Q[0xb],mH=Q[0xf],mO=Y[0x0],mu=Y[0x4],mN=Y[0x8],mJ=Y[0xc],mA=Y[0x1],mv=Y[0x5],mF=Y[0x9],ma=Y[0xd],mG=Y[0x2],mc=Y[0x6],mR=Y[0xa],mj=Y[0xe],mB=Y[0x3],mz=Y[0x7],mq=Y[0xb],mb=Y[0xf];return W[0x0]=k*mO+Z*mA+V*mG+m0*mB,W[0x4]=k*mu+Z*mv+V*mc+m0*mz,W[0x8]=k*mN+Z*mF+V*mR+m0*mq,W[0xc]=k*mJ+Z*ma+V*mj+m0*mb,W[0x1]=m1*mO+m2*mA+m3*mG+m4*mB,W[0x5]=m1*mu+m2*mv+m3*mc+m4*mz,W[0x9]=m1*mN+m2*mF+m3*mR+m4*mq,W[0xd]=m1*mJ+m2*ma+m3*mj+m4*mb,W[0x2]=m5*mO+m6*mA+m7*mG+m8*mB,W[0x6]=m5*mu+m6*mv+m7*mc+m8*mz,W[0xa]=m5*mN+m6*mF+m7*mR+m8*mq,W[0xe]=m5*mJ+m6*ma+m7*mj+m8*mb,W[0x3]=m9*mO+mm*mA+me*mG+mH*mB,W[0x7]=m9*mu+mm*mv+me*mc+mH*mz,W[0xb]=m9*mN+mm*mF+me*mR+mH*mq,W[0xf]=m9*mJ+mm*ma+me*mj+mH*mb,this;},b['multiplyScalar']=function(L){var y=this['elements'];return y[0x0]*=L,y[0x4]*=L,y[0x8]*=L,y[0xc]*=L,y[0x1]*=L,y[0x5]*=L,y[0x9]*=L,y[0xd]*=L,y[0x2]*=L,y[0x6]*=L,y[0xa]*=L,y[0xe]*=L,y[0x3]*=L,y[0x7]*=L,y[0xb]*=L,y[0xf]*=L,this;},b['determinant']=function(){var L=this['elements'],y=L[0x0],X=L[0x4],C=L[0x8],T=L[0xc],E=L[0x1],D=L[0x5],K=L[0x9],w=L[0xd],p=L[0x2],Q=L[0x6],f=L[0xa],U=L[0xe];return L[0x3]*(+T*K*Q-C*w*Q-T*D*f+X*w*f+C*D*U-X*K*U)+L[0x7]*(+y*K*U-y*w*f+T*E*f-C*E*U+C*w*p-T*K*p)+L[0xb]*(+y*w*Q-y*D*U-T*E*Q+X*E*U+T*D*p-X*w*p)+L[0xf]*(-C*D*p-y*K*Q+y*D*f+C*E*Q-X*E*f+X*K*p);},b['transpose']=function(){var L,y=this['elements'];return L=y[0x1],y[0x1]=y[0x4],y[0x4]=L,L=y[0x2],y[0x2]=y[0x8],y[0x8]=L,L=y[0x6],y[0x6]=y[0x9],y[0x9]=L,L=y[0x3],y[0x3]=y[0xc],y[0xc]=L,L=y[0x7],y[0x7]=y[0xd],y[0xd]=L,L=y[0xb],y[0xb]=y[0xe],y[0xe]=L,this;},b['setPosition']=function(L,y,X){var C=this['elements'];return L['isVector3']?(C[0xc]=L['x'],C[0xd]=L['y'],C[0xe]=L['z']):(C[0xc]=L,C[0xd]=y,C[0xe]=X),this;},b['invert']=function(){var L=this['elements'],X=L[0x0],C=L[0x1],T=L[0x2],E=L[0x3],D=L[0x4],K=L[0x5],w=L[0x6],Q=L[0x7],U=L[0x8],Y=L[0x9],W=L[0xa],k=L[0xb],P=L[0xc],I=L[0xd],Z=L[0xe],V=L[0xf],m0=Y*Z*Q-I*W*Q+I*w*k-K*Z*k-Y*w*V+K*W*V,m1=P*W*Q-U*Z*Q-P*w*k+D*Z*k+U*w*V-D*W*V,m2=U*I*Q-P*Y*Q+P*K*k-D*I*k-U*K*V+D*Y*V,m3=P*Y*w-U*I*w-P*K*W+D*I*W+U*K*Z-D*Y*Z,m4=X*m0+C*m1+T*m2+E*m3;if(0x0===m4)return this['set'](0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0);var m5=0x1/m4;return L[0x0]=m0*m5,L[0x1]=(I*W*E-Y*Z*E-I*T*k+C*Z*k+Y*T*V-C*W*V)*m5,L[0x2]=(K*Z*E-I*w*E+I*T*Q-C*Z*Q-K*T*V+C*w*V)*m5,L[0x3]=(Y*w*E-K*W*E-Y*T*Q+C*W*Q+K*T*k-C*w*k)*m5,L[0x4]=m1*m5,L[0x5]=(U*Z*E-P*W*E+P*T*k-X*Z*k-U*T*V+X*W*V)*m5,L[0x6]=(P*w*E-D*Z*E-P*T*Q+X*Z*Q+D*T*V-X*w*V)*m5,L[0x7]=(D*W*E-U*w*E+U*T*Q-X*W*Q-D*T*k+X*w*k)*m5,L[0x8]=m2*m5,L[0x9]=(P*Y*E-U*I*E-P*C*k+X*I*k+U*C*V-X*Y*V)*m5,L[0xa]=(D*I*E-P*K*E+P*C*Q-X*I*Q-D*C*V+X*K*V)*m5,L[0xb]=(U*K*E-D*Y*E-U*C*Q+X*Y*Q+D*C*k-X*K*k)*m5,L[0xc]=m3*m5,L[0xd]=(U*I*T-P*Y*T+P*C*W-X*I*W-U*C*Z+X*Y*Z)*m5,L[0xe]=(P*K*T-D*I*T-P*C*w+X*I*w+D*C*Z-X*K*Z)*m5,L[0xf]=(D*Y*T-U*K*T+U*C*w-X*Y*w-D*C*W+X*K*W)*m5,this;},b['scale']=function(L){var y=this['elements'],X=L['x'],C=L['y'],T=L['z'];return y[0x0]*=X,y[0x4]*=C,y[0x8]*=T,y[0x1]*=X,y[0x5]*=C,y[0x9]*=T,y[0x2]*=X,y[0x6]*=C,y[0xa]*=T,y[0x3]*=X,y[0x7]*=C,y[0xb]*=T,this;},b['getMaxScaleOnAxis']=function(){var L=this['elements'],y=L[0x0]*L[0x0]+L[0x1]*L[0x1]+L[0x2]*L[0x2],X=L[0x4]*L[0x4]+L[0x5]*L[0x5]+L[0x6]*L[0x6],C=L[0x8]*L[0x8]+L[0x9]*L[0x9]+L[0xa]*L[0xa];return Math['sqrt'](Math['max'](y,X,C));},b['makeTranslation']=function(L,y,X){return L['isVector3']?this['set'](0x1,0x0,0x0,L['x'],0x0,0x1,0x0,L['y'],0x0,0x0,0x1,L['z'],0x0,0x0,0x0,0x1):this['set'](0x1,0x0,0x0,L,0x0,0x1,0x0,y,0x0,0x0,0x1,X,0x0,0x0,0x0,0x1),this;},b['makeRotationX']=function(L){var y=Math['cos'](L),X=Math['sin'](L);return this['set'](0x1,0x0,0x0,0x0,0x0,y,-X,0x0,0x0,X,y,0x0,0x0,0x0,0x0,0x1),this;},b['makeRotationY']=function(L){var y=Math['cos'](L),X=Math['sin'](L);return this['set'](y,0x0,X,0x0,0x0,0x1,0x0,0x0,-X,0x0,y,0x0,0x0,0x0,0x0,0x1),this;},b['makeRotationZ']=function(L){var y=Math['cos'](L),X=Math['sin'](L);return this['set'](y,-X,0x0,0x0,X,y,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,0x1),this;},b['makeRotationAxis']=function(L,y){var X=Math['cos'](y),C=Math['sin'](y),T=0x1-X,E=L['x'],D=L['y'],K=L['z'],w=T*E,p=T*D;return this['set'](w*E+X,w*D-C*K,w*K+C*D,0x0,w*D+C*K,p*D+X,p*K-C*E,0x0,w*K-C*D,p*K+C*E,T*K*K+X,0x0,0x0,0x0,0x0,0x1),this;},b['makeScale']=function(L,y,X){return this['set'](L,0x0,0x0,0x0,0x0,y,0x0,0x0,0x0,0x0,X,0x0,0x0,0x0,0x0,0x1),this;},b['makeShear']=function(L,y,X,C,T,E){return this['set'](0x1,X,T,0x0,L,0x1,E,0x0,y,C,0x1,0x0,0x0,0x0,0x0,0x1),this;},b['compose']=function(L,X,C){var T=this['elements'],E=X['_x'],D=X['_y'],K=X['_z'],w=X['_w'],Q=E+E,U=D+D,Y=K+K,W=E*Q,k=E*U,P=E*Y,I=D*U,Z=D*Y,V=K*Y,m0=w*Q,m1=w*U,m2=w*Y,m3=C['x'],m4=C['y'],m5=C['z'];return T[0x0]=(0x1-(I+V))*m3,T[0x1]=(k+m2)*m3,T[0x2]=(P-m1)*m3,T[0x3]=0x0,T[0x4]=(k-m2)*m4,T[0x5]=(0x1-(W+V))*m4,T[0x6]=(Z+m0)*m4,T[0x7]=0x0,T[0x8]=(P+m1)*m5,T[0x9]=(Z-m0)*m5,T[0xa]=(0x1-(W+I))*m5,T[0xb]=0x0,T[0xc]=L['x'],T[0xd]=L['y'],T[0xe]=L['z'],T[0xf]=0x1,this;},b['decompose']=function(L,y,X){var C=this['elements'],T=v['set'](C[0x0],C[0x1],C[0x2])['length'](),E=v['set'](C[0x4],C[0x5],C[0x6])['length'](),D=v['set'](C[0x8],C[0x9],C[0xa])['length']();this['determinant']()<0x0&&(T=-T),L['x']=C[0xc],L['y']=C[0xd],L['z']=C[0xe],F['copy'](this);var K=0x1/T,w=0x1/E,p=0x1/D;return F['elements'][0x0]*=K,F['elements'][0x1]*=K,F['elements'][0x2]*=K,F['elements'][0x4]*=w,F['elements'][0x5]*=w,F['elements'][0x6]*=w,F['elements'][0x8]*=p,F['elements'][0x9]*=p,F['elements'][0xa]*=p,y['setFromRotationMatrix'](F),X['x']=T,X['y']=E,X['z']=D,this;},b['makePerspective']=function(L,y,X,C,T,E,D){void 0x0===D&&(D=N['TdN']);var K,w,Q=this['elements'],U=0x2*T/(y-L),M=0x2*T/(X-C),g=(y+L)/(y-L),x=(X+C)/(X-C);if(D===N['TdN'])K=-(E+T)/(E-T),w=-0x2*E*T/(E-T);else{if(D!==N['i7u'])throw new Error('THREE.Matrix4.makePerspective():\x20Invalid\x20coordinate\x20system:\x20'+D);K=-E/(E-T),w=-E*T/(E-T);}return Q[0x0]=U,Q[0x4]=0x0,Q[0x8]=g,Q[0xc]=0x0,Q[0x1]=0x0,Q[0x5]=M,Q[0x9]=x,Q[0xd]=0x0,Q[0x2]=0x0,Q[0x6]=0x0,Q[0xa]=K,Q[0xe]=w,Q[0x3]=0x0,Q[0x7]=0x0,Q[0xb]=-0x1,Q[0xf]=0x0,this;},b['makeOrthographic']=function(L,y,X,C,T,E,D){void 0x0===D&&(D=N['TdN']);var K,w,Q=this['elements'],U=0x1/(y-L),M=0x1/(X-C),g=0x1/(E-T),x=(y+L)*U,Y=(X+C)*M;if(D===N['TdN'])K=(E+T)*g,w=-0x2*g;else{if(D!==N['i7u'])throw new Error('THREE.Matrix4.makeOrthographic():\x20Invalid\x20coordinate\x20system:\x20'+D);K=T*g,w=-0x1*g;}return Q[0x0]=0x2*U,Q[0x4]=0x0,Q[0x8]=0x0,Q[0xc]=-x,Q[0x1]=0x0,Q[0x5]=0x2*M,Q[0x9]=0x0,Q[0xd]=-Y,Q[0x2]=0x0,Q[0x6]=0x0,Q[0xa]=w,Q[0xe]=-K,Q[0x3]=0x0,Q[0x7]=0x0,Q[0xb]=0x0,Q[0xf]=0x1,this;},b['equals']=function(L){for(var y=this['elements'],X=L['elements'],C=0x0;C<0x10;C++)if(y[C]!==X[C])return!0x1;return!0x0;},b['fromArray']=function(L,y){void 0x0===y&&(y=0x0);for(var X=0x0;X<0x10;X++)this['elements'][X]=L[X+y];return this;},b['toArray']=function(L,y){void 0x0===L&&(L=[]),void 0x0===y&&(y=0x0);var X=this['elements'];return L[y]=X[0x0],L[y+0x1]=X[0x1],L[y+0x2]=X[0x2],L[y+0x3]=X[0x3],L[y+0x4]=X[0x4],L[y+0x5]=X[0x5],L[y+0x6]=X[0x6],L[y+0x7]=X[0x7],L[y+0x8]=X[0x8],L[y+0x9]=X[0x9],L[y+0xa]=X[0xa],L[y+0xb]=X[0xb],L[y+0xc]=X[0xc],L[y+0xd]=X[0xd],L[y+0xe]=X[0xe],L[y+0xf]=X[0xf],L;},q;}()),v=new J['P'](),F=new A(),G=new J['P'](0x0,0x0,0x0),R=new J['P'](0x1,0x1,0x1),j=new J['P'](),B=new J['P'](),z=new J['P']();},0xa3bc:(m,H,O)=>{O['d'](H,{'Z':()=>F});var u=O(0x3e78),N=O(0x1008e),J=new N['P'](),A=new N['P'](),v=new u['d'](),F=(function(){function G(j,B){void 0x0===j&&(j=new N['P'](0x1,0x0,0x0)),void 0x0===B&&(B=0x0),this['isPlane']=!0x0,this['normal']=j,this['constant']=B;}var R=G['prototype'];return R['set']=function(j,B){return this['normal']['copy'](j),this['constant']=B,this;},R['setComponents']=function(j,B,z,q){return this['normal']['set'](j,B,z),this['constant']=q,this;},R['setFromNormalAndCoplanarPoint']=function(j,B){return this['normal']['copy'](j),this['constant']=-B['dot'](this['normal']),this;},R['setFromCoplanarPoints']=function(j,B,z){var q=J['subVectors'](z,B)['cross'](A['subVectors'](j,B))['normalize']();return this['setFromNormalAndCoplanarPoint'](q,j),this;},R['copy']=function(j){return this['normal']['copy'](j['normal']),this['constant']=j['constant'],this;},R['normalize']=function(){var j=0x1/this['normal']['length']();return this['normal']['multiplyScalar'](j),this['constant']*=j,this;},R['negate']=function(){return this['constant']*=-0x1,this['normal']['negate'](),this;},R['distanceToPoint']=function(j){return this['normal']['dot'](j)+this['constant'];},R['distanceToSphere']=function(j){return this['distanceToPoint'](j['center'])-j['radius'];},R['projectPoint']=function(j,B){return B['copy'](j)['addScaledVector'](this['normal'],-this['distanceToPoint'](j));},R['intersectLine']=function(j,B){var z=j['delta'](J),q=this['normal']['dot'](z);if(0x0===q)return 0x0===this['distanceToPoint'](j['start'])?B['copy'](j['start']):null;var b=-(j['start']['dot'](this['normal'])+this['constant'])/q;return b<0x0||b>0x1?null:B['copy'](j['start'])['addScaledVector'](z,b);},R['intersectsLine']=function(j){var B=this['distanceToPoint'](j['start']),z=this['distanceToPoint'](j['end']);return B<0x0&&z>0x0||z<0x0&&B>0x0;},R['intersectsBox']=function(j){return j['intersectsPlane'](this);},R['intersectsSphere']=function(j){return j['intersectsPlane'](this);},R['coplanarPoint']=function(j){return j['copy'](this['normal'])['multiplyScalar'](-this['constant']);},R['applyMatrix4']=function(j,B){var z=B||v['getNormalMatrix'](j),q=this['coplanarPoint'](J)['applyMatrix4'](j),b=this['normal']['applyMatrix3'](z)['normalize']();return this['constant']=-q['dot'](b),this;},R['translate']=function(j){return this['constant']-=j['dot'](this['normal']),this;},R['equals']=function(j){return j['normal']['equals'](this['normal'])&&j['constant']===this['constant'];},R['clone']=function(){return new this['constructor']()['copy'](this);},G;}());},0x13294:(m,H,O)=>{O['d'](H,{'P':()=>v});var u=O(0x14124),N=O(0xd5e4),J=O['n'](N),A=O(0xbd95),v=(function(){function F(c,R,j,B){void 0x0===c&&(c=0x0),void 0x0===R&&(R=0x0),void 0x0===j&&(j=0x0),void 0x0===B&&(B=0x1),this['isQuaternion']=!0x0,this['_x']=c,this['_y']=R,this['_z']=j,this['_w']=B;}F['slerpFlat']=function(R,j,B,z,q,b,L){var X=B[z+0x0],C=B[z+0x1],T=B[z+0x2],E=B[z+0x3],D=q[b+0x0],K=q[b+0x1],w=q[b+0x2],Q=q[b+0x3];if(0x0===L)return R[j+0x0]=X,R[j+0x1]=C,R[j+0x2]=T,void(R[j+0x3]=E);if(0x1===L)return R[j+0x0]=D,R[j+0x1]=K,R[j+0x2]=w,void(R[j+0x3]=Q);if(E!==Q||X!==D||C!==K||T!==w){var U=0x1-L,Y=X*D+C*K+T*w+E*Q,W=Y>=0x0?0x1:-0x1,k=0x1-Y*Y;if(k>Number['EPSILON']){var P=Math['sqrt'](k),I=Math['atan2'](P,Y*W);U=Math['sin'](U*I)/P,L=Math['sin'](L*I)/P;}var Z=L*W;if(X=X*U+D*Z,C=C*U+K*Z,T=T*U+w*Z,E=E*U+Q*Z,U===0x1-L){var V=0x1/Math['sqrt'](X*X+C*C+T*T+E*E);X*=V,C*=V,T*=V,E*=V;}}R[j]=X,R[j+0x1]=C,R[j+0x2]=T,R[j+0x3]=E;},F['multiplyQuaternionsFlat']=function(R,j,B,z,q,b){var L=B[z],y=B[z+0x1],X=B[z+0x2],C=B[z+0x3],T=q[b],E=q[b+0x1],D=q[b+0x2],K=q[b+0x3];return R[j]=L*K+C*T+y*D-X*E,R[j+0x1]=y*K+C*E+X*T-L*D,R[j+0x2]=X*K+C*D+L*E-y*T,R[j+0x3]=C*K-L*T-y*E-X*D,R;};var G=F['prototype'];return G['set']=function(c,R,j,B){return this['_x']=c,this['_y']=R,this['_z']=j,this['_w']=B,this['_onChangeCallback'](),this;},G['clone']=function(){return new this['constructor'](this['_x'],this['_y'],this['_z'],this['_w']);},G['copy']=function(c){return this['_x']=c['x'],this['_y']=c['y'],this['_z']=c['z'],this['_w']=c['w'],this['_onChangeCallback'](),this;},G['setFromEuler']=function(R,j){var B=R['_x'],z=R['_y'],q=R['_z'],b=R['_order'],L=Math['cos'],y=Math['sin'],X=L(B/0x2),C=L(z/0x2),T=L(q/0x2),E=y(B/0x2),D=y(z/0x2),K=y(q/0x2);switch(b){case'XYZ':this['_x']=E*C*T+X*D*K,this['_y']=X*D*T-E*C*K,this['_z']=X*C*K+E*D*T,this['_w']=X*C*T-E*D*K;break;case'YXZ':this['_x']=E*C*T+X*D*K,this['_y']=X*D*T-E*C*K,this['_z']=X*C*K-E*D*T,this['_w']=X*C*T+E*D*K;break;case'ZXY':this['_x']=E*C*T-X*D*K,this['_y']=X*D*T+E*C*K,this['_z']=X*C*K+E*D*T,this['_w']=X*C*T-E*D*K;break;case'ZYX':this['_x']=E*C*T-X*D*K,this['_y']=X*D*T+E*C*K,this['_z']=X*C*K-E*D*T,this['_w']=X*C*T+E*D*K;break;case'YZX':this['_x']=E*C*T+X*D*K,this['_y']=X*D*T+E*C*K,this['_z']=X*C*K-E*D*T,this['_w']=X*C*T-E*D*K;break;case'XZY':this['_x']=E*C*T-X*D*K,this['_y']=X*D*T-E*C*K,this['_z']=X*C*K+E*D*T,this['_w']=X*C*T+E*D*K;break;default:console['warn']('THREE.Quaternion:\x20.setFromEuler()\x20encountered\x20an\x20unknown\x20order:\x20'+b);}return!0x1!==j&&this['_onChangeCallback'](),this;},G['setFromAxisAngle']=function(c,R){var j=R/0x2,B=Math['sin'](j);return this['_x']=c['x']*B,this['_y']=c['y']*B,this['_z']=c['z']*B,this['_w']=Math['cos'](j),this['_onChangeCallback'](),this;},G['setFromRotationMatrix']=function(R){var j=R['elements'],B=j[0x0],z=j[0x4],q=j[0x8],b=j[0x1],L=j[0x5],y=j[0x9],X=j[0x2],C=j[0x6],T=j[0xa],E=B+L+T;if(E>0x0){var D=0.5/Math['sqrt'](E+0x1);this['_w']=0.25/D,this['_x']=(C-y)*D,this['_y']=(q-X)*D,this['_z']=(b-z)*D;}else{if(B>L&&B>T){var K=0x2*Math['sqrt'](0x1+B-L-T);this['_w']=(C-y)/K,this['_x']=0.25*K,this['_y']=(z+b)/K,this['_z']=(q+X)/K;}else{if(L>T){var w=0x2*Math['sqrt'](0x1+L-B-T);this['_w']=(q-X)/w,this['_x']=(z+b)/w,this['_y']=0.25*w,this['_z']=(y+C)/w;}else{var Q=0x2*Math['sqrt'](0x1+T-B-L);this['_w']=(b-z)/Q,this['_x']=(q+X)/Q,this['_y']=(y+C)/Q,this['_z']=0.25*Q;}}}return this['_onChangeCallback'](),this;},G['setFromUnitVectors']=function(c,R){var j=c['dot'](R)+0x1;return j<Number['EPSILON']?(j=0x0,Math['abs'](c['x'])>Math['abs'](c['z'])?(this['_x']=-c['y'],this['_y']=c['x'],this['_z']=0x0,this['_w']=j):(this['_x']=0x0,this['_y']=-c['z'],this['_z']=c['y'],this['_w']=j)):(this['_x']=c['y']*R['z']-c['z']*R['y'],this['_y']=c['z']*R['x']-c['x']*R['z'],this['_z']=c['x']*R['y']-c['y']*R['x'],this['_w']=j),this['normalize']();},G['angleTo']=function(c){return 0x2*Math['acos'](Math['abs'](A['qE'](this['dot'](c),-0x1,0x1)));},G['rotateTowards']=function(c,R){var j=this['angleTo'](c);if(0x0===j)return this;var B=Math['min'](0x1,R/j);return this['slerp'](c,B),this;},G['identity']=function(){return this['set'](0x0,0x0,0x0,0x1);},G['invert']=function(){return this['conjugate']();},G['conjugate']=function(){return this['_x']*=-0x1,this['_y']*=-0x1,this['_z']*=-0x1,this['_onChangeCallback'](),this;},G['dot']=function(c){return this['_x']*c['_x']+this['_y']*c['_y']+this['_z']*c['_z']+this['_w']*c['_w'];},G['lengthSq']=function(){return this['_x']*this['_x']+this['_y']*this['_y']+this['_z']*this['_z']+this['_w']*this['_w'];},G['length']=function(){return Math['sqrt'](this['_x']*this['_x']+this['_y']*this['_y']+this['_z']*this['_z']+this['_w']*this['_w']);},G['normalize']=function(){var c=this['length']();return 0x0===c?(this['_x']=0x0,this['_y']=0x0,this['_z']=0x0,this['_w']=0x1):(c=0x1/c,this['_x']=this['_x']*c,this['_y']=this['_y']*c,this['_z']=this['_z']*c,this['_w']=this['_w']*c),this['_onChangeCallback'](),this;},G['multiply']=function(c){return this['multiplyQuaternions'](this,c);},G['premultiply']=function(c){return this['multiplyQuaternions'](c,this);},G['multiplyQuaternions']=function(R,j){var B=R['_x'],z=R['_y'],q=R['_z'],b=R['_w'],L=j['_x'],y=j['_y'],h=j['_z'],X=j['_w'];return this['_x']=B*X+b*L+z*h-q*y,this['_y']=z*X+b*y+q*L-B*h,this['_z']=q*X+b*h+B*y-z*L,this['_w']=b*X-B*L-z*y-q*h,this['_onChangeCallback'](),this;},G['slerp']=function(R,j){if(0x0===j)return this;if(0x1===j)return this['copy'](R);var B=this['_x'],z=this['_y'],q=this['_z'],b=this['_w'],L=b*R['_w']+B*R['_x']+z*R['_y']+q*R['_z'];if(L<0x0?(this['_w']=-R['_w'],this['_x']=-R['_x'],this['_y']=-R['_y'],this['_z']=-R['_z'],L=-L):this['copy'](R),L>=0x1)return this['_w']=b,this['_x']=B,this['_y']=z,this['_z']=q,this;var y=0x1-L*L;if(y<=Number['EPSILON']){var X=0x1-j;return this['_w']=X*b+j*this['_w'],this['_x']=X*B+j*this['_x'],this['_y']=X*z+j*this['_y'],this['_z']=X*q+j*this['_z'],this['normalize'](),this['_onChangeCallback'](),this;}var C=Math['sqrt'](y),T=Math['atan2'](C,L),E=Math['sin']((0x1-j)*T)/C,D=Math['sin'](j*T)/C;return this['_w']=b*E+this['_w']*D,this['_x']=B*E+this['_x']*D,this['_y']=z*E+this['_y']*D,this['_z']=q*E+this['_z']*D,this['_onChangeCallback'](),this;},G['slerpQuaternions']=function(c,R,j){return this['copy'](c)['slerp'](R,j);},G['random']=function(){var c=Math['random'](),R=Math['sqrt'](0x1-c),j=Math['sqrt'](c),B=0x2*Math['PI']*Math['random'](),z=0x2*Math['PI']*Math['random']();return this['set'](R*Math['cos'](B),j*Math['sin'](z),j*Math['cos'](z),R*Math['sin'](B));},G['equals']=function(c){return c['_x']===this['_x']&&c['_y']===this['_y']&&c['_z']===this['_z']&&c['_w']===this['_w'];},G['fromArray']=function(c,R){return void 0x0===R&&(R=0x0),this['_x']=c[R],this['_y']=c[R+0x1],this['_z']=c[R+0x2],this['_w']=c[R+0x3],this['_onChangeCallback'](),this;},G['toArray']=function(c,R){return void 0x0===c&&(c=[]),void 0x0===R&&(R=0x0),c[R]=this['_x'],c[R+0x1]=this['_y'],c[R+0x2]=this['_z'],c[R+0x3]=this['_w'],c;},G['fromBufferAttribute']=function(c,R){return this['_x']=c['getX'](R),this['_y']=c['getY'](R),this['_z']=c['getZ'](R),this['_w']=c['getW'](R),this;},G['toJSON']=function(){return this['toArray']();},G['_onChange']=function(c){return this['_onChangeCallback']=c,this;},G['_onChangeCallback']=function(){},G[Symbol['iterator']]=J()['mark'](function c(){return J()['wrap'](function(R){for(;;)switch(R['prev']=R['next']){case 0x0:return R['next']=0x2,this['_x'];case 0x2:return R['next']=0x4,this['_y'];case 0x4:return R['next']=0x6,this['_z'];case 0x6:return R['next']=0x8,this['_w'];case 0x8:case'end':return R['stop']();}},c,this);}),(0x0,u['A'])(F,[{'key':'x','get':function(){return this['_x'];},'set':function(R){this['_x']=R,this['_onChangeCallback']();}},{'key':'y','get':function(){return this['_y'];},'set':function(R){this['_y']=R,this['_onChangeCallback']();}},{'key':'z','get':function(){return this['_z'];},'set':function(R){this['_z']=R,this['_onChangeCallback']();}},{'key':'w','get':function(){return this['_w'];},'set':function(R){this['_w']=R,this['_onChangeCallback']();}}]);}());},0xbf9a:(m,H,O)=>{O['d'](H,{'R':()=>B});var N=O(0x1008e),J=new N['P'](),A=new N['P'](),v=new N['P'](),F=new N['P'](),G=new N['P'](),R=new N['P'](),j=new N['P'](),B=(function(){function z(b,L){void 0x0===b&&(b=new N['P']()),void 0x0===L&&(L=new N['P'](0x0,0x0,-0x1)),this['origin']=b,this['direction']=L;}var q=z['prototype'];return q['set']=function(b,L){return this['origin']['copy'](b),this['direction']['copy'](L),this;},q['copy']=function(b){return this['origin']['copy'](b['origin']),this['direction']['copy'](b['direction']),this;},q['at']=function(b,L){return L['copy'](this['origin'])['addScaledVector'](this['direction'],b);},q['lookAt']=function(b){return this['direction']['copy'](b)['sub'](this['origin'])['normalize'](),this;},q['recast']=function(b){return this['origin']['copy'](this['at'](b,J)),this;},q['closestPointToPoint']=function(b,L){L['subVectors'](b,this['origin']);var y=L['dot'](this['direction']);return y<0x0?L['copy'](this['origin']):L['copy'](this['origin'])['addScaledVector'](this['direction'],y);},q['distanceToPoint']=function(b){return Math['sqrt'](this['distanceSqToPoint'](b));},q['distanceSqToPoint']=function(b){var L=J['subVectors'](b,this['origin'])['dot'](this['direction']);return L<0x0?this['origin']['distanceToSquared'](b):(J['copy'](this['origin'])['addScaledVector'](this['direction'],L),J['distanceToSquared'](b));},q['distanceSqToSegment']=function(b,L,y,X){A['copy'](b)['add'](L)['multiplyScalar'](0.5),v['copy'](L)['sub'](b)['normalize'](),F['copy'](this['origin'])['sub'](A);var C,T,E,D,K=0.5*b['distanceTo'](L),w=-this['direction']['dot'](v),Q=F['dot'](this['direction']),U=-F['dot'](v),M=F['lengthSq'](),x=Math['abs'](0x1-w*w);if(x>0x0){if(T=w*Q-U,D=K*x,(C=w*U-Q)>=0x0){if(T>=-D){if(T<=D){var Y=0x1/x;E=(C*=Y)*(C+w*(T*=Y)+0x2*Q)+T*(w*C+T+0x2*U)+M;}else T=K,E=-(C=Math['max'](0x0,-(w*T+Q)))*C+T*(T+0x2*U)+M;}else T=-K,E=-(C=Math['max'](0x0,-(w*T+Q)))*C+T*(T+0x2*U)+M;}else T<=-D?E=-(C=Math['max'](0x0,-(-w*K+Q)))*C+(T=C>0x0?-K:Math['min'](Math['max'](-K,-U),K))*(T+0x2*U)+M:T<=D?(C=0x0,E=(T=Math['min'](Math['max'](-K,-U),K))*(T+0x2*U)+M):E=-(C=Math['max'](0x0,-(w*K+Q)))*C+(T=C>0x0?K:Math['min'](Math['max'](-K,-U),K))*(T+0x2*U)+M;}else T=w>0x0?-K:K,E=-(C=Math['max'](0x0,-(w*T+Q)))*C+T*(T+0x2*U)+M;return y&&y['copy'](this['origin'])['addScaledVector'](this['direction'],C),X&&X['copy'](A)['addScaledVector'](v,T),E;},q['intersectSphere']=function(b,L){J['subVectors'](b['center'],this['origin']);var y=J['dot'](this['direction']),X=J['dot'](J)-y*y,C=b['radius']*b['radius'];if(X>C)return null;var T=Math['sqrt'](C-X),E=y-T,d=y+T;return d<0x0?null:E<0x0?this['at'](d,L):this['at'](E,L);},q['intersectsSphere']=function(b){return this['distanceSqToPoint'](b['center'])<=b['radius']*b['radius'];},q['distanceToPlane']=function(b){var L=b['normal']['dot'](this['direction']);if(0x0===L)return 0x0===b['distanceToPoint'](this['origin'])?0x0:null;var y=-(this['origin']['dot'](b['normal'])+b['constant'])/L;return y>=0x0?y:null;},q['intersectPlane']=function(b,L){var y=this['distanceToPlane'](b);return null===y?null:this['at'](y,L);},q['intersectsPlane']=function(b){var L=b['distanceToPoint'](this['origin']);return 0x0===L||b['normal']['dot'](this['direction'])*L<0x0;},q['intersectBox']=function(b,L){var y,X,C,T,E,d,D=0x1/this['direction']['x'],K=0x1/this['direction']['y'],w=0x1/this['direction']['z'],p=this['origin'];return D>=0x0?(y=(b['min']['x']-p['x'])*D,X=(b['max']['x']-p['x'])*D):(y=(b['max']['x']-p['x'])*D,X=(b['min']['x']-p['x'])*D),K>=0x0?(C=(b['min']['y']-p['y'])*K,T=(b['max']['y']-p['y'])*K):(C=(b['max']['y']-p['y'])*K,T=(b['min']['y']-p['y'])*K),y>T||C>X?null:((C>y||isNaN(y))&&(y=C),(T<X||isNaN(X))&&(X=T),w>=0x0?(E=(b['min']['z']-p['z'])*w,d=(b['max']['z']-p['z'])*w):(E=(b['max']['z']-p['z'])*w,d=(b['min']['z']-p['z'])*w),y>d||E>X?null:((E>y||y!=y)&&(y=E),(d<X||X!=X)&&(X=d),X<0x0?null:this['at'](y>=0x0?y:X,L)));},q['intersectsBox']=function(b){return null!==this['intersectBox'](b,J);},q['intersectTriangle']=function(b,L,y,X,C){G['subVectors'](L,b),R['subVectors'](y,b),j['crossVectors'](G,R);var T,E=this['direction']['dot'](j);if(E>0x0){if(X)return null;T=0x1;}else{if(!(E<0x0))return null;T=-0x1,E=-E;}F['subVectors'](this['origin'],b);var D=T*this['direction']['dot'](R['crossVectors'](F,R));if(D<0x0)return null;var K=T*this['direction']['dot'](G['cross'](F));if(K<0x0)return null;if(D+K>E)return null;var w=-T*F['dot'](j);return w<0x0?null:this['at'](w/E,C);},q['applyMatrix4']=function(b){return this['origin']['applyMatrix4'](b),this['direction']['transformDirection'](b),this;},q['equals']=function(b){return b['origin']['equals'](this['origin'])&&b['direction']['equals'](this['direction']);},q['clone']=function(){return new this['constructor']()['copy'](this);},z;}());},0x79b5:(m,H,O)=>{O['d'](H,{'i':()=>F});var u=O(0x7002),N=O(0x1008e),J=new u['N'](),A=new N['P'](),v=new N['P'](),F=(function(){function G(j,B){void 0x0===j&&(j=new N['P']()),void 0x0===B&&(B=-0x1),this['center']=j,this['radius']=B;}var R=G['prototype'];return R['set']=function(j,B){return this['center']['copy'](j),this['radius']=B,this;},R['setFromPoints']=function(j,B){var z=this['center'];void 0x0!==B?z['copy'](B):J['setFromPoints'](j)['getCenter'](z);for(var q=0x0,b=0x0,L=j['length'];b<L;b++)q=Math['max'](q,z['distanceToSquared'](j[b]));return this['radius']=Math['sqrt'](q),this;},R['copy']=function(j){return this['center']['copy'](j['center']),this['radius']=j['radius'],this;},R['isEmpty']=function(){return this['radius']<0x0;},R['makeEmpty']=function(){return this['center']['set'](0x0,0x0,0x0),this['radius']=-0x1,this;},R['containsPoint']=function(j){return j['distanceToSquared'](this['center'])<=this['radius']*this['radius'];},R['distanceToPoint']=function(j){return j['distanceTo'](this['center'])-this['radius'];},R['intersectsSphere']=function(j){var B=this['radius']+j['radius'];return j['center']['distanceToSquared'](this['center'])<=B*B;},R['intersectsBox']=function(j){return j['intersectsSphere'](this);},R['intersectsPlane']=function(j){return Math['abs'](j['distanceToPoint'](this['center']))<=this['radius'];},R['clampPoint']=function(j,B){var z=this['center']['distanceToSquared'](j);return B['copy'](j),z>this['radius']*this['radius']&&(B['sub'](this['center'])['normalize'](),B['multiplyScalar'](this['radius'])['add'](this['center'])),B;},R['getBoundingBox']=function(j){return this['isEmpty']()?(j['makeEmpty'](),j):(j['set'](this['center'],this['center']),j['expandByScalar'](this['radius']),j);},R['applyMatrix4']=function(j){return this['center']['applyMatrix4'](j),this['radius']=this['radius']*j['getMaxScaleOnAxis'](),this;},R['translate']=function(j){return this['center']['add'](j),this;},R['expandByPoint']=function(j){if(this['isEmpty']())return this['center']['copy'](j),this['radius']=0x0,this;A['subVectors'](j,this['center']);var B=A['lengthSq']();if(B>this['radius']*this['radius']){var z=Math['sqrt'](B),q=0.5*(z-this['radius']);this['center']['addScaledVector'](A,q/z),this['radius']+=q;}return this;},R['union']=function(j){return j['isEmpty']()?this:this['isEmpty']()?(this['copy'](j),this):(!0x0===this['center']['equals'](j['center'])?this['radius']=Math['max'](this['radius'],j['radius']):(v['subVectors'](j['center'],this['center'])['setLength'](j['radius']),this['expandByPoint'](A['copy'](j['center'])['add'](v)),this['expandByPoint'](A['copy'](j['center'])['sub'](v))),this);},R['equals']=function(j){return j['center']['equals'](this['center'])&&j['radius']===this['radius'];},R['clone']=function(){return new this['constructor']()['copy'](this);},G;}());},0x2755:(m,H,O)=>{O(0xbd95);},0xe3ac:(m,H,O)=>{O(0x1008e);},0x37c8:(H,O,N)=>{N['d'](O,{'l':()=>y});var J=N(0x1008e),A=new J['P'](),v=new J['P'](),F=new J['P'](),G=new J['P'](),R=new J['P'](),j=new J['P'](),B=new J['P'](),z=new J['P'](),q=new J['P'](),b=new J['P'](),L=!0x1,y=(function(){function X(T,E,D){void 0x0===T&&(T=new J['P']()),void 0x0===E&&(E=new J['P']()),void 0x0===D&&(D=new J['P']()),this['a']=T,this['b']=E,this['c']=D;}X['getNormal']=function(T,E,D,K){K['subVectors'](D,E),A['subVectors'](T,E),K['cross'](A);var w=K['lengthSq']();return w>0x0?K['multiplyScalar'](0x1/Math['sqrt'](w)):K['set'](0x0,0x0,0x0);},X['getBarycoord']=function(T,E,D,K,w){A['subVectors'](K,E),v['subVectors'](D,E),F['subVectors'](T,E);var Q=A['dot'](A),U=A['dot'](v),M=A['dot'](F),g=v['dot'](v),x=v['dot'](F),Y=Q*g-U*U;if(0x0===Y)return w['set'](-0x2,-0x1,-0x1);var W=0x1/Y,k=(g*M-U*x)*W,S=(Q*x-U*M)*W;return w['set'](0x1-k-S,S,k);},X['containsPoint']=function(T,E,D,K){return this['getBarycoord'](T,E,D,K,G),G['x']>=0x0&&G['y']>=0x0&&G['x']+G['y']<=0x1;},X['getUV']=function(T,E,D,K,w,Q,U,M){return!0x1===L&&(console['warn']('THREE.Triangle.getUV()\x20has\x20been\x20renamed\x20to\x20THREE.Triangle.getInterpolation().'),L=!0x0),this['getInterpolation'](T,E,D,K,w,Q,U,M);},X['getInterpolation']=function(T,E,D,K,w,Q,U,M){return this['getBarycoord'](T,E,D,K,G),M['setScalar'](0x0),M['addScaledVector'](w,G['x']),M['addScaledVector'](Q,G['y']),M['addScaledVector'](U,G['z']),M;},X['isFrontFacing']=function(T,E,D,K){return A['subVectors'](D,E),v['subVectors'](T,E),A['cross'](v)['dot'](K)<0x0;};var C=X['prototype'];return C['set']=function(T,E,D){return this['a']['copy'](T),this['b']['copy'](E),this['c']['copy'](D),this;},C['setFromPointsAndIndices']=function(T,E,D,K){return this['a']['copy'](T[E]),this['b']['copy'](T[D]),this['c']['copy'](T[K]),this;},C['setFromAttributeAndIndices']=function(T,E,D,K){return this['a']['fromBufferAttribute'](T,E),this['b']['fromBufferAttribute'](T,D),this['c']['fromBufferAttribute'](T,K),this;},C['clone']=function(){return new this['constructor']()['copy'](this);},C['copy']=function(T){return this['a']['copy'](T['a']),this['b']['copy'](T['b']),this['c']['copy'](T['c']),this;},C['getArea']=function(){return A['subVectors'](this['c'],this['b']),v['subVectors'](this['a'],this['b']),0.5*A['cross'](v)['length']();},C['getMidpoint']=function(T){return T['addVectors'](this['a'],this['b'])['add'](this['c'])['multiplyScalar'](0x1/0x3);},C['getNormal']=function(T){return X['getNormal'](this['a'],this['b'],this['c'],T);},C['getPlane']=function(T){return T['setFromCoplanarPoints'](this['a'],this['b'],this['c']);},C['getBarycoord']=function(T,E){return X['getBarycoord'](T,this['a'],this['b'],this['c'],E);},C['getUV']=function(T,E,D,K,w){return!0x1===L&&(console['warn']('THREE.Triangle.getUV()\x20has\x20been\x20renamed\x20to\x20THREE.Triangle.getInterpolation().'),L=!0x0),X['getInterpolation'](T,this['a'],this['b'],this['c'],E,D,K,w);},C['getInterpolation']=function(T,E,D,K,w){return X['getInterpolation'](T,this['a'],this['b'],this['c'],E,D,K,w);},C['containsPoint']=function(T){return X['containsPoint'](T,this['a'],this['b'],this['c']);},C['isFrontFacing']=function(T){return X['isFrontFacing'](this['a'],this['b'],this['c'],T);},C['intersectsBox']=function(T){return T['intersectsTriangle'](this);},C['closestPointToPoint']=function(T,E){var D,K,w=this['a'],Q=this['b'],U=this['c'];R['subVectors'](Q,w),j['subVectors'](U,w),z['subVectors'](T,w);var Y=R['dot'](z),W=j['dot'](z);if(Y<=0x0&&W<=0x0)return E['copy'](w);q['subVectors'](T,Q);var k=R['dot'](q),P=j['dot'](q);if(k>=0x0&&P<=k)return E['copy'](Q);var I=Y*P-k*W;if(I<=0x0&&Y>=0x0&&k<=0x0)return D=Y/(Y-k),E['copy'](w)['addScaledVector'](R,D);b['subVectors'](T,U);var Z=R['dot'](b),V=j['dot'](b);if(V>=0x0&&Z<=V)return E['copy'](U);var m0=Z*W-Y*V;if(m0<=0x0&&W>=0x0&&V<=0x0)return K=W/(W-V),E['copy'](w)['addScaledVector'](j,K);var m1=k*V-Z*P;if(m1<=0x0&&P-k>=0x0&&Z-V>=0x0)return B['subVectors'](U,Q),K=(P-k)/(P-k+(Z-V)),E['copy'](Q)['addScaledVector'](B,K);var m2=0x1/(m1+m0+I);return D=m0*m2,K=I*m2,E['copy'](w)['addScaledVector'](R,D)['addScaledVector'](j,K);},C['equals']=function(T){return T['a']['equals'](this['a'])&&T['b']['equals'](this['b'])&&T['c']['equals'](this['c']);},X;}());},0x1264d:(m,H,O)=>{O['d'](H,{'I':()=>v});var u=O(0x14124),N=O(0xd5e4),J=O['n'](N),A=O(0xbd95),v=(function(){function F(c,R){void 0x0===c&&(c=0x0),void 0x0===R&&(R=0x0),F['prototype']['isVector2']=!0x0,this['x']=c,this['y']=R;}var G=F['prototype'];return G['set']=function(c,R){return this['x']=c,this['y']=R,this;},G['setScalar']=function(c){return this['x']=c,this['y']=c,this;},G['setX']=function(c){return this['x']=c,this;},G['setY']=function(c){return this['y']=c,this;},G['setComponent']=function(c,R){switch(c){case 0x0:this['x']=R;break;case 0x1:this['y']=R;break;default:throw new Error('index\x20is\x20out\x20of\x20range:\x20'+c);}return this;},G['getComponent']=function(c){switch(c){case 0x0:return this['x'];case 0x1:return this['y'];default:throw new Error('index\x20is\x20out\x20of\x20range:\x20'+c);}},G['clone']=function(){return new this['constructor'](this['x'],this['y']);},G['copy']=function(c){return this['x']=c['x'],this['y']=c['y'],this;},G['add']=function(c){return this['x']+=c['x'],this['y']+=c['y'],this;},G['addScalar']=function(c){return this['x']+=c,this['y']+=c,this;},G['addVectors']=function(c,R){return this['x']=c['x']+R['x'],this['y']=c['y']+R['y'],this;},G['addScaledVector']=function(c,R){return this['x']+=c['x']*R,this['y']+=c['y']*R,this;},G['sub']=function(c){return this['x']-=c['x'],this['y']-=c['y'],this;},G['subScalar']=function(c){return this['x']-=c,this['y']-=c,this;},G['subVectors']=function(c,R){return this['x']=c['x']-R['x'],this['y']=c['y']-R['y'],this;},G['multiply']=function(c){return this['x']*=c['x'],this['y']*=c['y'],this;},G['multiplyScalar']=function(c){return this['x']*=c,this['y']*=c,this;},G['divide']=function(c){return this['x']/=c['x'],this['y']/=c['y'],this;},G['divideScalar']=function(c){return this['multiplyScalar'](0x1/c);},G['applyMatrix3']=function(c){var R=this['x'],j=this['y'],B=c['elements'];return this['x']=B[0x0]*R+B[0x3]*j+B[0x6],this['y']=B[0x1]*R+B[0x4]*j+B[0x7],this;},G['min']=function(c){return this['x']=Math['min'](this['x'],c['x']),this['y']=Math['min'](this['y'],c['y']),this;},G['max']=function(c){return this['x']=Math['max'](this['x'],c['x']),this['y']=Math['max'](this['y'],c['y']),this;},G['clamp']=function(c,R){return this['x']=Math['max'](c['x'],Math['min'](R['x'],this['x'])),this['y']=Math['max'](c['y'],Math['min'](R['y'],this['y'])),this;},G['clampScalar']=function(c,R){return this['x']=Math['max'](c,Math['min'](R,this['x'])),this['y']=Math['max'](c,Math['min'](R,this['y'])),this;},G['clampLength']=function(c,R){var j=this['length']();return this['divideScalar'](j||0x1)['multiplyScalar'](Math['max'](c,Math['min'](R,j)));},G['floor']=function(){return this['x']=Math['floor'](this['x']),this['y']=Math['floor'](this['y']),this;},G['ceil']=function(){return this['x']=Math['ceil'](this['x']),this['y']=Math['ceil'](this['y']),this;},G['round']=function(){return this['x']=Math['round'](this['x']),this['y']=Math['round'](this['y']),this;},G['roundToZero']=function(){return this['x']=Math['trunc'](this['x']),this['y']=Math['trunc'](this['y']),this;},G['negate']=function(){return this['x']=-this['x'],this['y']=-this['y'],this;},G['dot']=function(c){return this['x']*c['x']+this['y']*c['y'];},G['cross']=function(c){return this['x']*c['y']-this['y']*c['x'];},G['lengthSq']=function(){return this['x']*this['x']+this['y']*this['y'];},G['length']=function(){return Math['sqrt'](this['x']*this['x']+this['y']*this['y']);},G['manhattanLength']=function(){return Math['abs'](this['x'])+Math['abs'](this['y']);},G['normalize']=function(){return this['divideScalar'](this['length']()||0x1);},G['angle']=function(){var c=Math['atan2'](-this['y'],-this['x'])+Math['PI'];return c;},G['angleTo']=function(c){var R=Math['sqrt'](this['lengthSq']()*c['lengthSq']());if(0x0===R)return Math['PI']/0x2;var j=this['dot'](c)/R;return Math['acos'](A['qE'](j,-0x1,0x1));},G['distanceTo']=function(c){return Math['sqrt'](this['distanceToSquared'](c));},G['distanceToSquared']=function(c){var R=this['x']-c['x'],j=this['y']-c['y'];return R*R+j*j;},G['manhattanDistanceTo']=function(c){return Math['abs'](this['x']-c['x'])+Math['abs'](this['y']-c['y']);},G['setLength']=function(c){return this['normalize']()['multiplyScalar'](c);},G['lerp']=function(c,R){return this['x']+=(c['x']-this['x'])*R,this['y']+=(c['y']-this['y'])*R,this;},G['lerpVectors']=function(c,R,j){return this['x']=c['x']+(R['x']-c['x'])*j,this['y']=c['y']+(R['y']-c['y'])*j,this;},G['equals']=function(c){return c['x']===this['x']&&c['y']===this['y'];},G['fromArray']=function(c,R){return void 0x0===R&&(R=0x0),this['x']=c[R],this['y']=c[R+0x1],this;},G['toArray']=function(c,R){return void 0x0===c&&(c=[]),void 0x0===R&&(R=0x0),c[R]=this['x'],c[R+0x1]=this['y'],c;},G['fromBufferAttribute']=function(c,R){return this['x']=c['getX'](R),this['y']=c['getY'](R),this;},G['rotateAround']=function(c,R){var j=Math['cos'](R),B=Math['sin'](R),z=this['x']-c['x'],q=this['y']-c['y'];return this['x']=z*j-q*B+c['x'],this['y']=z*B+q*j+c['y'],this;},G['random']=function(){return this['x']=Math['random'](),this['y']=Math['random'](),this;},G[Symbol['iterator']]=J()['mark'](function c(){return J()['wrap'](function(R){for(;;)switch(R['prev']=R['next']){case 0x0:return R['next']=0x2,this['x'];case 0x2:return R['next']=0x4,this['y'];case 0x4:case'end':return R['stop']();}},c,this);}),(0x0,u['A'])(F,[{'key':'width','get':function(){return this['x'];},'set':function(R){this['x']=R;}},{'key':'height','get':function(){return this['y'];},'set':function(R){this['y']=R;}}]);}());},0x1008e:(m,H,O)=>{O['d'](H,{'P':()=>v});var u=O(0xd5e4),N=O['n'](u),J=O(0xbd95),A=O(0x13294),v=(function(){function R(B,z,q){void 0x0===B&&(B=0x0),void 0x0===z&&(z=0x0),void 0x0===q&&(q=0x0),R['prototype']['isVector3']=!0x0,this['x']=B,this['y']=z,this['z']=q;}var j=R['prototype'];return j['set']=function(B,z,q){return void 0x0===q&&(q=this['z']),this['x']=B,this['y']=z,this['z']=q,this;},j['setScalar']=function(B){return this['x']=B,this['y']=B,this['z']=B,this;},j['setX']=function(B){return this['x']=B,this;},j['setY']=function(B){return this['y']=B,this;},j['setZ']=function(B){return this['z']=B,this;},j['setComponent']=function(B,z){switch(B){case 0x0:this['x']=z;break;case 0x1:this['y']=z;break;case 0x2:this['z']=z;break;default:throw new Error('index\x20is\x20out\x20of\x20range:\x20'+B);}return this;},j['getComponent']=function(B){switch(B){case 0x0:return this['x'];case 0x1:return this['y'];case 0x2:return this['z'];default:throw new Error('index\x20is\x20out\x20of\x20range:\x20'+B);}},j['clone']=function(){return new this['constructor'](this['x'],this['y'],this['z']);},j['copy']=function(B){return this['x']=B['x'],this['y']=B['y'],this['z']=B['z'],this;},j['add']=function(B){return this['x']+=B['x'],this['y']+=B['y'],this['z']+=B['z'],this;},j['addScalar']=function(B){return this['x']+=B,this['y']+=B,this['z']+=B,this;},j['addVectors']=function(B,z){return this['x']=B['x']+z['x'],this['y']=B['y']+z['y'],this['z']=B['z']+z['z'],this;},j['addScaledVector']=function(B,z){return this['x']+=B['x']*z,this['y']+=B['y']*z,this['z']+=B['z']*z,this;},j['sub']=function(B){return this['x']-=B['x'],this['y']-=B['y'],this['z']-=B['z'],this;},j['subScalar']=function(B){return this['x']-=B,this['y']-=B,this['z']-=B,this;},j['subVectors']=function(B,z){return this['x']=B['x']-z['x'],this['y']=B['y']-z['y'],this['z']=B['z']-z['z'],this;},j['multiply']=function(B){return this['x']*=B['x'],this['y']*=B['y'],this['z']*=B['z'],this;},j['multiplyScalar']=function(B){return this['x']*=B,this['y']*=B,this['z']*=B,this;},j['multiplyVectors']=function(B,z){return this['x']=B['x']*z['x'],this['y']=B['y']*z['y'],this['z']=B['z']*z['z'],this;},j['applyEuler']=function(B){return this['applyQuaternion'](G['setFromEuler'](B));},j['applyAxisAngle']=function(B,z){return this['applyQuaternion'](G['setFromAxisAngle'](B,z));},j['applyMatrix3']=function(B){var z=this['x'],q=this['y'],b=this['z'],L=B['elements'];return this['x']=L[0x0]*z+L[0x3]*q+L[0x6]*b,this['y']=L[0x1]*z+L[0x4]*q+L[0x7]*b,this['z']=L[0x2]*z+L[0x5]*q+L[0x8]*b,this;},j['applyNormalMatrix']=function(B){return this['applyMatrix3'](B)['normalize']();},j['applyMatrix4']=function(B){var z=this['x'],q=this['y'],b=this['z'],L=B['elements'],y=0x1/(L[0x3]*z+L[0x7]*q+L[0xb]*b+L[0xf]);return this['x']=(L[0x0]*z+L[0x4]*q+L[0x8]*b+L[0xc])*y,this['y']=(L[0x1]*z+L[0x5]*q+L[0x9]*b+L[0xd])*y,this['z']=(L[0x2]*z+L[0x6]*q+L[0xa]*b+L[0xe])*y,this;},j['applyQuaternion']=function(B){var z=this['x'],q=this['y'],b=this['z'],L=B['x'],y=B['y'],h=B['z'],X=B['w'],C=0x2*(y*b-h*q),T=0x2*(h*z-L*b),E=0x2*(L*q-y*z);return this['x']=z+X*C+y*E-h*T,this['y']=q+X*T+h*C-L*E,this['z']=b+X*E+L*T-y*C,this;},j['project']=function(B){return this['applyMatrix4'](B['matrixWorldInverse'])['applyMatrix4'](B['projectionMatrix']);},j['unproject']=function(B){return this['applyMatrix4'](B['projectionMatrixInverse'])['applyMatrix4'](B['matrixWorld']);},j['transformDirection']=function(B){var z=this['x'],q=this['y'],b=this['z'],L=B['elements'];return this['x']=L[0x0]*z+L[0x4]*q+L[0x8]*b,this['y']=L[0x1]*z+L[0x5]*q+L[0x9]*b,this['z']=L[0x2]*z+L[0x6]*q+L[0xa]*b,this['normalize']();},j['divide']=function(B){return this['x']/=B['x'],this['y']/=B['y'],this['z']/=B['z'],this;},j['divideScalar']=function(B){return this['multiplyScalar'](0x1/B);},j['min']=function(B){return this['x']=Math['min'](this['x'],B['x']),this['y']=Math['min'](this['y'],B['y']),this['z']=Math['min'](this['z'],B['z']),this;},j['max']=function(B){return this['x']=Math['max'](this['x'],B['x']),this['y']=Math['max'](this['y'],B['y']),this['z']=Math['max'](this['z'],B['z']),this;},j['clamp']=function(B,z){return this['x']=Math['max'](B['x'],Math['min'](z['x'],this['x'])),this['y']=Math['max'](B['y'],Math['min'](z['y'],this['y'])),this['z']=Math['max'](B['z'],Math['min'](z['z'],this['z'])),this;},j['clampScalar']=function(B,z){return this['x']=Math['max'](B,Math['min'](z,this['x'])),this['y']=Math['max'](B,Math['min'](z,this['y'])),this['z']=Math['max'](B,Math['min'](z,this['z'])),this;},j['clampLength']=function(B,z){var q=this['length']();return this['divideScalar'](q||0x1)['multiplyScalar'](Math['max'](B,Math['min'](z,q)));},j['floor']=function(){return this['x']=Math['floor'](this['x']),this['y']=Math['floor'](this['y']),this['z']=Math['floor'](this['z']),this;},j['ceil']=function(){return this['x']=Math['ceil'](this['x']),this['y']=Math['ceil'](this['y']),this['z']=Math['ceil'](this['z']),this;},j['round']=function(){return this['x']=Math['round'](this['x']),this['y']=Math['round'](this['y']),this['z']=Math['round'](this['z']),this;},j['roundToZero']=function(){return this['x']=Math['trunc'](this['x']),this['y']=Math['trunc'](this['y']),this['z']=Math['trunc'](this['z']),this;},j['negate']=function(){return this['x']=-this['x'],this['y']=-this['y'],this['z']=-this['z'],this;},j['dot']=function(B){return this['x']*B['x']+this['y']*B['y']+this['z']*B['z'];},j['lengthSq']=function(){return this['x']*this['x']+this['y']*this['y']+this['z']*this['z'];},j['length']=function(){return Math['sqrt'](this['x']*this['x']+this['y']*this['y']+this['z']*this['z']);},j['manhattanLength']=function(){return Math['abs'](this['x'])+Math['abs'](this['y'])+Math['abs'](this['z']);},j['normalize']=function(){return this['divideScalar'](this['length']()||0x1);},j['setLength']=function(B){return this['normalize']()['multiplyScalar'](B);},j['lerp']=function(B,z){return this['x']+=(B['x']-this['x'])*z,this['y']+=(B['y']-this['y'])*z,this['z']+=(B['z']-this['z'])*z,this;},j['lerpVectors']=function(B,z,q){return this['x']=B['x']+(z['x']-B['x'])*q,this['y']=B['y']+(z['y']-B['y'])*q,this['z']=B['z']+(z['z']-B['z'])*q,this;},j['cross']=function(B){return this['crossVectors'](this,B);},j['crossVectors']=function(B,z){var q=B['x'],b=B['y'],L=B['z'],y=z['x'],h=z['y'],X=z['z'];return this['x']=b*X-L*h,this['y']=L*y-q*X,this['z']=q*h-b*y,this;},j['projectOnVector']=function(B){var z=B['lengthSq']();if(0x0===z)return this['set'](0x0,0x0,0x0);var q=B['dot'](this)/z;return this['copy'](B)['multiplyScalar'](q);},j['projectOnPlane']=function(B){return F['copy'](this)['projectOnVector'](B),this['sub'](F);},j['reflect']=function(B){return this['sub'](F['copy'](B)['multiplyScalar'](0x2*this['dot'](B)));},j['angleTo']=function(B){var z=Math['sqrt'](this['lengthSq']()*B['lengthSq']());if(0x0===z)return Math['PI']/0x2;var q=this['dot'](B)/z;return Math['acos'](J['qE'](q,-0x1,0x1));},j['distanceTo']=function(B){return Math['sqrt'](this['distanceToSquared'](B));},j['distanceToSquared']=function(B){var z=this['x']-B['x'],q=this['y']-B['y'],b=this['z']-B['z'];return z*z+q*q+b*b;},j['manhattanDistanceTo']=function(B){return Math['abs'](this['x']-B['x'])+Math['abs'](this['y']-B['y'])+Math['abs'](this['z']-B['z']);},j['setFromSpherical']=function(B){return this['setFromSphericalCoords'](B['radius'],B['phi'],B['theta']);},j['setFromSphericalCoords']=function(B,z,q){var b=Math['sin'](z)*B;return this['x']=b*Math['sin'](q),this['y']=Math['cos'](z)*B,this['z']=b*Math['cos'](q),this;},j['setFromCylindrical']=function(B){return this['setFromCylindricalCoords'](B['radius'],B['theta'],B['y']);},j['setFromCylindricalCoords']=function(B,z,q){return this['x']=B*Math['sin'](z),this['y']=q,this['z']=B*Math['cos'](z),this;},j['setFromMatrixPosition']=function(B){var z=B['elements'];return this['x']=z[0xc],this['y']=z[0xd],this['z']=z[0xe],this;},j['setFromMatrixScale']=function(B){var z=this['setFromMatrixColumn'](B,0x0)['length'](),q=this['setFromMatrixColumn'](B,0x1)['length'](),b=this['setFromMatrixColumn'](B,0x2)['length']();return this['x']=z,this['y']=q,this['z']=b,this;},j['setFromMatrixColumn']=function(B,z){return this['fromArray'](B['elements'],0x4*z);},j['setFromMatrix3Column']=function(B,z){return this['fromArray'](B['elements'],0x3*z);},j['setFromEuler']=function(B){return this['x']=B['_x'],this['y']=B['_y'],this['z']=B['_z'],this;},j['setFromColor']=function(B){return this['x']=B['r'],this['y']=B['g'],this['z']=B['b'],this;},j['equals']=function(B){return B['x']===this['x']&&B['y']===this['y']&&B['z']===this['z'];},j['fromArray']=function(B,z){return void 0x0===z&&(z=0x0),this['x']=B[z],this['y']=B[z+0x1],this['z']=B[z+0x2],this;},j['toArray']=function(B,z){return void 0x0===B&&(B=[]),void 0x0===z&&(z=0x0),B[z]=this['x'],B[z+0x1]=this['y'],B[z+0x2]=this['z'],B;},j['fromBufferAttribute']=function(B,z){return this['x']=B['getX'](z),this['y']=B['getY'](z),this['z']=B['getZ'](z),this;},j['random']=function(){return this['x']=Math['random'](),this['y']=Math['random'](),this['z']=Math['random'](),this;},j['randomDirection']=function(){var B=0x2*(Math['random']()-0.5),z=Math['random']()*Math['PI']*0x2,q=Math['sqrt'](0x1-Math['pow'](B,0x2));return this['x']=q*Math['cos'](z),this['y']=q*Math['sin'](z),this['z']=B,this;},j[Symbol['iterator']]=N()['mark'](function B(){return N()['wrap'](function(z){for(;;)switch(z['prev']=z['next']){case 0x0:return z['next']=0x2,this['x'];case 0x2:return z['next']=0x4,this['y'];case 0x4:return z['next']=0x6,this['z'];case 0x6:case'end':return z['stop']();}},B,this);}),R;}()),F=new v(),G=new A['P']();},0xb3ef:(m,H,O)=>{O['d'](H,{'I':()=>A});var u=O(0x14124),N=O(0xd5e4),J=O['n'](N),A=(function(){function v(G,c,R,j){void 0x0===G&&(G=0x0),void 0x0===c&&(c=0x0),void 0x0===R&&(R=0x0),void 0x0===j&&(j=0x1),v['prototype']['isVector4']=!0x0,this['x']=G,this['y']=c,this['z']=R,this['w']=j;}var F=v['prototype'];return F['set']=function(G,c,R,j){return this['x']=G,this['y']=c,this['z']=R,this['w']=j,this;},F['setScalar']=function(G){return this['x']=G,this['y']=G,this['z']=G,this['w']=G,this;},F['setX']=function(G){return this['x']=G,this;},F['setY']=function(G){return this['y']=G,this;},F['setZ']=function(G){return this['z']=G,this;},F['setW']=function(G){return this['w']=G,this;},F['setComponent']=function(G,c){switch(G){case 0x0:this['x']=c;break;case 0x1:this['y']=c;break;case 0x2:this['z']=c;break;case 0x3:this['w']=c;break;default:throw new Error('index\x20is\x20out\x20of\x20range:\x20'+G);}return this;},F['getComponent']=function(G){switch(G){case 0x0:return this['x'];case 0x1:return this['y'];case 0x2:return this['z'];case 0x3:return this['w'];default:throw new Error('index\x20is\x20out\x20of\x20range:\x20'+G);}},F['clone']=function(){return new this['constructor'](this['x'],this['y'],this['z'],this['w']);},F['copy']=function(G){return this['x']=G['x'],this['y']=G['y'],this['z']=G['z'],this['w']=void 0x0!==G['w']?G['w']:0x1,this;},F['add']=function(G){return this['x']+=G['x'],this['y']+=G['y'],this['z']+=G['z'],this['w']+=G['w'],this;},F['addScalar']=function(G){return this['x']+=G,this['y']+=G,this['z']+=G,this['w']+=G,this;},F['addVectors']=function(G,c){return this['x']=G['x']+c['x'],this['y']=G['y']+c['y'],this['z']=G['z']+c['z'],this['w']=G['w']+c['w'],this;},F['addScaledVector']=function(G,c){return this['x']+=G['x']*c,this['y']+=G['y']*c,this['z']+=G['z']*c,this['w']+=G['w']*c,this;},F['sub']=function(G){return this['x']-=G['x'],this['y']-=G['y'],this['z']-=G['z'],this['w']-=G['w'],this;},F['subScalar']=function(G){return this['x']-=G,this['y']-=G,this['z']-=G,this['w']-=G,this;},F['subVectors']=function(G,c){return this['x']=G['x']-c['x'],this['y']=G['y']-c['y'],this['z']=G['z']-c['z'],this['w']=G['w']-c['w'],this;},F['multiply']=function(G){return this['x']*=G['x'],this['y']*=G['y'],this['z']*=G['z'],this['w']*=G['w'],this;},F['multiplyScalar']=function(G){return this['x']*=G,this['y']*=G,this['z']*=G,this['w']*=G,this;},F['applyMatrix4']=function(G){var c=this['x'],R=this['y'],j=this['z'],B=this['w'],z=G['elements'];return this['x']=z[0x0]*c+z[0x4]*R+z[0x8]*j+z[0xc]*B,this['y']=z[0x1]*c+z[0x5]*R+z[0x9]*j+z[0xd]*B,this['z']=z[0x2]*c+z[0x6]*R+z[0xa]*j+z[0xe]*B,this['w']=z[0x3]*c+z[0x7]*R+z[0xb]*j+z[0xf]*B,this;},F['divideScalar']=function(G){return this['multiplyScalar'](0x1/G);},F['setAxisAngleFromQuaternion']=function(G){this['w']=0x2*Math['acos'](G['w']);var c=Math['sqrt'](0x1-G['w']*G['w']);return c<0.0001?(this['x']=0x1,this['y']=0x0,this['z']=0x0):(this['x']=G['x']/c,this['y']=G['y']/c,this['z']=G['z']/c),this;},F['setAxisAngleFromRotationMatrix']=function(G){var R,j,B,z,q=0.01,L=0.1,X=G['elements'],C=X[0x0],T=X[0x4],E=X[0x8],D=X[0x1],K=X[0x5],w=X[0x9],Q=X[0x2],U=X[0x6],Y=X[0xa];if(Math['abs'](T-D)<q&&Math['abs'](E-Q)<q&&Math['abs'](w-U)<q){if(Math['abs'](T+D)<L&&Math['abs'](E+Q)<L&&Math['abs'](w+U)<L&&Math['abs'](C+K+Y-0x3)<L)return this['set'](0x1,0x0,0x0,0x0),this;R=Math['PI'];var W=(C+0x1)/0x2,k=(K+0x1)/0x2,P=(Y+0x1)/0x2,I=(T+D)/0x4,Z=(E+Q)/0x4,V=(w+U)/0x4;return W>k&&W>P?W<q?(j=0x0,B=0.707106781,z=0.707106781):(B=I/(j=Math['sqrt'](W)),z=Z/j):k>P?k<q?(j=0.707106781,B=0x0,z=0.707106781):(j=I/(B=Math['sqrt'](k)),z=V/B):P<q?(j=0.707106781,B=0.707106781,z=0x0):(j=Z/(z=Math['sqrt'](P)),B=V/z),this['set'](j,B,z,R),this;}var m0=Math['sqrt']((U-w)*(U-w)+(E-Q)*(E-Q)+(D-T)*(D-T));return Math['abs'](m0)<0.001&&(m0=0x1),this['x']=(U-w)/m0,this['y']=(E-Q)/m0,this['z']=(D-T)/m0,this['w']=Math['acos']((C+K+Y-0x1)/0x2),this;},F['min']=function(G){return this['x']=Math['min'](this['x'],G['x']),this['y']=Math['min'](this['y'],G['y']),this['z']=Math['min'](this['z'],G['z']),this['w']=Math['min'](this['w'],G['w']),this;},F['max']=function(G){return this['x']=Math['max'](this['x'],G['x']),this['y']=Math['max'](this['y'],G['y']),this['z']=Math['max'](this['z'],G['z']),this['w']=Math['max'](this['w'],G['w']),this;},F['clamp']=function(G,c){return this['x']=Math['max'](G['x'],Math['min'](c['x'],this['x'])),this['y']=Math['max'](G['y'],Math['min'](c['y'],this['y'])),this['z']=Math['max'](G['z'],Math['min'](c['z'],this['z'])),this['w']=Math['max'](G['w'],Math['min'](c['w'],this['w'])),this;},F['clampScalar']=function(G,c){return this['x']=Math['max'](G,Math['min'](c,this['x'])),this['y']=Math['max'](G,Math['min'](c,this['y'])),this['z']=Math['max'](G,Math['min'](c,this['z'])),this['w']=Math['max'](G,Math['min'](c,this['w'])),this;},F['clampLength']=function(G,c){var R=this['length']();return this['divideScalar'](R||0x1)['multiplyScalar'](Math['max'](G,Math['min'](c,R)));},F['floor']=function(){return this['x']=Math['floor'](this['x']),this['y']=Math['floor'](this['y']),this['z']=Math['floor'](this['z']),this['w']=Math['floor'](this['w']),this;},F['ceil']=function(){return this['x']=Math['ceil'](this['x']),this['y']=Math['ceil'](this['y']),this['z']=Math['ceil'](this['z']),this['w']=Math['ceil'](this['w']),this;},F['round']=function(){return this['x']=Math['round'](this['x']),this['y']=Math['round'](this['y']),this['z']=Math['round'](this['z']),this['w']=Math['round'](this['w']),this;},F['roundToZero']=function(){return this['x']=Math['trunc'](this['x']),this['y']=Math['trunc'](this['y']),this['z']=Math['trunc'](this['z']),this['w']=Math['trunc'](this['w']),this;},F['negate']=function(){return this['x']=-this['x'],this['y']=-this['y'],this['z']=-this['z'],this['w']=-this['w'],this;},F['dot']=function(G){return this['x']*G['x']+this['y']*G['y']+this['z']*G['z']+this['w']*G['w'];},F['lengthSq']=function(){return this['x']*this['x']+this['y']*this['y']+this['z']*this['z']+this['w']*this['w'];},F['length']=function(){return Math['sqrt'](this['x']*this['x']+this['y']*this['y']+this['z']*this['z']+this['w']*this['w']);},F['manhattanLength']=function(){return Math['abs'](this['x'])+Math['abs'](this['y'])+Math['abs'](this['z'])+Math['abs'](this['w']);},F['normalize']=function(){return this['divideScalar'](this['length']()||0x1);},F['setLength']=function(G){return this['normalize']()['multiplyScalar'](G);},F['lerp']=function(G,c){return this['x']+=(G['x']-this['x'])*c,this['y']+=(G['y']-this['y'])*c,this['z']+=(G['z']-this['z'])*c,this['w']+=(G['w']-this['w'])*c,this;},F['lerpVectors']=function(G,c,R){return this['x']=G['x']+(c['x']-G['x'])*R,this['y']=G['y']+(c['y']-G['y'])*R,this['z']=G['z']+(c['z']-G['z'])*R,this['w']=G['w']+(c['w']-G['w'])*R,this;},F['equals']=function(G){return G['x']===this['x']&&G['y']===this['y']&&G['z']===this['z']&&G['w']===this['w'];},F['fromArray']=function(G,c){return void 0x0===c&&(c=0x0),this['x']=G[c],this['y']=G[c+0x1],this['z']=G[c+0x2],this['w']=G[c+0x3],this;},F['toArray']=function(G,c){return void 0x0===G&&(G=[]),void 0x0===c&&(c=0x0),G[c]=this['x'],G[c+0x1]=this['y'],G[c+0x2]=this['z'],G[c+0x3]=this['w'],G;},F['fromBufferAttribute']=function(G,c){return this['x']=G['getX'](c),this['y']=G['getY'](c),this['z']=G['getZ'](c),this['w']=G['getW'](c),this;},F['random']=function(){return this['x']=Math['random'](),this['y']=Math['random'](),this['z']=Math['random'](),this['w']=Math['random'](),this;},F[Symbol['iterator']]=J()['mark'](function G(){return J()['wrap'](function(c){for(;;)switch(c['prev']=c['next']){case 0x0:return c['next']=0x2,this['x'];case 0x2:return c['next']=0x4,this['y'];case 0x4:return c['next']=0x6,this['z'];case 0x6:return c['next']=0x8,this['w'];case 0x8:case'end':return c['stop']();}},G,this);}),(0x0,u['A'])(v,[{'key':'width','get':function(){return this['z'];},'set':function(c){this['z']=c;}},{'key':'height','get':function(){return this['w'];},'set':function(c){this['w']=c;}}]);}());},0x3696:(m,H,O)=>{O['d'](H,{'P':()=>J});var u=O(0x12e4b),N=O(0x172d2),J=function(A){function v(G,c,R,j){var B;return(B=A['call'](this,G,c,R,j)||this)['_weightPrev']=-0x0,B['_offsetPrev']=-0x0,B['_weightNext']=-0x0,B['_offsetNext']=-0x0,B['DefaultSettings_']={'endingStart':N['rQf'],'endingEnd':N['rQf']},B;}(0x0,u['A'])(v,A);var F=v['prototype'];return F['intervalChanged_']=function(G,R,j){var B=this['parameterPositions'],z=G-0x2,q=G+0x1,b=B[z],L=B[q];if(void 0x0===b)switch(this['getSettings_']()['endingStart']){case N['h2z']:z=G,b=0x2*R-j;break;case N['dhZ']:b=R+B[z=B['length']-0x2]-B[z+0x1];break;default:z=G,b=j;}if(void 0x0===L)switch(this['getSettings_']()['endingEnd']){case N['h2z']:q=G,L=0x2*j-R;break;case N['dhZ']:q=0x1,L=j+B[0x1]-B[0x0];break;default:q=G-0x1,L=R;}var y=0.5*(j-R),h=this['valueSize'];this['_weightPrev']=y/(R-b),this['_weightNext']=y/(L-j),this['_offsetPrev']=z*h,this['_offsetNext']=q*h;},F['interpolate_']=function(G,R,j,B){for(var z=this['resultBuffer'],q=this['sampleValues'],b=this['valueSize'],L=G*b,X=L-b,C=this['_offsetPrev'],T=this['_offsetNext'],E=this['_weightPrev'],D=this['_weightNext'],K=(j-R)/(B-R),w=K*K,Q=w*K,U=-E*Q+0x2*E*w-E*K,M=(0x1+E)*Q+(-1.5-0x2*E)*w+(-0.5+E)*K+0x1,Y=(-0x1-D)*Q+(1.5+D)*w+0.5*K,W=D*Q-D*w,k=0x0;k!==b;++k)z[k]=U*q[C+k]+M*q[X+k]+Y*q[L+k]+W*q[T+k];return z;},v;}(O(0x28f4)['l']);},0x17b5d:(m,H,O)=>{O['d'](H,{'e':()=>N});var u=O(0x12e4b),N=function(J){function A(v,F,a,G){return J['call'](this,v,F,a,G)||this;}return(0x0,u['A'])(A,J),A['prototype']['interpolate_']=function(v,F,G,R){for(var j=this['resultBuffer'],B=this['sampleValues'],z=this['valueSize'],q=v*z,b=q-z,L=(G-F)/(R-F),y=0x1-L,X=0x0;X!==z;++X)j[X]=B[b+X]*y+B[q+X]*L;return j;},A;}(O(0x28f4)['l']);},0x131b5:(m,H,O)=>{O['d'](H,{'G':()=>A});var u=O(0x12e4b),N=O(0x28f4),J=O(0x13294),A=function(v){function F(G,c,R,j){return v['call'](this,G,c,R,j)||this;}return(0x0,u['A'])(F,v),F['prototype']['interpolate_']=function(G,R,j,B){for(var z=this['resultBuffer'],q=this['sampleValues'],b=this['valueSize'],L=(j-R)/(B-R),y=G*b,h=y+b;y!==h;y+=0x4)J['P']['slerpFlat'](z,0x0,q,y-b,q,y,L);return z;},F;}(N['l']);},0xad70:(m,H,O)=>{O(0x17dfd),O(0x16835),O(0x2277),O(0x172d2),O(0x11ded),O(0x1152b),O(0x7002),O(0x79b5),O(0x6a24),O(0x1008e);},0x658b:(m,H,O)=>{O['d'](H,{'Y':()=>N});var u=O(0x12e4b),N=function(J){function A(){var v;return(v=J['call'](this)||this)['isGroup']=!0x0,v['type']='Group',v;}return(0x0,u['A'])(A,J),A;}(O(0x16f53)['B']);},0x138bf:(m,H,O)=>{O(0x1008e),O(0x16f53);},0x1152b:(H,O,N)=>{N['d'](O,{'e':()=>me});var J=N(0x12e4b),F=N(0x1008e),G=N(0x1264d),j=N(0x79b5),B=N(0xbf9a),z=N(0x11ded),q=N(0x16f53),X=N(0x37c8),K=N(0x172d2),Q=N(0x14baa),U=N(0x16835),Y=new z['k'](),W=new B['R'](),k=new j['i'](),I=new F['P'](),Z=new F['P'](),V=new F['P'](),m0=new F['P'](),m1=new F['P'](),m2=new F['P'](),m3=new G['I'](),m4=new G['I'](),m5=new G['I'](),m6=new F['P'](),m7=new F['P'](),m8=new F['P'](),m9=new F['P'](),mm=new F['P'](),me=function(mO){function mu(mJ,mA){var mv;return void 0x0===mJ&&(mJ=new U['L']()),void 0x0===mA&&(mA=new Q['V']()),(mv=mO['call'](this)||this)['isMesh']=!0x0,mv['type']='Mesh',mv['geometry']=mJ,mv['material']=mA,mv['updateMorphTargets'](),mv;}(0x0,J['A'])(mu,mO);var mN=mu['prototype'];return mN['copy']=function(mJ,mA){return mO['prototype']['copy']['call'](this,mJ,mA),void 0x0!==mJ['morphTargetInfluences']&&(this['morphTargetInfluences']=mJ['morphTargetInfluences']['slice']()),void 0x0!==mJ['morphTargetDictionary']&&(this['morphTargetDictionary']=Object['assign']({},mJ['morphTargetDictionary'])),this['material']=Array['isArray'](mJ['material'])?mJ['material']['slice']():mJ['material'],this['geometry']=mJ['geometry'],this;},mN['updateMorphTargets']=function(){var mJ=this['geometry']['morphAttributes'],mA=Object['keys'](mJ);if(mA['length']>0x0){var mv=mJ[mA[0x0]];if(void 0x0!==mv){this['morphTargetInfluences']=[],this['morphTargetDictionary']={};for(var mF=0x0,ma=mv['length'];mF<ma;mF++){var mG=mv[mF]['name']||String(mF);this['morphTargetInfluences']['push'](0x0),this['morphTargetDictionary'][mG]=mF;}}}},mN['getVertexPosition']=function(mJ,mA){var mv=this['geometry'],mF=mv['attributes']['position'],ma=mv['morphAttributes']['position'],mG=mv['morphTargetsRelative'];mA['fromBufferAttribute'](mF,mJ);var mc=this['morphTargetInfluences'];if(ma&&mc){m2['set'](0x0,0x0,0x0);for(var mR=0x0,mj=ma['length'];mR<mj;mR++){var mB=mc[mR],mz=ma[mR];0x0!==mB&&(m1['fromBufferAttribute'](mz,mJ),mG?m2['addScaledVector'](m1,mB):m2['addScaledVector'](m1['sub'](mA),mB));}mA['add'](m2);}return mA;},mN['raycast']=function(mJ,mA){var mv=this['geometry'],mF=this['material'],ma=this['matrixWorld'];if(void 0x0!==mF){if(null===mv['boundingSphere']&&mv['computeBoundingSphere'](),k['copy'](mv['boundingSphere']),k['applyMatrix4'](ma),W['copy'](mJ['ray'])['recast'](mJ['near']),!0x1===k['containsPoint'](W['origin'])){if(null===W['intersectSphere'](k,I))return;if(W['origin']['distanceToSquared'](I)>Math['pow'](mJ['far']-mJ['near'],0x2))return;}Y['copy'](ma)['invert'](),W['copy'](mJ['ray'])['applyMatrix4'](Y),null!==mv['boundingBox']&&!0x1===W['intersectsBox'](mv['boundingBox'])||this['_computeIntersections'](mJ,mA,W);}},mN['_computeIntersections']=function(mJ,mA,mv){var mF,ma=this['geometry'],mG=this['material'],mc=ma['index'],mR=ma['attributes']['position'],mj=ma['attributes']['uv'],mB=ma['attributes']['uv1'],mz=ma['attributes']['normal'],mq=ma['groups'],mb=ma['drawRange'];if(null!==mc){if(Array['isArray'](mG)){for(var mL=0x0,my=mq['length'];mL<my;mL++)for(var mh=mq[mL],mX=mG[mh['materialIndex']],mC=Math['max'](mh['start'],mb['start']),mT=Math['min'](mc['count'],Math['min'](mh['start']+mh['count'],mb['start']+mb['count']));mC<mT;mC+=0x3){(mF=mH(this,mX,mJ,mv,mj,mB,mz,mc['getX'](mC),mc['getX'](mC+0x1),mc['getX'](mC+0x2)))&&(mF['faceIndex']=Math['floor'](mC/0x3),mF['face']['materialIndex']=mh['materialIndex'],mA['push'](mF));}}else for(var mi=Math['max'](0x0,mb['start']),mo=Math['min'](mc['count'],mb['start']+mb['count']);mi<mo;mi+=0x3){(mF=mH(this,mG,mJ,mv,mj,mB,mz,mc['getX'](mi),mc['getX'](mi+0x1),mc['getX'](mi+0x2)))&&(mF['faceIndex']=Math['floor'](mi/0x3),mA['push'](mF));}}else{if(void 0x0!==mR){if(Array['isArray'](mG)){for(var mE=0x0,md=mq['length'];mE<md;mE++)for(var mD=mq[mE],mK=mG[mD['materialIndex']],mw=Math['max'](mD['start'],mb['start']),mp=Math['min'](mR['count'],Math['min'](mD['start']+mD['count'],mb['start']+mb['count']));mw<mp;mw+=0x3){(mF=mH(this,mK,mJ,mv,mj,mB,mz,mw,mw+0x1,mw+0x2))&&(mF['faceIndex']=Math['floor'](mw/0x3),mF['face']['materialIndex']=mD['materialIndex'],mA['push'](mF));}}else for(var mQ=Math['max'](0x0,mb['start']),mf=Math['min'](mR['count'],mb['start']+mb['count']);mQ<mf;mQ+=0x3){(mF=mH(this,mG,mJ,mv,mj,mB,mz,mQ,mQ+0x1,mQ+0x2))&&(mF['faceIndex']=Math['floor'](mQ/0x3),mA['push'](mF));}}}},mu;}(q['B']);function mH(mO,mu,mN,mJ,mA,mv,mF,ma,mG,mc){mO['getVertexPosition'](ma,Z),mO['getVertexPosition'](mG,V),mO['getVertexPosition'](mc,m0);var mR=function(mB,mz,mq,mb,mL,my,mh,mX){if(null===(mz['side']===K['hsX']?mb['intersectTriangle'](mh,my,mL,!0x0,mX):mb['intersectTriangle'](mL,my,mh,mz['side']===K['hB5'],mX)))return null;mm['copy'](mX),mm['applyMatrix4'](mB['matrixWorld']);var mC=mq['ray']['origin']['distanceTo'](mm);return mC<mq['near']||mC>mq['far']?null:{'distance':mC,'point':mm['clone'](),'object':mB};}(mO,mu,mN,mJ,Z,V,m0,m9);if(mR){mA&&(m3['fromBufferAttribute'](mA,ma),m4['fromBufferAttribute'](mA,mG),m5['fromBufferAttribute'](mA,mc),mR['uv']=X['l']['getInterpolation'](m9,Z,V,m0,m3,m4,m5,new G['I']())),mv&&(m3['fromBufferAttribute'](mv,ma),m4['fromBufferAttribute'](mv,mG),m5['fromBufferAttribute'](mv,mc),mR['uv1']=X['l']['getInterpolation'](m9,Z,V,m0,m3,m4,m5,new G['I']()),mR['uv2']=mR['uv1']),mF&&(m6['fromBufferAttribute'](mF,ma),m7['fromBufferAttribute'](mF,mG),m8['fromBufferAttribute'](mF,mc),mR['normal']=X['l']['getInterpolation'](m9,Z,V,m0,m6,m7,m8,new F['P']()),mR['normal']['dot'](mJ['direction'])>0x0&&mR['normal']['multiplyScalar'](-0x1));var mj={'a':ma,'b':mG,'c':mc,'normal':new F['P'](),'materialIndex':0x0};X['l']['getNormal'](Z,V,m0,mj['normal']),mR['face']=mj;}return mR;}},0x5d85:(m,H,O)=>{var u=O(0x12e4b);(function(N){function J(){return N['apply'](this,arguments)||this;}return(0x0,u['A'])(J,N),J;}(O(0x178c5)['J'])['prototype']['isWebGL1Renderer']=!0x0);},0x50af:(m,H,O)=>{O(0xc42c),O(0x10762);},0x1653d:(m,H,O)=>{O(0xc42c),O(0xc71e);},0x101b9:(m,H,O)=>{O['d'](H,{'o':()=>q});var N=O(0x12e4b),J=O(0x172d2),A=O(0x1152b),v=O(0x131a1),F=O(0x7026),G=O(0x41ef),R=O(0xc42c),j=O(0x306c),B=O(0xb12c),z=O(0x1078a),q=function(b){function L(X,C){var T;void 0x0===X&&(X=0x1),void 0x0===C&&(C={}),(T=b['call'](this,X,X,C)||this)['isWebGLCubeRenderTarget']=!0x0;var E={'width':X,'height':X,'depth':0x1},D=[E,E,E,E,E,E];return void 0x0!==C['encoding']&&((0x0,z['mc'])('THREE.WebGLCubeRenderTarget:\x20option.encoding\x20has\x20been\x20replaced\x20by\x20option.colorSpace.'),C['colorSpace']=C['encoding']===J['S2Q']?J['er$']:J['jf0']),T['texture']=new B['b'](D,C['mapping'],C['wrapS'],C['wrapT'],C['magFilter'],C['minFilter'],C['format'],C['type'],C['anisotropy'],C['colorSpace']),T['texture']['isRenderTargetTexture']=!0x0,T['texture']['generateMipmaps']=void 0x0!==C['generateMipmaps']&&C['generateMipmaps'],T['texture']['minFilter']=void 0x0!==C['minFilter']?C['minFilter']:J['k6q'],T;}(0x0,N['A'])(L,b);var y=L['prototype'];return y['fromEquirectangularTexture']=function(X,C){this['texture']['type']=C['type'],this['texture']['colorSpace']=C['colorSpace'],this['texture']['generateMipmaps']=C['generateMipmaps'],this['texture']['minFilter']=C['minFilter'],this['texture']['magFilter']=C['magFilter'];var T={'tEquirect':{'value':null}},E='\x0a\x0a\x09\x09\x09\x09varying\x20vec3\x20vWorldDirection;\x0a\x0a\x09\x09\x09\x09vec3\x20transformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x0a\x09\x09\x09\x09\x09return\x20normalize(\x20(\x20matrix\x20*\x20vec4(\x20dir,\x200.0\x20)\x20).xyz\x20);\x0a\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09\x09\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x0a\x09\x09\x09\x09\x09#include\x20<begin_vertex>\x0a\x09\x09\x09\x09\x09#include\x20<project_vertex>\x0a\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09',D='\x0a\x0a\x09\x09\x09\x09uniform\x20sampler2D\x20tEquirect;\x0a\x0a\x09\x09\x09\x09varying\x20vec3\x20vWorldDirection;\x0a\x0a\x09\x09\x09\x09#include\x20<common>\x0a\x0a\x09\x09\x09\x09void\x20main()\x20{\x0a\x0a\x09\x09\x09\x09\x09vec3\x20direction\x20=\x20normalize(\x20vWorldDirection\x20);\x0a\x0a\x09\x09\x09\x09\x09vec2\x20sampleUV\x20=\x20equirectUv(\x20direction\x20);\x0a\x0a\x09\x09\x09\x09\x09gl_FragColor\x20=\x20texture2D(\x20tEquirect,\x20sampleUV\x20);\x0a\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09',K=new v['i'](0x5,0x5,0x5),w=new F['B']({'name':'CubemapFromEquirect','uniforms':(0x0,G['lx'])(T),'vertexShader':E,'fragmentShader':D,'side':J['hsX'],'blending':J['XIg']});w['uniforms']['tEquirect']['value']=C;var Q=new A['e'](K,w),U=C['minFilter'];return C['minFilter']===J['$_I']&&(C['minFilter']=J['k6q']),new j['F'](0x1,0xa,this)['update'](X,Q),C['minFilter']=U,Q['geometry']['dispose'](),Q['material']['dispose'](),this;},y['clear']=function(X,C,T,E){for(var D=X['getRenderTarget'](),K=0x0;K<0x6;K++)X['setRenderTarget'](this,K),X['clear'](C,T,E);X['setRenderTarget'](D);},L;}(R['n']);},0xbd7f:(m,H,O)=>{O(0xc42c);},0xc42c:(m,H,O)=>{O['d'](H,{'n':()=>N});var u=O(0x12e4b),N=function(J){function A(v,F,a){var G;return void 0x0===v&&(v=0x1),void 0x0===F&&(F=0x1),void 0x0===a&&(a={}),(G=J['call'](this,v,F,a)||this)['isWebGLRenderTarget']=!0x0,G;}return(0x0,u['A'])(A,J),A;}(O(0xfbe)['O']);},0xfdaa:(m,H,O)=>{O['d'](H,{'v':()=>u});var u={'alphahash_fragment':'\x0a#ifdef\x20USE_ALPHAHASH\x0a\x0a\x09if\x20(\x20diffuseColor.a\x20<\x20getAlphaHashThreshold(\x20vPosition\x20)\x20)\x20discard;\x0a\x0a#endif\x0a','alphahash_pars_fragment':'\x0a#ifdef\x20USE_ALPHAHASH\x0a\x0a\x09/**\x0a\x09\x20*\x20See:\x20https://casual-effects.com/research/Wyman2017Hashed/index.html\x0a\x09\x20*/\x0a\x0a\x09const\x20float\x20ALPHA_HASH_SCALE\x20=\x200.05;\x20//\x20Derived\x20from\x20trials\x20only,\x20and\x20may\x20be\x20changed.\x0a\x0a\x09float\x20hash2D(\x20vec2\x20value\x20)\x20{\x0a\x0a\x09\x09return\x20fract(\x201.0e4\x20*\x20sin(\x2017.0\x20*\x20value.x\x20+\x200.1\x20*\x20value.y\x20)\x20*\x20(\x200.1\x20+\x20abs(\x20sin(\x2013.0\x20*\x20value.y\x20+\x20value.x\x20)\x20)\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20hash3D(\x20vec3\x20value\x20)\x20{\x0a\x0a\x09\x09return\x20hash2D(\x20vec2(\x20hash2D(\x20value.xy\x20),\x20value.z\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20getAlphaHashThreshold(\x20vec3\x20position\x20)\x20{\x0a\x0a\x09\x09//\x20Find\x20the\x20discretized\x20derivatives\x20of\x20our\x20coordinates\x0a\x09\x09float\x20maxDeriv\x20=\x20max(\x0a\x09\x09\x09length(\x20dFdx(\x20position.xyz\x20)\x20),\x0a\x09\x09\x09length(\x20dFdy(\x20position.xyz\x20)\x20)\x0a\x09\x09);\x0a\x09\x09float\x20pixScale\x20=\x201.0\x20/\x20(\x20ALPHA_HASH_SCALE\x20*\x20maxDeriv\x20);\x0a\x0a\x09\x09//\x20Find\x20two\x20nearest\x20log-discretized\x20noise\x20scales\x0a\x09\x09vec2\x20pixScales\x20=\x20vec2(\x0a\x09\x09\x09exp2(\x20floor(\x20log2(\x20pixScale\x20)\x20)\x20),\x0a\x09\x09\x09exp2(\x20ceil(\x20log2(\x20pixScale\x20)\x20)\x20)\x0a\x09\x09);\x0a\x0a\x09\x09//\x20Compute\x20alpha\x20thresholds\x20at\x20our\x20two\x20noise\x20scales\x0a\x09\x09vec2\x20alpha\x20=\x20vec2(\x0a\x09\x09\x09hash3D(\x20floor(\x20pixScales.x\x20*\x20position.xyz\x20)\x20),\x0a\x09\x09\x09hash3D(\x20floor(\x20pixScales.y\x20*\x20position.xyz\x20)\x20)\x0a\x09\x09);\x0a\x0a\x09\x09//\x20Factor\x20to\x20interpolate\x20lerp\x20with\x0a\x09\x09float\x20lerpFactor\x20=\x20fract(\x20log2(\x20pixScale\x20)\x20);\x0a\x0a\x09\x09//\x20Interpolate\x20alpha\x20threshold\x20from\x20noise\x20at\x20two\x20scales\x0a\x09\x09float\x20x\x20=\x20(\x201.0\x20-\x20lerpFactor\x20)\x20*\x20alpha.x\x20+\x20lerpFactor\x20*\x20alpha.y;\x0a\x0a\x09\x09//\x20Pass\x20into\x20CDF\x20to\x20compute\x20uniformly\x20distrib\x20threshold\x0a\x09\x09float\x20a\x20=\x20min(\x20lerpFactor,\x201.0\x20-\x20lerpFactor\x20);\x0a\x09\x09vec3\x20cases\x20=\x20vec3(\x0a\x09\x09\x09x\x20*\x20x\x20/\x20(\x202.0\x20*\x20a\x20*\x20(\x201.0\x20-\x20a\x20)\x20),\x0a\x09\x09\x09(\x20x\x20-\x200.5\x20*\x20a\x20)\x20/\x20(\x201.0\x20-\x20a\x20),\x0a\x09\x09\x091.0\x20-\x20(\x20(\x201.0\x20-\x20x\x20)\x20*\x20(\x201.0\x20-\x20x\x20)\x20/\x20(\x202.0\x20*\x20a\x20*\x20(\x201.0\x20-\x20a\x20)\x20)\x20)\x0a\x09\x09);\x0a\x0a\x09\x09//\x20Find\x20our\x20final,\x20uniformly\x20distributed\x20alpha\x20threshold\x20(ατ)\x0a\x09\x09float\x20threshold\x20=\x20(\x20x\x20<\x20(\x201.0\x20-\x20a\x20)\x20)\x0a\x09\x09\x09?\x20(\x20(\x20x\x20<\x20a\x20)\x20?\x20cases.x\x20:\x20cases.y\x20)\x0a\x09\x09\x09:\x20cases.z;\x0a\x0a\x09\x09//\x20Avoids\x20ατ\x20==\x200.\x20Could\x20also\x20do\x20ατ\x20=1-ατ\x0a\x09\x09return\x20clamp(\x20threshold\x20,\x201.0e-6,\x201.0\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a','alphamap_fragment':'\x0a#ifdef\x20USE_ALPHAMAP\x0a\x0a\x09diffuseColor.a\x20*=\x20texture2D(\x20alphaMap,\x20vAlphaMapUv\x20).g;\x0a\x0a#endif\x0a','alphamap_pars_fragment':'\x0a#ifdef\x20USE_ALPHAMAP\x0a\x0a\x09uniform\x20sampler2D\x20alphaMap;\x0a\x0a#endif\x0a','alphatest_fragment':'\x0a#ifdef\x20USE_ALPHATEST\x0a\x0a\x09if\x20(\x20diffuseColor.a\x20<\x20alphaTest\x20)\x20discard;\x0a\x0a#endif\x0a','alphatest_pars_fragment':'\x0a#ifdef\x20USE_ALPHATEST\x0a\x09uniform\x20float\x20alphaTest;\x0a#endif\x0a','aomap_fragment':'\x0a#ifdef\x20USE_AOMAP\x0a\x0a\x09//\x20reads\x20channel\x20R,\x20compatible\x20with\x20a\x20combined\x20OcclusionRoughnessMetallic\x20(RGB)\x20texture\x0a\x09float\x20ambientOcclusion\x20=\x20(\x20texture2D(\x20aoMap,\x20vAoMapUv\x20).r\x20-\x201.0\x20)\x20*\x20aoMapIntensity\x20+\x201.0;\x0a\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20ambientOcclusion;\x0a\x0a\x09#if\x20defined(\x20USE_CLEARCOAT\x20)\x20\x0a\x09\x09clearcoatSpecularIndirect\x20*=\x20ambientOcclusion;\x0a\x09#endif\x0a\x0a\x09#if\x20defined(\x20USE_SHEEN\x20)\x20\x0a\x09\x09sheenSpecularIndirect\x20*=\x20ambientOcclusion;\x0a\x09#endif\x0a\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20STANDARD\x20)\x0a\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometryNormal,\x20geometryViewDir\x20)\x20);\x0a\x0a\x09\x09reflectedLight.indirectSpecular\x20*=\x20computeSpecularOcclusion(\x20dotNV,\x20ambientOcclusion,\x20material.roughness\x20);\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','aomap_pars_fragment':'\x0a#ifdef\x20USE_AOMAP\x0a\x0a\x09uniform\x20sampler2D\x20aoMap;\x0a\x09uniform\x20float\x20aoMapIntensity;\x0a\x0a#endif\x0a','batching_pars_vertex':'\x0a#ifdef\x20USE_BATCHING\x0a\x09attribute\x20float\x20batchId;\x0a\x09uniform\x20highp\x20sampler2D\x20batchingTexture;\x0a\x09mat4\x20getBatchingMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x0a\x09\x09int\x20size\x20=\x20textureSize(\x20batchingTexture,\x200\x20).x;\x0a\x09\x09int\x20j\x20=\x20int(\x20i\x20)\x20*\x204;\x0a\x09\x09int\x20x\x20=\x20j\x20%\x20size;\x0a\x09\x09int\x20y\x20=\x20j\x20/\x20size;\x0a\x09\x09vec4\x20v1\x20=\x20texelFetch(\x20batchingTexture,\x20ivec2(\x20x,\x20y\x20),\x200\x20);\x0a\x09\x09vec4\x20v2\x20=\x20texelFetch(\x20batchingTexture,\x20ivec2(\x20x\x20+\x201,\x20y\x20),\x200\x20);\x0a\x09\x09vec4\x20v3\x20=\x20texelFetch(\x20batchingTexture,\x20ivec2(\x20x\x20+\x202,\x20y\x20),\x200\x20);\x0a\x09\x09vec4\x20v4\x20=\x20texelFetch(\x20batchingTexture,\x20ivec2(\x20x\x20+\x203,\x20y\x20),\x200\x20);\x0a\x09\x09return\x20mat4(\x20v1,\x20v2,\x20v3,\x20v4\x20);\x0a\x0a\x09}\x0a#endif\x0a','batching_vertex':'\x0a#ifdef\x20USE_BATCHING\x0a\x09mat4\x20batchingMatrix\x20=\x20getBatchingMatrix(\x20batchId\x20);\x0a#endif\x0a','begin_vertex':'\x0avec3\x20transformed\x20=\x20vec3(\x20position\x20);\x0a\x0a#ifdef\x20USE_ALPHAHASH\x0a\x0a\x09vPosition\x20=\x20vec3(\x20position\x20);\x0a\x0a#endif\x0a','beginnormal_vertex':'\x0avec3\x20objectNormal\x20=\x20vec3(\x20normal\x20);\x0a\x0a#ifdef\x20USE_TANGENT\x0a\x0a\x09vec3\x20objectTangent\x20=\x20vec3(\x20tangent.xyz\x20);\x0a\x0a#endif\x0a','bsdfs':'\x0a\x0afloat\x20G_BlinnPhong_Implicit(\x20/*\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20*/\x20)\x20{\x0a\x0a\x09//\x20geometry\x20term\x20is\x20(n\x20dot\x20l)(n\x20dot\x20v)\x20/\x204(n\x20dot\x20l)(n\x20dot\x20v)\x0a\x09return\x200.25;\x0a\x0a}\x0a\x0afloat\x20D_BlinnPhong(\x20const\x20in\x20float\x20shininess,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x0a\x09return\x20RECIPROCAL_PI\x20*\x20(\x20shininess\x20*\x200.5\x20+\x201.0\x20)\x20*\x20pow(\x20dotNH,\x20shininess\x20);\x0a\x0a}\x0a\x0avec3\x20BRDF_BlinnPhong(\x20const\x20in\x20vec3\x20lightDir,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20shininess\x20)\x20{\x0a\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20lightDir\x20+\x20viewDir\x20);\x0a\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotVH\x20=\x20saturate(\x20dot(\x20viewDir,\x20halfDir\x20)\x20);\x0a\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x201.0,\x20dotVH\x20);\x0a\x0a\x09float\x20G\x20=\x20G_BlinnPhong_Implicit(\x20/*\x20dotNL,\x20dotNV\x20*/\x20);\x0a\x0a\x09float\x20D\x20=\x20D_BlinnPhong(\x20shininess,\x20dotNH\x20);\x0a\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a\x0a}\x20//\x20validated\x0a\x0a','iridescence_fragment':'\x0a\x0a#ifdef\x20USE_IRIDESCENCE\x0a\x0a\x09//\x20XYZ\x20to\x20linear-sRGB\x20color\x20space\x0a\x09const\x20mat3\x20XYZ_TO_REC709\x20=\x20mat3(\x0a\x09\x09\x203.2404542,\x20-0.9692660,\x20\x200.0556434,\x0a\x09\x09-1.5371385,\x20\x201.8760108,\x20-0.2040259,\x0a\x09\x09-0.4985314,\x20\x200.0415560,\x20\x201.0572252\x0a\x09);\x0a\x0a\x09//\x20Assume\x20air\x20interface\x20for\x20top\x0a\x09//\x20Note:\x20We\x20don\x27t\x20handle\x20the\x20case\x20fresnel0\x20==\x201\x0a\x09vec3\x20Fresnel0ToIor(\x20vec3\x20fresnel0\x20)\x20{\x0a\x0a\x09\x09vec3\x20sqrtF0\x20=\x20sqrt(\x20fresnel0\x20);\x0a\x09\x09return\x20(\x20vec3(\x201.0\x20)\x20+\x20sqrtF0\x20)\x20/\x20(\x20vec3(\x201.0\x20)\x20-\x20sqrtF0\x20);\x0a\x0a\x09}\x0a\x0a\x09//\x20Conversion\x20FO/IOR\x0a\x09vec3\x20IorToFresnel0(\x20vec3\x20transmittedIor,\x20float\x20incidentIor\x20)\x20{\x0a\x0a\x09\x09return\x20pow2(\x20(\x20transmittedIor\x20-\x20vec3(\x20incidentIor\x20)\x20)\x20/\x20(\x20transmittedIor\x20+\x20vec3(\x20incidentIor\x20)\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09//\x20ior\x20is\x20a\x20value\x20between\x201.0\x20and\x203.0.\x201.0\x20is\x20air\x20interface\x0a\x09float\x20IorToFresnel0(\x20float\x20transmittedIor,\x20float\x20incidentIor\x20)\x20{\x0a\x0a\x09\x09return\x20pow2(\x20(\x20transmittedIor\x20-\x20incidentIor\x20)\x20/\x20(\x20transmittedIor\x20+\x20incidentIor\x20));\x0a\x0a\x09}\x0a\x0a\x09//\x20Fresnel\x20equations\x20for\x20dielectric/dielectric\x20interfaces.\x0a\x09//\x20Ref:\x20https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\x0a\x09//\x20Evaluation\x20XYZ\x20sensitivity\x20curves\x20in\x20Fourier\x20space\x0a\x09vec3\x20evalSensitivity(\x20float\x20OPD,\x20vec3\x20shift\x20)\x20{\x0a\x0a\x09\x09float\x20phase\x20=\x202.0\x20*\x20PI\x20*\x20OPD\x20*\x201.0e-9;\x0a\x09\x09vec3\x20val\x20=\x20vec3(\x205.4856e-13,\x204.4201e-13,\x205.2481e-13\x20);\x0a\x09\x09vec3\x20pos\x20=\x20vec3(\x201.6810e+06,\x201.7953e+06,\x202.2084e+06\x20);\x0a\x09\x09vec3\x20var\x20=\x20vec3(\x204.3278e+09,\x209.3046e+09,\x206.6121e+09\x20);\x0a\x0a\x09\x09vec3\x20xyz\x20=\x20val\x20*\x20sqrt(\x202.0\x20*\x20PI\x20*\x20var\x20)\x20*\x20cos(\x20pos\x20*\x20phase\x20+\x20shift\x20)\x20*\x20exp(\x20-\x20pow2(\x20phase\x20)\x20*\x20var\x20);\x0a\x09\x09xyz.x\x20+=\x209.7470e-14\x20*\x20sqrt(\x202.0\x20*\x20PI\x20*\x204.5282e+09\x20)\x20*\x20cos(\x202.2399e+06\x20*\x20phase\x20+\x20shift[\x200\x20]\x20)\x20*\x20exp(\x20-\x204.5282e+09\x20*\x20pow2(\x20phase\x20)\x20);\x0a\x09\x09xyz\x20/=\x201.0685e-7;\x0a\x0a\x09\x09vec3\x20rgb\x20=\x20XYZ_TO_REC709\x20*\x20xyz;\x0a\x09\x09return\x20rgb;\x0a\x0a\x09}\x0a\x0a\x09vec3\x20evalIridescence(\x20float\x20outsideIOR,\x20float\x20eta2,\x20float\x20cosTheta1,\x20float\x20thinFilmThickness,\x20vec3\x20baseF0\x20)\x20{\x0a\x0a\x09\x09vec3\x20I;\x0a\x0a\x09\x09//\x20Force\x20iridescenceIOR\x20->\x20outsideIOR\x20when\x20thinFilmThickness\x20->\x200.0\x0a\x09\x09float\x20iridescenceIOR\x20=\x20mix(\x20outsideIOR,\x20eta2,\x20smoothstep(\x200.0,\x200.03,\x20thinFilmThickness\x20)\x20);\x0a\x09\x09//\x20Evaluate\x20the\x20cosTheta\x20on\x20the\x20base\x20layer\x20(Snell\x20law)\x0a\x09\x09float\x20sinTheta2Sq\x20=\x20pow2(\x20outsideIOR\x20/\x20iridescenceIOR\x20)\x20*\x20(\x201.0\x20-\x20pow2(\x20cosTheta1\x20)\x20);\x0a\x0a\x09\x09//\x20Handle\x20TIR:\x0a\x09\x09float\x20cosTheta2Sq\x20=\x201.0\x20-\x20sinTheta2Sq;\x0a\x09\x09if\x20(\x20cosTheta2Sq\x20<\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09return\x20vec3(\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09\x09float\x20cosTheta2\x20=\x20sqrt(\x20cosTheta2Sq\x20);\x0a\x0a\x09\x09//\x20First\x20interface\x0a\x09\x09float\x20R0\x20=\x20IorToFresnel0(\x20iridescenceIOR,\x20outsideIOR\x20);\x0a\x09\x09float\x20R12\x20=\x20F_Schlick(\x20R0,\x201.0,\x20cosTheta1\x20);\x0a\x09\x09float\x20T121\x20=\x201.0\x20-\x20R12;\x0a\x09\x09float\x20phi12\x20=\x200.0;\x0a\x09\x09if\x20(\x20iridescenceIOR\x20<\x20outsideIOR\x20)\x20phi12\x20=\x20PI;\x0a\x09\x09float\x20phi21\x20=\x20PI\x20-\x20phi12;\x0a\x0a\x09\x09//\x20Second\x20interface\x0a\x09\x09vec3\x20baseIOR\x20=\x20Fresnel0ToIor(\x20clamp(\x20baseF0,\x200.0,\x200.9999\x20)\x20);\x20//\x20guard\x20against\x201.0\x0a\x09\x09vec3\x20R1\x20=\x20IorToFresnel0(\x20baseIOR,\x20iridescenceIOR\x20);\x0a\x09\x09vec3\x20R23\x20=\x20F_Schlick(\x20R1,\x201.0,\x20cosTheta2\x20);\x0a\x09\x09vec3\x20phi23\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09if\x20(\x20baseIOR[\x200\x20]\x20<\x20iridescenceIOR\x20)\x20phi23[\x200\x20]\x20=\x20PI;\x0a\x09\x09if\x20(\x20baseIOR[\x201\x20]\x20<\x20iridescenceIOR\x20)\x20phi23[\x201\x20]\x20=\x20PI;\x0a\x09\x09if\x20(\x20baseIOR[\x202\x20]\x20<\x20iridescenceIOR\x20)\x20phi23[\x202\x20]\x20=\x20PI;\x0a\x0a\x09\x09//\x20Phase\x20shift\x0a\x09\x09float\x20OPD\x20=\x202.0\x20*\x20iridescenceIOR\x20*\x20thinFilmThickness\x20*\x20cosTheta2;\x0a\x09\x09vec3\x20phi\x20=\x20vec3(\x20phi21\x20)\x20+\x20phi23;\x0a\x0a\x09\x09//\x20Compound\x20terms\x0a\x09\x09vec3\x20R123\x20=\x20clamp(\x20R12\x20*\x20R23,\x201e-5,\x200.9999\x20);\x0a\x09\x09vec3\x20r123\x20=\x20sqrt(\x20R123\x20);\x0a\x09\x09vec3\x20Rs\x20=\x20pow2(\x20T121\x20)\x20*\x20R23\x20/\x20(\x20vec3(\x201.0\x20)\x20-\x20R123\x20);\x0a\x0a\x09\x09//\x20Reflectance\x20term\x20for\x20m\x20=\x200\x20(DC\x20term\x20amplitude)\x0a\x09\x09vec3\x20C0\x20=\x20R12\x20+\x20Rs;\x0a\x09\x09I\x20=\x20C0;\x0a\x0a\x09\x09//\x20Reflectance\x20term\x20for\x20m\x20>\x200\x20(pairs\x20of\x20diracs)\x0a\x09\x09vec3\x20Cm\x20=\x20Rs\x20-\x20T121;\x0a\x09\x09for\x20(\x20int\x20m\x20=\x201;\x20m\x20<=\x202;\x20++\x20m\x20)\x20{\x0a\x0a\x09\x09\x09Cm\x20*=\x20r123;\x0a\x09\x09\x09vec3\x20Sm\x20=\x202.0\x20*\x20evalSensitivity(\x20float(\x20m\x20)\x20*\x20OPD,\x20float(\x20m\x20)\x20*\x20phi\x20);\x0a\x09\x09\x09I\x20+=\x20Cm\x20*\x20Sm;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09//\x20Since\x20out\x20of\x20gamut\x20colors\x20might\x20be\x20produced,\x20negative\x20color\x20values\x20are\x20clamped\x20to\x200.\x0a\x09\x09return\x20max(\x20I,\x20vec3(\x200.0\x20)\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0a','bumpmap_pars_fragment':'\x0a#ifdef\x20USE_BUMPMAP\x0a\x0a\x09uniform\x20sampler2D\x20bumpMap;\x0a\x09uniform\x20float\x20bumpScale;\x0a\x0a\x09//\x20Bump\x20Mapping\x20Unparametrized\x20Surfaces\x20on\x20the\x20GPU\x20by\x20Morten\x20S.\x20Mikkelsen\x0a\x09//\x20https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\x0a\x0a\x09//\x20Evaluate\x20the\x20derivative\x20of\x20the\x20height\x20w.r.t.\x20screen-space\x20using\x20forward\x20differencing\x20(listing\x202)\x0a\x0a\x09vec2\x20dHdxy_fwd()\x20{\x0a\x0a\x09\x09vec2\x20dSTdx\x20=\x20dFdx(\x20vBumpMapUv\x20);\x0a\x09\x09vec2\x20dSTdy\x20=\x20dFdy(\x20vBumpMapUv\x20);\x0a\x0a\x09\x09float\x20Hll\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vBumpMapUv\x20).x;\x0a\x09\x09float\x20dBx\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vBumpMapUv\x20+\x20dSTdx\x20).x\x20-\x20Hll;\x0a\x09\x09float\x20dBy\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vBumpMapUv\x20+\x20dSTdy\x20).x\x20-\x20Hll;\x0a\x0a\x09\x09return\x20vec2(\x20dBx,\x20dBy\x20);\x0a\x0a\x09}\x0a\x0a\x09vec3\x20perturbNormalArb(\x20vec3\x20surf_pos,\x20vec3\x20surf_norm,\x20vec2\x20dHdxy,\x20float\x20faceDirection\x20)\x20{\x0a\x0a\x09\x09//\x20normalize\x20is\x20done\x20to\x20ensure\x20that\x20the\x20bump\x20map\x20looks\x20the\x20same\x20regardless\x20of\x20the\x20texture\x27s\x20scale\x0a\x09\x09vec3\x20vSigmaX\x20=\x20normalize(\x20dFdx(\x20surf_pos.xyz\x20)\x20);\x0a\x09\x09vec3\x20vSigmaY\x20=\x20normalize(\x20dFdy(\x20surf_pos.xyz\x20)\x20);\x0a\x09\x09vec3\x20vN\x20=\x20surf_norm;\x20//\x20normalized\x0a\x0a\x09\x09vec3\x20R1\x20=\x20cross(\x20vSigmaY,\x20vN\x20);\x0a\x09\x09vec3\x20R2\x20=\x20cross(\x20vN,\x20vSigmaX\x20);\x0a\x0a\x09\x09float\x20fDet\x20=\x20dot(\x20vSigmaX,\x20R1\x20)\x20*\x20faceDirection;\x0a\x0a\x09\x09vec3\x20vGrad\x20=\x20sign(\x20fDet\x20)\x20*\x20(\x20dHdxy.x\x20*\x20R1\x20+\x20dHdxy.y\x20*\x20R2\x20);\x0a\x09\x09return\x20normalize(\x20abs(\x20fDet\x20)\x20*\x20surf_norm\x20-\x20vGrad\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a','clipping_planes_fragment':'\x0a#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x0a\x09vec4\x20plane;\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20UNION_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09if\x20(\x20dot(\x20vClipPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20discard;\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a\x09#if\x20UNION_CLIPPING_PLANES\x20<\x20NUM_CLIPPING_PLANES\x0a\x0a\x09\x09bool\x20clipped\x20=\x20true;\x0a\x0a\x09\x09#pragma\x20unroll_loop_start\x0a\x09\x09for\x20(\x20int\x20i\x20=\x20UNION_CLIPPING_PLANES;\x20i\x20<\x20NUM_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09\x09clipped\x20=\x20(\x20dot(\x20vClipPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20&&\x20clipped;\x0a\x0a\x09\x09}\x0a\x09\x09#pragma\x20unroll_loop_end\x0a\x0a\x09\x09if\x20(\x20clipped\x20)\x20discard;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','clipping_planes_pars_fragment':'\x0a#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x0a\x09varying\x20vec3\x20vClipPosition;\x0a\x0a\x09uniform\x20vec4\x20clippingPlanes[\x20NUM_CLIPPING_PLANES\x20];\x0a\x0a#endif\x0a','clipping_planes_pars_vertex':'\x0a#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x0a\x09varying\x20vec3\x20vClipPosition;\x0a\x0a#endif\x0a','clipping_planes_vertex':'\x0a#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x0a\x09vClipPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x0a#endif\x0a','color_fragment':'\x0a#if\x20defined(\x20USE_COLOR_ALPHA\x20)\x0a\x0a\x09diffuseColor\x20*=\x20vColor;\x0a\x0a#elif\x20defined(\x20USE_COLOR\x20)\x0a\x0a\x09diffuseColor.rgb\x20*=\x20vColor;\x0a\x0a#endif\x0a','color_pars_fragment':'\x0a#if\x20defined(\x20USE_COLOR_ALPHA\x20)\x0a\x0a\x09varying\x20vec4\x20vColor;\x0a\x0a#elif\x20defined(\x20USE_COLOR\x20)\x0a\x0a\x09varying\x20vec3\x20vColor;\x0a\x0a#endif\x0a','color_pars_vertex':'\x0a#if\x20defined(\x20USE_COLOR_ALPHA\x20)\x0a\x0a\x09varying\x20vec4\x20vColor;\x0a\x0a#elif\x20defined(\x20USE_COLOR\x20)\x20||\x20defined(\x20USE_INSTANCING_COLOR\x20)\x0a\x0a\x09varying\x20vec3\x20vColor;\x0a\x0a#endif\x0a','color_vertex':'\x0a#if\x20defined(\x20USE_COLOR_ALPHA\x20)\x0a\x0a\x09vColor\x20=\x20vec4(\x201.0\x20);\x0a\x0a#elif\x20defined(\x20USE_COLOR\x20)\x20||\x20defined(\x20USE_INSTANCING_COLOR\x20)\x0a\x0a\x09vColor\x20=\x20vec3(\x201.0\x20);\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_COLOR\x0a\x0a\x09vColor\x20*=\x20color;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_INSTANCING_COLOR\x0a\x0a\x09vColor.xyz\x20*=\x20instanceColor.xyz;\x0a\x0a#endif\x0a','common':'\x0a#define\x20PI\x203.141592653589793\x0a#define\x20PI2\x206.283185307179586\x0a#define\x20PI_HALF\x201.5707963267948966\x0a#define\x20RECIPROCAL_PI\x200.3183098861837907\x0a#define\x20RECIPROCAL_PI2\x200.15915494309189535\x0a#define\x20EPSILON\x201e-6\x0a\x0a#ifndef\x20saturate\x0a//\x20<tonemapping_pars_fragment>\x20may\x20have\x20defined\x20saturate()\x20already\x0a#define\x20saturate(\x20a\x20)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#endif\x0a#define\x20whiteComplement(\x20a\x20)\x20(\x201.0\x20-\x20saturate(\x20a\x20)\x20)\x0a\x0afloat\x20pow2(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x;\x20}\x0avec3\x20pow2(\x20const\x20in\x20vec3\x20x\x20)\x20{\x20return\x20x*x;\x20}\x0afloat\x20pow3(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x*x;\x20}\x0afloat\x20pow4(\x20const\x20in\x20float\x20x\x20)\x20{\x20float\x20x2\x20=\x20x*x;\x20return\x20x2*x2;\x20}\x0afloat\x20max3(\x20const\x20in\x20vec3\x20v\x20)\x20{\x20return\x20max(\x20max(\x20v.x,\x20v.y\x20),\x20v.z\x20);\x20}\x0afloat\x20average(\x20const\x20in\x20vec3\x20v\x20)\x20{\x20return\x20dot(\x20v,\x20vec3(\x200.3333333\x20)\x20);\x20}\x0a\x0a//\x20expects\x20values\x20in\x20the\x20range\x20of\x20[0,1]x[0,1],\x20returns\x20values\x20in\x20the\x20[0,1]\x20range.\x0a//\x20do\x20not\x20collapse\x20into\x20a\x20single\x20function\x20per:\x20http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\x0ahighp\x20float\x20rand(\x20const\x20in\x20vec2\x20uv\x20)\x20{\x0a\x0a\x09const\x20highp\x20float\x20a\x20=\x2012.9898,\x20b\x20=\x2078.233,\x20c\x20=\x2043758.5453;\x0a\x09highp\x20float\x20dt\x20=\x20dot(\x20uv.xy,\x20vec2(\x20a,b\x20)\x20),\x20sn\x20=\x20mod(\x20dt,\x20PI\x20);\x0a\x0a\x09return\x20fract(\x20sin(\x20sn\x20)\x20*\x20c\x20);\x0a\x0a}\x0a\x0a#ifdef\x20HIGH_PRECISION\x0a\x09float\x20precisionSafeLength(\x20vec3\x20v\x20)\x20{\x20return\x20length(\x20v\x20);\x20}\x0a#else\x0a\x09float\x20precisionSafeLength(\x20vec3\x20v\x20)\x20{\x0a\x09\x09float\x20maxComponent\x20=\x20max3(\x20abs(\x20v\x20)\x20);\x0a\x09\x09return\x20length(\x20v\x20/\x20maxComponent\x20)\x20*\x20maxComponent;\x0a\x09}\x0a#endif\x0a\x0astruct\x20IncidentLight\x20{\x0a\x09vec3\x20color;\x0a\x09vec3\x20direction;\x0a\x09bool\x20visible;\x0a};\x0a\x0astruct\x20ReflectedLight\x20{\x0a\x09vec3\x20directDiffuse;\x0a\x09vec3\x20directSpecular;\x0a\x09vec3\x20indirectDiffuse;\x0a\x09vec3\x20indirectSpecular;\x0a};\x0a\x0a#ifdef\x20USE_ALPHAHASH\x0a\x0a\x09varying\x20vec3\x20vPosition;\x0a\x0a#endif\x0a\x0avec3\x20transformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x0a\x09return\x20normalize(\x20(\x20matrix\x20*\x20vec4(\x20dir,\x200.0\x20)\x20).xyz\x20);\x0a\x0a}\x0a\x0avec3\x20inverseTransformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x0a\x09//\x20dir\x20can\x20be\x20either\x20a\x20direction\x20vector\x20or\x20a\x20normal\x20vector\x0a\x09//\x20upper-left\x203x3\x20of\x20matrix\x20is\x20assumed\x20to\x20be\x20orthogonal\x0a\x0a\x09return\x20normalize(\x20(\x20vec4(\x20dir,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);\x0a\x0a}\x0a\x0amat3\x20transposeMat3(\x20const\x20in\x20mat3\x20m\x20)\x20{\x0a\x0a\x09mat3\x20tmp;\x0a\x0a\x09tmp[\x200\x20]\x20=\x20vec3(\x20m[\x200\x20].x,\x20m[\x201\x20].x,\x20m[\x202\x20].x\x20);\x0a\x09tmp[\x201\x20]\x20=\x20vec3(\x20m[\x200\x20].y,\x20m[\x201\x20].y,\x20m[\x202\x20].y\x20);\x0a\x09tmp[\x202\x20]\x20=\x20vec3(\x20m[\x200\x20].z,\x20m[\x201\x20].z,\x20m[\x202\x20].z\x20);\x0a\x0a\x09return\x20tmp;\x0a\x0a}\x0a\x0afloat\x20luminance(\x20const\x20in\x20vec3\x20rgb\x20)\x20{\x0a\x0a\x09//\x20assumes\x20rgb\x20is\x20in\x20linear\x20color\x20space\x20with\x20sRGB\x20primaries\x20and\x20D65\x20white\x20point\x0a\x0a\x09const\x20vec3\x20weights\x20=\x20vec3(\x200.2126729,\x200.7151522,\x200.0721750\x20);\x0a\x0a\x09return\x20dot(\x20weights,\x20rgb\x20);\x0a\x0a}\x0a\x0abool\x20isPerspectiveMatrix(\x20mat4\x20m\x20)\x20{\x0a\x0a\x09return\x20m[\x202\x20][\x203\x20]\x20==\x20-\x201.0;\x0a\x0a}\x0a\x0avec2\x20equirectUv(\x20in\x20vec3\x20dir\x20)\x20{\x0a\x0a\x09//\x20dir\x20is\x20assumed\x20to\x20be\x20unit\x20length\x0a\x0a\x09float\x20u\x20=\x20atan(\x20dir.z,\x20dir.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x0a\x09float\x20v\x20=\x20asin(\x20clamp(\x20dir.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x0a\x09return\x20vec2(\x20u,\x20v\x20);\x0a\x0a}\x0a\x0avec3\x20BRDF_Lambert(\x20const\x20in\x20vec3\x20diffuseColor\x20)\x20{\x0a\x0a\x09return\x20RECIPROCAL_PI\x20*\x20diffuseColor;\x0a\x0a}\x20//\x20validated\x0a\x0avec3\x20F_Schlick(\x20const\x20in\x20vec3\x20f0,\x20const\x20in\x20float\x20f90,\x20const\x20in\x20float\x20dotVH\x20)\x20{\x0a\x0a\x09//\x20Original\x20approximation\x20by\x20Christophe\x20Schlick\x20\x2794\x0a\x09//\x20float\x20fresnel\x20=\x20pow(\x201.0\x20-\x20dotVH,\x205.0\x20);\x0a\x0a\x09//\x20Optimized\x20variant\x20(presented\x20by\x20Epic\x20at\x20SIGGRAPH\x20\x2713)\x0a\x09//\x20https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-\x205.55473\x20*\x20dotVH\x20-\x206.98316\x20)\x20*\x20dotVH\x20);\x0a\x0a\x09return\x20f0\x20*\x20(\x201.0\x20-\x20fresnel\x20)\x20+\x20(\x20f90\x20*\x20fresnel\x20);\x0a\x0a}\x20//\x20validated\x0a\x0afloat\x20F_Schlick(\x20const\x20in\x20float\x20f0,\x20const\x20in\x20float\x20f90,\x20const\x20in\x20float\x20dotVH\x20)\x20{\x0a\x0a\x09//\x20Original\x20approximation\x20by\x20Christophe\x20Schlick\x20\x2794\x0a\x09//\x20float\x20fresnel\x20=\x20pow(\x201.0\x20-\x20dotVH,\x205.0\x20);\x0a\x0a\x09//\x20Optimized\x20variant\x20(presented\x20by\x20Epic\x20at\x20SIGGRAPH\x20\x2713)\x0a\x09//\x20https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-\x205.55473\x20*\x20dotVH\x20-\x206.98316\x20)\x20*\x20dotVH\x20);\x0a\x0a\x09return\x20f0\x20*\x20(\x201.0\x20-\x20fresnel\x20)\x20+\x20(\x20f90\x20*\x20fresnel\x20);\x0a\x0a}\x20//\x20validated\x0a','cube_uv_reflection_fragment':'\x0a#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a\x0a\x09#define\x20cubeUV_minMipLevel\x204.0\x0a\x09#define\x20cubeUV_minTileSize\x2016.0\x0a\x0a\x09//\x20These\x20shader\x20functions\x20convert\x20between\x20the\x20UV\x20coordinates\x20of\x20a\x20single\x20face\x20of\x0a\x09//\x20a\x20cubemap,\x20the\x200-5\x20integer\x20index\x20of\x20a\x20cube\x20face,\x20and\x20the\x20direction\x20vector\x20for\x0a\x09//\x20sampling\x20a\x20textureCube\x20(not\x20generally\x20normalized\x20).\x0a\x0a\x09float\x20getFace(\x20vec3\x20direction\x20)\x20{\x0a\x0a\x09\x09vec3\x20absDirection\x20=\x20abs(\x20direction\x20);\x0a\x0a\x09\x09float\x20face\x20=\x20-\x201.0;\x0a\x0a\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200.0\x20:\x203.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.z\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202.0\x20:\x205.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x20face;\x0a\x0a\x09}\x0a\x0a\x09//\x20RH\x20coordinate\x20system;\x20PMREM\x20face-indexing\x20convention\x0a\x09vec2\x20getUV(\x20vec3\x20direction,\x20float\x20face\x20)\x20{\x0a\x0a\x09\x09vec2\x20uv;\x0a\x0a\x09\x09if\x20(\x20face\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20pos\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20-\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20pos\x20y\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20pos\x20z\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x203.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20neg\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x204.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20neg\x20y\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20neg\x20z\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x200.5\x20*\x20(\x20uv\x20+\x201.0\x20);\x0a\x0a\x09}\x0a\x0a\x09vec3\x20bilinearCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20direction,\x20float\x20mipInt\x20)\x20{\x0a\x0a\x09\x09float\x20face\x20=\x20getFace(\x20direction\x20);\x0a\x0a\x09\x09float\x20filterInt\x20=\x20max(\x20cubeUV_minMipLevel\x20-\x20mipInt,\x200.0\x20);\x0a\x0a\x09\x09mipInt\x20=\x20max(\x20mipInt,\x20cubeUV_minMipLevel\x20);\x0a\x0a\x09\x09float\x20faceSize\x20=\x20exp2(\x20mipInt\x20);\x0a\x0a\x09\x09highp\x20vec2\x20uv\x20=\x20getUV(\x20direction,\x20face\x20)\x20*\x20(\x20faceSize\x20-\x202.0\x20)\x20+\x201.0;\x20//\x20#25071\x0a\x0a\x09\x09if\x20(\x20face\x20>\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv.y\x20+=\x20faceSize;\x0a\x0a\x09\x09\x09face\x20-=\x203.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09uv.x\x20+=\x20face\x20*\x20faceSize;\x0a\x0a\x09\x09uv.x\x20+=\x20filterInt\x20*\x203.0\x20*\x20cubeUV_minTileSize;\x0a\x0a\x09\x09uv.y\x20+=\x204.0\x20*\x20(\x20exp2(\x20CUBEUV_MAX_MIP\x20)\x20-\x20faceSize\x20);\x0a\x0a\x09\x09uv.x\x20*=\x20CUBEUV_TEXEL_WIDTH;\x0a\x09\x09uv.y\x20*=\x20CUBEUV_TEXEL_HEIGHT;\x0a\x0a\x09\x09#ifdef\x20texture2DGradEXT\x0a\x0a\x09\x09\x09return\x20texture2DGradEXT(\x20envMap,\x20uv,\x20vec2(\x200.0\x20),\x20vec2(\x200.0\x20)\x20).rgb;\x20//\x20disable\x20anisotropic\x20filtering\x0a\x0a\x09\x09#else\x0a\x0a\x09\x09\x09return\x20texture2D(\x20envMap,\x20uv\x20).rgb;\x0a\x0a\x09\x09#endif\x0a\x0a\x09}\x0a\x0a\x09//\x20These\x20defines\x20must\x20match\x20with\x20PMREMGenerator\x0a\x0a\x09#define\x20cubeUV_r0\x201.0\x0a\x09#define\x20cubeUV_v0\x200.339\x0a\x09#define\x20cubeUV_m0\x20-\x202.0\x0a\x09#define\x20cubeUV_r1\x200.8\x0a\x09#define\x20cubeUV_v1\x200.276\x0a\x09#define\x20cubeUV_m1\x20-\x201.0\x0a\x09#define\x20cubeUV_r4\x200.4\x0a\x09#define\x20cubeUV_v4\x200.046\x0a\x09#define\x20cubeUV_m4\x202.0\x0a\x09#define\x20cubeUV_r5\x200.305\x0a\x09#define\x20cubeUV_v5\x200.016\x0a\x09#define\x20cubeUV_m5\x203.0\x0a\x09#define\x20cubeUV_r6\x200.21\x0a\x09#define\x20cubeUV_v6\x200.0038\x0a\x09#define\x20cubeUV_m6\x204.0\x0a\x0a\x09float\x20roughnessToMip(\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x200.0;\x0a\x0a\x09\x09if\x20(\x20roughness\x20>=\x20cubeUV_r1\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r0\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m1\x20-\x20cubeUV_m0\x20)\x20/\x20(\x20cubeUV_r0\x20-\x20cubeUV_r1\x20)\x20+\x20cubeUV_m0;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r4\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r1\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m4\x20-\x20cubeUV_m1\x20)\x20/\x20(\x20cubeUV_r1\x20-\x20cubeUV_r4\x20)\x20+\x20cubeUV_m1;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r5\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r4\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m5\x20-\x20cubeUV_m4\x20)\x20/\x20(\x20cubeUV_r4\x20-\x20cubeUV_r5\x20)\x20+\x20cubeUV_m4;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r6\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r5\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m6\x20-\x20cubeUV_m5\x20)\x20/\x20(\x20cubeUV_r5\x20-\x20cubeUV_r6\x20)\x20+\x20cubeUV_m5;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20-\x202.0\x20*\x20log2(\x201.16\x20*\x20roughness\x20);\x20//\x201.16\x20=\x201.79^0.25\x0a\x09\x09}\x0a\x0a\x09\x09return\x20mip;\x0a\x0a\x09}\x0a\x0a\x09vec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20sampleDir,\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x20clamp(\x20roughnessToMip(\x20roughness\x20),\x20cubeUV_m0,\x20CUBEUV_MAX_MIP\x20);\x0a\x0a\x09\x09float\x20mipF\x20=\x20fract(\x20mip\x20);\x0a\x0a\x09\x09float\x20mipInt\x20=\x20floor(\x20mip\x20);\x0a\x0a\x09\x09vec3\x20color0\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20);\x0a\x0a\x09\x09if\x20(\x20mipF\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09return\x20vec4(\x20color0,\x201.0\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09vec3\x20color1\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20+\x201.0\x20);\x0a\x0a\x09\x09\x09return\x20vec4(\x20mix(\x20color0,\x20color1,\x20mipF\x20),\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09}\x0a\x0a#endif\x0a','defaultnormal_vertex':'\x0a\x0avec3\x20transformedNormal\x20=\x20objectNormal;\x0a#ifdef\x20USE_TANGENT\x0a\x0a\x09vec3\x20transformedTangent\x20=\x20objectTangent;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_BATCHING\x0a\x0a\x09//\x20this\x20is\x20in\x20lieu\x20of\x20a\x20per-instance\x20normal-matrix\x0a\x09//\x20shear\x20transforms\x20in\x20the\x20instance\x20matrix\x20are\x20not\x20supported\x0a\x0a\x09mat3\x20bm\x20=\x20mat3(\x20batchingMatrix\x20);\x0a\x09transformedNormal\x20/=\x20vec3(\x20dot(\x20bm[\x200\x20],\x20bm[\x200\x20]\x20),\x20dot(\x20bm[\x201\x20],\x20bm[\x201\x20]\x20),\x20dot(\x20bm[\x202\x20],\x20bm[\x202\x20]\x20)\x20);\x0a\x09transformedNormal\x20=\x20bm\x20*\x20transformedNormal;\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09transformedTangent\x20=\x20bm\x20*\x20transformedTangent;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_INSTANCING\x0a\x0a\x09//\x20this\x20is\x20in\x20lieu\x20of\x20a\x20per-instance\x20normal-matrix\x0a\x09//\x20shear\x20transforms\x20in\x20the\x20instance\x20matrix\x20are\x20not\x20supported\x0a\x0a\x09mat3\x20im\x20=\x20mat3(\x20instanceMatrix\x20);\x0a\x09transformedNormal\x20/=\x20vec3(\x20dot(\x20im[\x200\x20],\x20im[\x200\x20]\x20),\x20dot(\x20im[\x201\x20],\x20im[\x201\x20]\x20),\x20dot(\x20im[\x202\x20],\x20im[\x202\x20]\x20)\x20);\x0a\x09transformedNormal\x20=\x20im\x20*\x20transformedNormal;\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09transformedTangent\x20=\x20im\x20*\x20transformedTangent;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0atransformedNormal\x20=\x20normalMatrix\x20*\x20transformedNormal;\x0a\x0a#ifdef\x20FLIP_SIDED\x0a\x0a\x09transformedNormal\x20=\x20-\x20transformedNormal;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_TANGENT\x0a\x0a\x09transformedTangent\x20=\x20(\x20modelViewMatrix\x20*\x20vec4(\x20transformedTangent,\x200.0\x20)\x20).xyz;\x0a\x0a\x09#ifdef\x20FLIP_SIDED\x0a\x0a\x09\x09transformedTangent\x20=\x20-\x20transformedTangent;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','displacementmap_pars_vertex':'\x0a#ifdef\x20USE_DISPLACEMENTMAP\x0a\x0a\x09uniform\x20sampler2D\x20displacementMap;\x0a\x09uniform\x20float\x20displacementScale;\x0a\x09uniform\x20float\x20displacementBias;\x0a\x0a#endif\x0a','displacementmap_vertex':'\x0a#ifdef\x20USE_DISPLACEMENTMAP\x0a\x0a\x09transformed\x20+=\x20normalize(\x20objectNormal\x20)\x20*\x20(\x20texture2D(\x20displacementMap,\x20vDisplacementMapUv\x20).x\x20*\x20displacementScale\x20+\x20displacementBias\x20);\x0a\x0a#endif\x0a','emissivemap_fragment':'\x0a#ifdef\x20USE_EMISSIVEMAP\x0a\x0a\x09vec4\x20emissiveColor\x20=\x20texture2D(\x20emissiveMap,\x20vEmissiveMapUv\x20);\x0a\x0a\x09totalEmissiveRadiance\x20*=\x20emissiveColor.rgb;\x0a\x0a#endif\x0a','emissivemap_pars_fragment':'\x0a#ifdef\x20USE_EMISSIVEMAP\x0a\x0a\x09uniform\x20sampler2D\x20emissiveMap;\x0a\x0a#endif\x0a','colorspace_fragment':'\x0agl_FragColor\x20=\x20linearToOutputTexel(\x20gl_FragColor\x20);\x0a','colorspace_pars_fragment':'\x0a\x0a//\x20http://www.russellcottrell.com/photo/matrixCalculator.htm\x0a\x0a//\x20Linear\x20sRGB\x20=>\x20XYZ\x20=>\x20Linear\x20Display\x20P3\x0aconst\x20mat3\x20LINEAR_SRGB_TO_LINEAR_DISPLAY_P3\x20=\x20mat3(\x0a\x09vec3(\x200.8224621,\x200.177538,\x200.0\x20),\x0a\x09vec3(\x200.0331941,\x200.9668058,\x200.0\x20),\x0a\x09vec3(\x200.0170827,\x200.0723974,\x200.9105199\x20)\x0a);\x0a\x0a//\x20Linear\x20Display\x20P3\x20=>\x20XYZ\x20=>\x20Linear\x20sRGB\x0aconst\x20mat3\x20LINEAR_DISPLAY_P3_TO_LINEAR_SRGB\x20=\x20mat3(\x0a\x09vec3(\x201.2249401,\x20-\x200.2249404,\x200.0\x20),\x0a\x09vec3(\x20-\x200.0420569,\x201.0420571,\x200.0\x20),\x0a\x09vec3(\x20-\x200.0196376,\x20-\x200.0786361,\x201.0982735\x20)\x0a);\x0a\x0avec4\x20LinearSRGBToLinearDisplayP3(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20LINEAR_SRGB_TO_LINEAR_DISPLAY_P3,\x20value.a\x20);\x0a}\x0a\x0avec4\x20LinearDisplayP3ToLinearSRGB(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20LINEAR_DISPLAY_P3_TO_LINEAR_SRGB,\x20value.a\x20);\x0a}\x0a\x0avec4\x20LinearTransferOETF(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20value;\x0a}\x0a\x0avec4\x20sRGBTransferOETF(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb,\x20vec3(\x200.41666\x20)\x20)\x20*\x201.055\x20-\x20vec3(\x200.055\x20),\x20value.rgb\x20*\x2012.92,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.0031308\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0a\x0a//\x20@deprecated,\x20r156\x0avec4\x20LinearToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20value;\x0a}\x0a\x0a//\x20@deprecated,\x20r156\x0avec4\x20LinearTosRGB(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20sRGBTransferOETF(\x20value\x20);\x0a}\x0a','envmap_fragment':'\x0a#ifdef\x20USE_ENVMAP\x0a\x0a\x09#ifdef\x20ENV_WORLDPOS\x0a\x0a\x09\x09vec3\x20cameraToFrag;\x0a\x0a\x09\x09if\x20(\x20isOrthographic\x20)\x20{\x0a\x0a\x09\x09\x09cameraToFrag\x20=\x20normalize(\x20vec3(\x20-\x20viewMatrix[\x200\x20][\x202\x20],\x20-\x20viewMatrix[\x201\x20][\x202\x20],\x20-\x20viewMatrix[\x202\x20][\x202\x20]\x20)\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09cameraToFrag\x20=\x20normalize(\x20vWorldPosition\x20-\x20cameraPosition\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09\x09//\x20Transforming\x20Normal\x20Vectors\x20with\x20the\x20Inverse\x20Transformation\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20cameraToFrag,\x20worldNormal\x20);\x0a\x0a\x09\x09#else\x0a\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20cameraToFrag,\x20worldNormal,\x20refractionRatio\x20);\x0a\x0a\x09\x09#endif\x0a\x0a\x09#else\x0a\x0a\x09\x09vec3\x20reflectVec\x20=\x20vReflect;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x0a\x09\x09vec4\x20envColor\x20=\x20textureCube(\x20envMap,\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20)\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09vec4\x20envColor\x20=\x20vec4(\x200.0\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20ENVMAP_BLENDING_MULTIPLY\x0a\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20outgoingLight\x20*\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_MIX\x20)\x0a\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_ADD\x20)\x0a\x0a\x09\x09outgoingLight\x20+=\x20envColor.xyz\x20*\x20specularStrength\x20*\x20reflectivity;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','envmap_common_pars_fragment':'\x0a#ifdef\x20USE_ENVMAP\x0a\x0a\x09uniform\x20float\x20envMapIntensity;\x0a\x09uniform\x20float\x20flipEnvMap;\x0a\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09uniform\x20samplerCube\x20envMap;\x0a\x09#else\x0a\x09\x09uniform\x20sampler2D\x20envMap;\x0a\x09#endif\x0a\x09\x0a#endif\x0a','envmap_pars_fragment':'\x0a#ifdef\x20USE_ENVMAP\x0a\x0a\x09uniform\x20float\x20reflectivity;\x0a\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20||\x20defined(\x20LAMBERT\x20)\x0a\x0a\x09\x09#define\x20ENV_WORLDPOS\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20ENV_WORLDPOS\x0a\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09#endif\x0a\x0a#endif\x0a','envmap_pars_vertex':'\x0a#ifdef\x20USE_ENVMAP\x0a\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20||\x20defined(\x20LAMBERT\x20)\x0a\x0a\x09\x09#define\x20ENV_WORLDPOS\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20ENV_WORLDPOS\x0a\x09\x09\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x0a\x09#else\x0a\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','envmap_physical_pars_fragment':'\x0a#ifdef\x20USE_ENVMAP\x0a\x0a\x09vec3\x20getIBLIrradiance(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a\x0a\x09\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20worldNormal,\x201.0\x20);\x0a\x0a\x09\x09\x09return\x20PI\x20*\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x0a\x09\x09#else\x0a\x0a\x09\x09\x09return\x20vec3(\x200.0\x20);\x0a\x0a\x09\x09#endif\x0a\x0a\x09}\x0a\x0a\x09vec3\x20getIBLRadiance(\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20-\x20viewDir,\x20normal\x20);\x0a\x0a\x09\x09\x09//\x20Mixing\x20the\x20reflection\x20with\x20the\x20normal\x20is\x20more\x20accurate\x20and\x20keeps\x20rough\x20objects\x20from\x20gathering\x20light\x20from\x20behind\x20their\x20tangent\x20plane.\x0a\x09\x09\x09reflectVec\x20=\x20normalize(\x20mix(\x20reflectVec,\x20normal,\x20roughness\x20*\x20roughness)\x20);\x0a\x0a\x09\x09\x09reflectVec\x20=\x20inverseTransformDirection(\x20reflectVec,\x20viewMatrix\x20);\x0a\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20reflectVec,\x20roughness\x20);\x0a\x0a\x09\x09\x09return\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x0a\x09\x09#else\x0a\x0a\x09\x09\x09return\x20vec3(\x200.0\x20);\x0a\x0a\x09\x09#endif\x0a\x0a\x09}\x0a\x0a\x09#ifdef\x20USE_ANISOTROPY\x0a\x0a\x09\x09vec3\x20getIBLAnisotropyRadiance(\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20vec3\x20bitangent,\x20const\x20in\x20float\x20anisotropy\x20)\x20{\x0a\x0a\x09\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a\x0a\x09\x09\x09\x20\x20//\x20https://google.github.io/filament/Filament.md.html#lighting/imagebasedlights/anisotropy\x0a\x09\x09\x09\x09vec3\x20bentNormal\x20=\x20cross(\x20bitangent,\x20viewDir\x20);\x0a\x09\x09\x09\x09bentNormal\x20=\x20normalize(\x20cross(\x20bentNormal,\x20bitangent\x20)\x20);\x0a\x09\x09\x09\x09bentNormal\x20=\x20normalize(\x20mix(\x20bentNormal,\x20normal,\x20pow2(\x20pow2(\x201.0\x20-\x20anisotropy\x20*\x20(\x201.0\x20-\x20roughness\x20)\x20)\x20)\x20)\x20);\x0a\x0a\x09\x09\x09\x09return\x20getIBLRadiance(\x20viewDir,\x20bentNormal,\x20roughness\x20);\x0a\x0a\x09\x09\x09#else\x0a\x0a\x09\x09\x09\x09return\x20vec3(\x200.0\x20);\x0a\x0a\x09\x09\x09#endif\x0a\x0a\x09\x09}\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','envmap_vertex':'\x0a#ifdef\x20USE_ENVMAP\x0a\x0a\x09#ifdef\x20ENV_WORLDPOS\x0a\x0a\x09\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a\x0a\x09#else\x0a\x0a\x09\x09vec3\x20cameraToVertex;\x0a\x0a\x09\x09if\x20(\x20isOrthographic\x20)\x20{\x0a\x0a\x09\x09\x09cameraToVertex\x20=\x20normalize(\x20vec3(\x20-\x20viewMatrix[\x200\x20][\x202\x20],\x20-\x20viewMatrix[\x201\x20][\x202\x20],\x20-\x20viewMatrix[\x202\x20][\x202\x20]\x20)\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09cameraToVertex\x20=\x20normalize(\x20worldPosition.xyz\x20-\x20cameraPosition\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20transformedNormal,\x20viewMatrix\x20);\x0a\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x0a\x09\x09\x09vReflect\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x0a\x09\x09#else\x0a\x0a\x09\x09\x09vReflect\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x0a\x09\x09#endif\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','fog_vertex':'\x0a#ifdef\x20USE_FOG\x0a\x0a\x09//\x20vFogDepth\x20=\x20-\x20mvPosition.z;\x0a\x0a\x09//\x20distance\x20to\x20camera\x0a\x09vFogDepth\x20=\x20length(mvPosition.xyz);\x0a\x0a#endif\x0a','fog_pars_vertex':'\x0a#ifdef\x20USE_FOG\x0a\x0a\x09varying\x20float\x20vFogDepth;\x0a\x0a#endif\x0a','fog_fragment':'\x0a#ifdef\x20USE_FOG\x0a\x0a\x09#ifdef\x20FOG_EXP2\x0a\x0a\x09\x09float\x20fogFactor\x20=\x201.0\x20-\x20exp(\x20-\x20fogDensity\x20*\x20fogDensity\x20*\x20vFogDepth\x20*\x20vFogDepth\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09float\x20fogFactor\x20=\x20smoothstep(\x20fogNear,\x20fogFar,\x20vFogDepth\x20);\x0a\x0a\x09#endif\x0a\x0a\x09gl_FragColor.rgb\x20=\x20mix(\x20gl_FragColor.rgb,\x20fogColor,\x20fogFactor\x20);\x0a\x0a#endif\x0a','fog_pars_fragment':'\x0a#ifdef\x20USE_FOG\x0a\x0a\x09uniform\x20vec3\x20fogColor;\x0a\x09varying\x20float\x20vFogDepth;\x0a\x0a\x09#ifdef\x20FOG_EXP2\x0a\x0a\x09\x09uniform\x20float\x20fogDensity;\x0a\x0a\x09#else\x0a\x0a\x09\x09uniform\x20float\x20fogNear;\x0a\x09\x09uniform\x20float\x20fogFar;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','gradientmap_pars_fragment':'\x0a\x0a#ifdef\x20USE_GRADIENTMAP\x0a\x0a\x09uniform\x20sampler2D\x20gradientMap;\x0a\x0a#endif\x0a\x0avec3\x20getGradientIrradiance(\x20vec3\x20normal,\x20vec3\x20lightDirection\x20)\x20{\x0a\x0a\x09//\x20dotNL\x20will\x20be\x20from\x20-1.0\x20to\x201.0\x0a\x09float\x20dotNL\x20=\x20dot(\x20normal,\x20lightDirection\x20);\x0a\x09vec2\x20coord\x20=\x20vec2(\x20dotNL\x20*\x200.5\x20+\x200.5,\x200.0\x20);\x0a\x0a\x09#ifdef\x20USE_GRADIENTMAP\x0a\x0a\x09\x09return\x20vec3(\x20texture2D(\x20gradientMap,\x20coord\x20).r\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09vec2\x20fw\x20=\x20fwidth(\x20coord\x20)\x20*\x200.5;\x0a\x09\x09return\x20mix(\x20vec3(\x200.7\x20),\x20vec3(\x201.0\x20),\x20smoothstep(\x200.7\x20-\x20fw.x,\x200.7\x20+\x20fw.x,\x20coord.x\x20)\x20);\x0a\x0a\x09#endif\x0a\x0a}\x0a','lightmap_fragment':'\x0a#ifdef\x20USE_LIGHTMAP\x0a\x0a\x09vec4\x20lightMapTexel\x20=\x20texture2D(\x20lightMap,\x20vLightMapUv\x20);\x0a\x09vec3\x20lightMapIrradiance\x20=\x20lightMapTexel.rgb\x20*\x20lightMapIntensity;\x0a\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20lightMapIrradiance;\x0a\x0a#endif\x0a','lightmap_pars_fragment':'\x0a#ifdef\x20USE_LIGHTMAP\x0a\x0a\x09uniform\x20sampler2D\x20lightMap;\x0a\x09uniform\x20float\x20lightMapIntensity;\x0a\x0a#endif\x0a','lights_lambert_fragment':'\x0aLambertMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb;\x0amaterial.specularStrength\x20=\x20specularStrength;\x0a','lights_lambert_pars_fragment':'\x0avarying\x20vec3\x20vViewPosition;\x0a\x0astruct\x20LambertMaterial\x20{\x0a\x0a\x09vec3\x20diffuseColor;\x0a\x09float\x20specularStrength;\x0a\x0a};\x0a\x0avoid\x20RE_Direct_Lambert(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20LambertMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometryNormal,\x20directLight.direction\x20)\x20);\x0a\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a\x0a}\x0a\x0avoid\x20RE_IndirectDiffuse_Lambert(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20LambertMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a\x0a}\x0a\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_Lambert\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_Lambert\x0a','lights_pars_begin':'\x0auniform\x20bool\x20receiveShadow;\x0auniform\x20vec3\x20ambientLightColor;\x0a\x0a#if\x20defined(\x20USE_LIGHT_PROBES\x20)\x0a\x0a\x09uniform\x20vec3\x20lightProbe[\x209\x20];\x0a\x0a#endif\x0a\x0a//\x20get\x20the\x20irradiance\x20(radiance\x20convolved\x20with\x20cosine\x20lobe)\x20at\x20the\x20point\x20\x27normal\x27\x20on\x20the\x20unit\x20sphere\x0a//\x20source:\x20https://graphics.stanford.edu/papers/envmap/envmap.pdf\x0avec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{\x0a\x0a\x09//\x20normal\x20is\x20assumed\x20to\x20have\x20unit\x20length\x0a\x0a\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;\x0a\x0a\x09//\x20band\x200\x0a\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;\x0a\x0a\x09//\x20band\x201\x0a\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;\x0a\x0a\x09//\x20band\x202\x0a\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);\x0a\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);\x0a\x0a\x09return\x20result;\x0a\x0a}\x0a\x0avec3\x20getLightProbeIrradiance(\x20const\x20in\x20vec3\x20lightProbe[\x209\x20],\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x0a\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x0a\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20lightProbe\x20);\x0a\x0a\x09return\x20irradiance;\x0a\x0a}\x0a\x0avec3\x20getAmbientLightIrradiance(\x20const\x20in\x20vec3\x20ambientLightColor\x20)\x20{\x0a\x0a\x09vec3\x20irradiance\x20=\x20ambientLightColor;\x0a\x0a\x09return\x20irradiance;\x0a\x0a}\x0a\x0afloat\x20getDistanceAttenuation(\x20const\x20in\x20float\x20lightDistance,\x20const\x20in\x20float\x20cutoffDistance,\x20const\x20in\x20float\x20decayExponent\x20)\x20{\x0a\x0a\x09#if\x20defined\x20(\x20LEGACY_LIGHTS\x20)\x0a\x0a\x09\x09if\x20(\x20cutoffDistance\x20>\x200.0\x20&&\x20decayExponent\x20>\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09return\x20pow(\x20saturate(\x20-\x20lightDistance\x20/\x20cutoffDistance\x20+\x201.0\x20),\x20decayExponent\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x201.0;\x0a\x0a\x09#else\x0a\x0a\x09\x09//\x20based\x20upon\x20Frostbite\x203\x20Moving\x20to\x20Physically-based\x20Rendering\x0a\x09\x09//\x20page\x2032,\x20equation\x2026:\x20E[window1]\x0a\x09\x09//\x20https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\x0a\x09\x09float\x20distanceFalloff\x20=\x201.0\x20/\x20max(\x20pow(\x20lightDistance,\x20decayExponent\x20),\x200.01\x20);\x0a\x0a\x09\x09if\x20(\x20cutoffDistance\x20>\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09distanceFalloff\x20*=\x20pow2(\x20saturate(\x201.0\x20-\x20pow4(\x20lightDistance\x20/\x20cutoffDistance\x20)\x20)\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x20distanceFalloff;\x0a\x0a\x09#endif\x0a\x0a}\x0a\x0afloat\x20getSpotAttenuation(\x20const\x20in\x20float\x20coneCosine,\x20const\x20in\x20float\x20penumbraCosine,\x20const\x20in\x20float\x20angleCosine\x20)\x20{\x0a\x0a\x09return\x20smoothstep(\x20coneCosine,\x20penumbraCosine,\x20angleCosine\x20);\x0a\x0a}\x0a\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x0a\x09struct\x20DirectionalLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09};\x0a\x0a\x09uniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a\x0a\x09void\x20getDirectionalLightInfo(\x20const\x20in\x20DirectionalLight\x20directionalLight,\x20out\x20IncidentLight\x20light\x20)\x20{\x0a\x0a\x09\x09light.color\x20=\x20directionalLight.color;\x0a\x09\x09light.direction\x20=\x20directionalLight.direction;\x0a\x09\x09light.visible\x20=\x20true;\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0a\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x0a\x09struct\x20PointLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09};\x0a\x0a\x09uniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a\x0a\x09//\x20light\x20is\x20an\x20out\x20parameter\x20as\x20having\x20it\x20as\x20a\x20return\x20value\x20caused\x20compiler\x20errors\x20on\x20some\x20devices\x0a\x09void\x20getPointLightInfo(\x20const\x20in\x20PointLight\x20pointLight,\x20const\x20in\x20vec3\x20geometryPosition,\x20out\x20IncidentLight\x20light\x20)\x20{\x0a\x0a\x09\x09vec3\x20lVector\x20=\x20pointLight.position\x20-\x20geometryPosition;\x0a\x0a\x09\x09light.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x0a\x09\x09light.color\x20=\x20pointLight.color;\x0a\x09\x09light.color\x20*=\x20getDistanceAttenuation(\x20lightDistance,\x20pointLight.distance,\x20pointLight.decay\x20);\x0a\x09\x09light.visible\x20=\x20(\x20light.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0a\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x0a\x09struct\x20SpotLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09float\x20coneCos;\x0a\x09\x09float\x20penumbraCos;\x0a\x09};\x0a\x0a\x09uniform\x20SpotLight\x20spotLights[\x20NUM_SPOT_LIGHTS\x20];\x0a\x0a\x09//\x20light\x20is\x20an\x20out\x20parameter\x20as\x20having\x20it\x20as\x20a\x20return\x20value\x20caused\x20compiler\x20errors\x20on\x20some\x20devices\x0a\x09void\x20getSpotLightInfo(\x20const\x20in\x20SpotLight\x20spotLight,\x20const\x20in\x20vec3\x20geometryPosition,\x20out\x20IncidentLight\x20light\x20)\x20{\x0a\x0a\x09\x09vec3\x20lVector\x20=\x20spotLight.position\x20-\x20geometryPosition;\x0a\x0a\x09\x09light.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x0a\x09\x09float\x20angleCos\x20=\x20dot(\x20light.direction,\x20spotLight.direction\x20);\x0a\x0a\x09\x09float\x20spotAttenuation\x20=\x20getSpotAttenuation(\x20spotLight.coneCos,\x20spotLight.penumbraCos,\x20angleCos\x20);\x0a\x0a\x09\x09if\x20(\x20spotAttenuation\x20>\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x0a\x09\x09\x09light.color\x20=\x20spotLight.color\x20*\x20spotAttenuation;\x0a\x09\x09\x09light.color\x20*=\x20getDistanceAttenuation(\x20lightDistance,\x20spotLight.distance,\x20spotLight.decay\x20);\x0a\x09\x09\x09light.visible\x20=\x20(\x20light.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09light.color\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09\x09light.visible\x20=\x20false;\x0a\x0a\x09\x09}\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0a\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x0a\x09struct\x20RectAreaLight\x20{\x0a\x09\x09vec3\x20color;\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20halfWidth;\x0a\x09\x09vec3\x20halfHeight;\x0a\x09};\x0a\x0a\x09//\x20Pre-computed\x20values\x20of\x20LinearTransformedCosine\x20approximation\x20of\x20BRDF\x0a\x09//\x20BRDF\x20approximation\x20Texture\x20is\x2064x64\x0a\x09uniform\x20sampler2D\x20ltc_1;\x20//\x20RGBA\x20Float\x0a\x09uniform\x20sampler2D\x20ltc_2;\x20//\x20RGBA\x20Float\x0a\x0a\x09uniform\x20RectAreaLight\x20rectAreaLights[\x20NUM_RECT_AREA_LIGHTS\x20];\x0a\x0a#endif\x0a\x0a\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x0a\x09struct\x20HemisphereLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20skyColor;\x0a\x09\x09vec3\x20groundColor;\x0a\x09};\x0a\x0a\x09uniform\x20HemisphereLight\x20hemisphereLights[\x20NUM_HEMI_LIGHTS\x20];\x0a\x0a\x09vec3\x20getHemisphereLightIrradiance(\x20const\x20in\x20HemisphereLight\x20hemiLight,\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20normal,\x20hemiLight.direction\x20);\x0a\x09\x09float\x20hemiDiffuseWeight\x20=\x200.5\x20*\x20dotNL\x20+\x200.5;\x0a\x0a\x09\x09vec3\x20irradiance\x20=\x20mix(\x20hemiLight.groundColor,\x20hemiLight.skyColor,\x20hemiDiffuseWeight\x20);\x0a\x0a\x09\x09return\x20irradiance;\x0a\x0a\x09}\x0a\x0a#endif\x0a','lights_toon_fragment':'\x0aToonMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb;\x0a','lights_toon_pars_fragment':'\x0avarying\x20vec3\x20vViewPosition;\x0a\x0astruct\x20ToonMaterial\x20{\x0a\x0a\x09vec3\x20diffuseColor;\x0a\x0a};\x0a\x0avoid\x20RE_Direct_Toon(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20ToonMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09vec3\x20irradiance\x20=\x20getGradientIrradiance(\x20geometryNormal,\x20directLight.direction\x20)\x20*\x20directLight.color;\x0a\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a\x0a}\x0a\x0avoid\x20RE_IndirectDiffuse_Toon(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20ToonMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a\x0a}\x0a\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_Toon\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_Toon\x0a','lights_phong_fragment':'\x0aBlinnPhongMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb;\x0amaterial.specularColor\x20=\x20specular;\x0amaterial.specularShininess\x20=\x20shininess;\x0amaterial.specularStrength\x20=\x20specularStrength;\x0a','lights_phong_pars_fragment':'\x0avarying\x20vec3\x20vViewPosition;\x0a\x0astruct\x20BlinnPhongMaterial\x20{\x0a\x0a\x09vec3\x20diffuseColor;\x0a\x09vec3\x20specularColor;\x0a\x09float\x20specularShininess;\x0a\x09float\x20specularStrength;\x0a\x0a};\x0a\x0avoid\x20RE_Direct_BlinnPhong(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometryNormal,\x20directLight.direction\x20)\x20);\x0a\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a\x0a\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_BlinnPhong(\x20directLight.direction,\x20geometryViewDir,\x20geometryNormal,\x20material.specularColor,\x20material.specularShininess\x20)\x20*\x20material.specularStrength;\x0a\x0a}\x0a\x0avoid\x20RE_IndirectDiffuse_BlinnPhong(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a\x0a}\x0a\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_BlinnPhong\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_BlinnPhong\x0a','lights_physical_fragment':'\x0aPhysicalMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb\x20*\x20(\x201.0\x20-\x20metalnessFactor\x20);\x0a\x0avec3\x20dxy\x20=\x20max(\x20abs(\x20dFdx(\x20nonPerturbedNormal\x20)\x20),\x20abs(\x20dFdy(\x20nonPerturbedNormal\x20)\x20)\x20);\x0afloat\x20geometryRoughness\x20=\x20max(\x20max(\x20dxy.x,\x20dxy.y\x20),\x20dxy.z\x20);\x0a\x0amaterial.roughness\x20=\x20max(\x20roughnessFactor,\x200.0525\x20);//\x200.0525\x20corresponds\x20to\x20the\x20base\x20mip\x20of\x20a\x20256\x20cubemap.\x0amaterial.roughness\x20+=\x20geometryRoughness;\x0amaterial.roughness\x20=\x20min(\x20material.roughness,\x201.0\x20);\x0a\x0a#ifdef\x20IOR\x0a\x0a\x09material.ior\x20=\x20ior;\x0a\x0a\x09#ifdef\x20USE_SPECULAR\x0a\x0a\x09\x09float\x20specularIntensityFactor\x20=\x20specularIntensity;\x0a\x09\x09vec3\x20specularColorFactor\x20=\x20specularColor;\x0a\x0a\x09\x09#ifdef\x20USE_SPECULAR_COLORMAP\x0a\x0a\x09\x09\x09specularColorFactor\x20*=\x20texture2D(\x20specularColorMap,\x20vSpecularColorMapUv\x20).rgb;\x0a\x0a\x09\x09#endif\x0a\x0a\x09\x09#ifdef\x20USE_SPECULAR_INTENSITYMAP\x0a\x0a\x09\x09\x09specularIntensityFactor\x20*=\x20texture2D(\x20specularIntensityMap,\x20vSpecularIntensityMapUv\x20).a;\x0a\x0a\x09\x09#endif\x0a\x0a\x09\x09material.specularF90\x20=\x20mix(\x20specularIntensityFactor,\x201.0,\x20metalnessFactor\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09float\x20specularIntensityFactor\x20=\x201.0;\x0a\x09\x09vec3\x20specularColorFactor\x20=\x20vec3(\x201.0\x20);\x0a\x09\x09material.specularF90\x20=\x201.0;\x0a\x0a\x09#endif\x0a\x0a\x09material.specularColor\x20=\x20mix(\x20min(\x20pow2(\x20(\x20material.ior\x20-\x201.0\x20)\x20/\x20(\x20material.ior\x20+\x201.0\x20)\x20)\x20*\x20specularColorFactor,\x20vec3(\x201.0\x20)\x20)\x20*\x20specularIntensityFactor,\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a\x0a#else\x0a\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x200.04\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a\x09material.specularF90\x20=\x201.0;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09material.clearcoat\x20=\x20clearcoat;\x0a\x09material.clearcoatRoughness\x20=\x20clearcoatRoughness;\x0a\x09material.clearcoatF0\x20=\x20vec3(\x200.04\x20);\x0a\x09material.clearcoatF90\x20=\x201.0;\x0a\x0a\x09#ifdef\x20USE_CLEARCOATMAP\x0a\x0a\x09\x09material.clearcoat\x20*=\x20texture2D(\x20clearcoatMap,\x20vClearcoatMapUv\x20).x;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_CLEARCOAT_ROUGHNESSMAP\x0a\x0a\x09\x09material.clearcoatRoughness\x20*=\x20texture2D(\x20clearcoatRoughnessMap,\x20vClearcoatRoughnessMapUv\x20).y;\x0a\x0a\x09#endif\x0a\x0a\x09material.clearcoat\x20=\x20saturate(\x20material.clearcoat\x20);\x20//\x20Burley\x20clearcoat\x20model\x0a\x09material.clearcoatRoughness\x20=\x20max(\x20material.clearcoatRoughness,\x200.0525\x20);\x0a\x09material.clearcoatRoughness\x20+=\x20geometryRoughness;\x0a\x09material.clearcoatRoughness\x20=\x20min(\x20material.clearcoatRoughness,\x201.0\x20);\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_IRIDESCENCE\x0a\x0a\x09material.iridescence\x20=\x20iridescence;\x0a\x09material.iridescenceIOR\x20=\x20iridescenceIOR;\x0a\x0a\x09#ifdef\x20USE_IRIDESCENCEMAP\x0a\x0a\x09\x09material.iridescence\x20*=\x20texture2D(\x20iridescenceMap,\x20vIridescenceMapUv\x20).r;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_IRIDESCENCE_THICKNESSMAP\x0a\x0a\x09\x09material.iridescenceThickness\x20=\x20(iridescenceThicknessMaximum\x20-\x20iridescenceThicknessMinimum)\x20*\x20texture2D(\x20iridescenceThicknessMap,\x20vIridescenceThicknessMapUv\x20).g\x20+\x20iridescenceThicknessMinimum;\x0a\x0a\x09#else\x0a\x0a\x09\x09material.iridescenceThickness\x20=\x20iridescenceThicknessMaximum;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_SHEEN\x0a\x0a\x09material.sheenColor\x20=\x20sheenColor;\x0a\x0a\x09#ifdef\x20USE_SHEEN_COLORMAP\x0a\x0a\x09\x09material.sheenColor\x20*=\x20texture2D(\x20sheenColorMap,\x20vSheenColorMapUv\x20).rgb;\x0a\x0a\x09#endif\x0a\x0a\x09material.sheenRoughness\x20=\x20clamp(\x20sheenRoughness,\x200.07,\x201.0\x20);\x0a\x0a\x09#ifdef\x20USE_SHEEN_ROUGHNESSMAP\x0a\x0a\x09\x09material.sheenRoughness\x20*=\x20texture2D(\x20sheenRoughnessMap,\x20vSheenRoughnessMapUv\x20).a;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_ANISOTROPY\x0a\x0a\x09#ifdef\x20USE_ANISOTROPYMAP\x0a\x0a\x09\x09mat2\x20anisotropyMat\x20=\x20mat2(\x20anisotropyVector.x,\x20anisotropyVector.y,\x20-\x20anisotropyVector.y,\x20anisotropyVector.x\x20);\x0a\x09\x09vec3\x20anisotropyPolar\x20=\x20texture2D(\x20anisotropyMap,\x20vAnisotropyMapUv\x20).rgb;\x0a\x09\x09vec2\x20anisotropyV\x20=\x20anisotropyMat\x20*\x20normalize(\x202.0\x20*\x20anisotropyPolar.rg\x20-\x20vec2(\x201.0\x20)\x20)\x20*\x20anisotropyPolar.b;\x0a\x0a\x09#else\x0a\x0a\x09\x09vec2\x20anisotropyV\x20=\x20anisotropyVector;\x0a\x0a\x09#endif\x0a\x0a\x09material.anisotropy\x20=\x20length(\x20anisotropyV\x20);\x0a\x0a\x09if(\x20material.anisotropy\x20==\x200.0\x20)\x20{\x0a\x09\x09anisotropyV\x20=\x20vec2(\x201.0,\x200.0\x20);\x0a\x09}\x20else\x20{\x0a\x09\x09anisotropyV\x20/=\x20material.anisotropy;\x0a\x09\x09material.anisotropy\x20=\x20saturate(\x20material.anisotropy\x20);\x0a\x09}\x0a\x0a\x09//\x20Roughness\x20along\x20the\x20anisotropy\x20bitangent\x20is\x20the\x20material\x20roughness,\x20while\x20the\x20tangent\x20roughness\x20increases\x20with\x20anisotropy.\x0a\x09material.alphaT\x20=\x20mix(\x20pow2(\x20material.roughness\x20),\x201.0,\x20pow2(\x20material.anisotropy\x20)\x20);\x0a\x0a\x09material.anisotropyT\x20=\x20tbn[\x200\x20]\x20*\x20anisotropyV.x\x20+\x20tbn[\x201\x20]\x20*\x20anisotropyV.y;\x0a\x09material.anisotropyB\x20=\x20tbn[\x201\x20]\x20*\x20anisotropyV.x\x20-\x20tbn[\x200\x20]\x20*\x20anisotropyV.y;\x0a\x0a#endif\x0a','lights_physical_pars_fragment':'\x0a\x0astruct\x20PhysicalMaterial\x20{\x0a\x0a\x09vec3\x20diffuseColor;\x0a\x09float\x20roughness;\x0a\x09vec3\x20specularColor;\x0a\x09float\x20specularF90;\x0a\x0a\x09#ifdef\x20USE_CLEARCOAT\x0a\x09\x09float\x20clearcoat;\x0a\x09\x09float\x20clearcoatRoughness;\x0a\x09\x09vec3\x20clearcoatF0;\x0a\x09\x09float\x20clearcoatF90;\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_IRIDESCENCE\x0a\x09\x09float\x20iridescence;\x0a\x09\x09float\x20iridescenceIOR;\x0a\x09\x09float\x20iridescenceThickness;\x0a\x09\x09vec3\x20iridescenceFresnel;\x0a\x09\x09vec3\x20iridescenceF0;\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_SHEEN\x0a\x09\x09vec3\x20sheenColor;\x0a\x09\x09float\x20sheenRoughness;\x0a\x09#endif\x0a\x0a\x09#ifdef\x20IOR\x0a\x09\x09float\x20ior;\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_TRANSMISSION\x0a\x09\x09float\x20transmission;\x0a\x09\x09float\x20transmissionAlpha;\x0a\x09\x09float\x20thickness;\x0a\x09\x09float\x20attenuationDistance;\x0a\x09\x09vec3\x20attenuationColor;\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_ANISOTROPY\x0a\x09\x09float\x20anisotropy;\x0a\x09\x09float\x20alphaT;\x0a\x09\x09vec3\x20anisotropyT;\x0a\x09\x09vec3\x20anisotropyB;\x0a\x09#endif\x0a\x0a};\x0a\x0a//\x20temporary\x0avec3\x20clearcoatSpecularDirect\x20=\x20vec3(\x200.0\x20);\x0avec3\x20clearcoatSpecularIndirect\x20=\x20vec3(\x200.0\x20);\x0avec3\x20sheenSpecularDirect\x20=\x20vec3(\x200.0\x20);\x0avec3\x20sheenSpecularIndirect\x20=\x20vec3(0.0\x20);\x0a\x0avec3\x20Schlick_to_F0(\x20const\x20in\x20vec3\x20f,\x20const\x20in\x20float\x20f90,\x20const\x20in\x20float\x20dotVH\x20)\x20{\x0a\x20\x20\x20\x20float\x20x\x20=\x20clamp(\x201.0\x20-\x20dotVH,\x200.0,\x201.0\x20);\x0a\x20\x20\x20\x20float\x20x2\x20=\x20x\x20*\x20x;\x0a\x20\x20\x20\x20float\x20x5\x20=\x20clamp(\x20x\x20*\x20x2\x20*\x20x2,\x200.0,\x200.9999\x20);\x0a\x0a\x20\x20\x20\x20return\x20(\x20f\x20-\x20vec3(\x20f90\x20)\x20*\x20x5\x20)\x20/\x20(\x201.0\x20-\x20x5\x20);\x0a}\x0a\x0a//\x20Moving\x20Frostbite\x20to\x20Physically\x20Based\x20Rendering\x203.0\x20-\x20page\x2012,\x20listing\x202\x0a//\x20https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\x0afloat\x20V_GGX_SmithCorrelated(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x0a\x09float\x20gv\x20=\x20dotNL\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09float\x20gl\x20=\x20dotNV\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x0a\x09return\x200.5\x20/\x20max(\x20gv\x20+\x20gl,\x20EPSILON\x20);\x0a\x0a}\x0a\x0a//\x20Microfacet\x20Models\x20for\x20Refraction\x20through\x20Rough\x20Surfaces\x20-\x20equation\x20(33)\x0a//\x20http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\x0a//\x20alpha\x20is\x20\x22roughness\x20squared\x22\x20in\x20Disney’s\x20reparameterization\x0afloat\x20D_GGX(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x0a\x09float\x20denom\x20=\x20pow2(\x20dotNH\x20)\x20*\x20(\x20a2\x20-\x201.0\x20)\x20+\x201.0;\x20//\x20avoid\x20alpha\x20=\x200\x20with\x20dotNH\x20=\x201\x0a\x0a\x09return\x20RECIPROCAL_PI\x20*\x20a2\x20/\x20pow2(\x20denom\x20);\x0a\x0a}\x0a\x0a//\x20https://google.github.io/filament/Filament.md.html#materialsystem/anisotropicmodel/anisotropicspecularbrdf\x0a#ifdef\x20USE_ANISOTROPY\x0a\x0a\x09float\x20V_GGX_SmithCorrelated_Anisotropic(\x20const\x20in\x20float\x20alphaT,\x20const\x20in\x20float\x20alphaB,\x20const\x20in\x20float\x20dotTV,\x20const\x20in\x20float\x20dotBV,\x20const\x20in\x20float\x20dotTL,\x20const\x20in\x20float\x20dotBL,\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20dotNL\x20)\x20{\x0a\x0a\x09\x09float\x20gv\x20=\x20dotNL\x20*\x20length(\x20vec3(\x20alphaT\x20*\x20dotTV,\x20alphaB\x20*\x20dotBV,\x20dotNV\x20)\x20);\x0a\x09\x09float\x20gl\x20=\x20dotNV\x20*\x20length(\x20vec3(\x20alphaT\x20*\x20dotTL,\x20alphaB\x20*\x20dotBL,\x20dotNL\x20)\x20);\x0a\x09\x09float\x20v\x20=\x200.5\x20/\x20(\x20gv\x20+\x20gl\x20);\x0a\x0a\x09\x09return\x20saturate(v);\x0a\x0a\x09}\x0a\x0a\x09float\x20D_GGX_Anisotropic(\x20const\x20in\x20float\x20alphaT,\x20const\x20in\x20float\x20alphaB,\x20const\x20in\x20float\x20dotNH,\x20const\x20in\x20float\x20dotTH,\x20const\x20in\x20float\x20dotBH\x20)\x20{\x0a\x0a\x09\x09float\x20a2\x20=\x20alphaT\x20*\x20alphaB;\x0a\x09\x09highp\x20vec3\x20v\x20=\x20vec3(\x20alphaB\x20*\x20dotTH,\x20alphaT\x20*\x20dotBH,\x20a2\x20*\x20dotNH\x20);\x0a\x09\x09highp\x20float\x20v2\x20=\x20dot(\x20v,\x20v\x20);\x0a\x09\x09float\x20w2\x20=\x20a2\x20/\x20v2;\x0a\x0a\x09\x09return\x20RECIPROCAL_PI\x20*\x20a2\x20*\x20pow2\x20(\x20w2\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09//\x20GGX\x20Distribution,\x20Schlick\x20Fresnel,\x20GGX_SmithCorrelated\x20Visibility\x0a\x09vec3\x20BRDF_GGX_Clearcoat(\x20const\x20in\x20vec3\x20lightDir,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20PhysicalMaterial\x20material)\x20{\x0a\x0a\x09\x09vec3\x20f0\x20=\x20material.clearcoatF0;\x0a\x09\x09float\x20f90\x20=\x20material.clearcoatF90;\x0a\x09\x09float\x20roughness\x20=\x20material.clearcoatRoughness;\x0a\x0a\x09\x09float\x20alpha\x20=\x20pow2(\x20roughness\x20);\x20//\x20UE4\x27s\x20roughness\x0a\x0a\x09\x09vec3\x20halfDir\x20=\x20normalize(\x20lightDir\x20+\x20viewDir\x20);\x0a\x0a\x09\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20normal,\x20lightDir\x20)\x20);\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20normal,\x20viewDir\x20)\x20);\x0a\x09\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20normal,\x20halfDir\x20)\x20);\x0a\x09\x09float\x20dotVH\x20=\x20saturate(\x20dot(\x20viewDir,\x20halfDir\x20)\x20);\x0a\x0a\x09\x09vec3\x20F\x20=\x20F_Schlick(\x20f0,\x20f90,\x20dotVH\x20);\x0a\x0a\x09\x09float\x20V\x20=\x20V_GGX_SmithCorrelated(\x20alpha,\x20dotNL,\x20dotNV\x20);\x0a\x0a\x09\x09float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x0a\x09\x09return\x20F\x20*\x20(\x20V\x20*\x20D\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0avec3\x20BRDF_GGX(\x20const\x20in\x20vec3\x20lightDir,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20PhysicalMaterial\x20material\x20)\x20{\x0a\x0a\x09vec3\x20f0\x20=\x20material.specularColor;\x0a\x09float\x20f90\x20=\x20material.specularF90;\x0a\x09float\x20roughness\x20=\x20material.roughness;\x0a\x0a\x09float\x20alpha\x20=\x20pow2(\x20roughness\x20);\x20//\x20UE4\x27s\x20roughness\x0a\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20lightDir\x20+\x20viewDir\x20);\x0a\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20normal,\x20lightDir\x20)\x20);\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20normal,\x20viewDir\x20)\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotVH\x20=\x20saturate(\x20dot(\x20viewDir,\x20halfDir\x20)\x20);\x0a\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20f0,\x20f90,\x20dotVH\x20);\x0a\x0a\x09#ifdef\x20USE_IRIDESCENCE\x0a\x0a\x09\x09F\x20=\x20mix(\x20F,\x20material.iridescenceFresnel,\x20material.iridescence\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_ANISOTROPY\x0a\x0a\x09\x09float\x20dotTL\x20=\x20dot(\x20material.anisotropyT,\x20lightDir\x20);\x0a\x09\x09float\x20dotTV\x20=\x20dot(\x20material.anisotropyT,\x20viewDir\x20);\x0a\x09\x09float\x20dotTH\x20=\x20dot(\x20material.anisotropyT,\x20halfDir\x20);\x0a\x09\x09float\x20dotBL\x20=\x20dot(\x20material.anisotropyB,\x20lightDir\x20);\x0a\x09\x09float\x20dotBV\x20=\x20dot(\x20material.anisotropyB,\x20viewDir\x20);\x0a\x09\x09float\x20dotBH\x20=\x20dot(\x20material.anisotropyB,\x20halfDir\x20);\x0a\x0a\x09\x09float\x20V\x20=\x20V_GGX_SmithCorrelated_Anisotropic(\x20material.alphaT,\x20alpha,\x20dotTV,\x20dotBV,\x20dotTL,\x20dotBL,\x20dotNV,\x20dotNL\x20);\x0a\x0a\x09\x09float\x20D\x20=\x20D_GGX_Anisotropic(\x20material.alphaT,\x20alpha,\x20dotNH,\x20dotTH,\x20dotBH\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09float\x20V\x20=\x20V_GGX_SmithCorrelated(\x20alpha,\x20dotNL,\x20dotNV\x20);\x0a\x0a\x09\x09float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x0a\x09#endif\x0a\x0a\x09return\x20F\x20*\x20(\x20V\x20*\x20D\x20);\x0a\x0a}\x0a\x0a//\x20Rect\x20Area\x20Light\x0a\x0a//\x20Real-Time\x20Polygonal-Light\x20Shading\x20with\x20Linearly\x20Transformed\x20Cosines\x0a//\x20by\x20Eric\x20Heitz,\x20Jonathan\x20Dupuy,\x20Stephen\x20Hill\x20and\x20David\x20Neubelt\x0a//\x20code:\x20https://github.com/selfshadow/ltc_code/\x0a\x0avec2\x20LTC_Uv(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x0a\x09const\x20float\x20LUT_SIZE\x20=\x2064.0;\x0a\x09const\x20float\x20LUT_SCALE\x20=\x20(\x20LUT_SIZE\x20-\x201.0\x20)\x20/\x20LUT_SIZE;\x0a\x09const\x20float\x20LUT_BIAS\x20=\x200.5\x20/\x20LUT_SIZE;\x0a\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20N,\x20V\x20)\x20);\x0a\x0a\x09//\x20texture\x20parameterized\x20by\x20sqrt(\x20GGX\x20alpha\x20)\x20and\x20sqrt(\x201\x20-\x20cos(\x20theta\x20)\x20)\x0a\x09vec2\x20uv\x20=\x20vec2(\x20roughness,\x20sqrt(\x201.0\x20-\x20dotNV\x20)\x20);\x0a\x0a\x09uv\x20=\x20uv\x20*\x20LUT_SCALE\x20+\x20LUT_BIAS;\x0a\x0a\x09return\x20uv;\x0a\x0a}\x0a\x0afloat\x20LTC_ClippedSphereFormFactor(\x20const\x20in\x20vec3\x20f\x20)\x20{\x0a\x0a\x09//\x20Real-Time\x20Area\x20Lighting:\x20a\x20Journey\x20from\x20Research\x20to\x20Production\x20(p.102)\x0a\x09//\x20An\x20approximation\x20of\x20the\x20form\x20factor\x20of\x20a\x20horizon-clipped\x20rectangle.\x0a\x0a\x09float\x20l\x20=\x20length(\x20f\x20);\x0a\x0a\x09return\x20max(\x20(\x20l\x20*\x20l\x20+\x20f.z\x20)\x20/\x20(\x20l\x20+\x201.0\x20),\x200.0\x20);\x0a\x0a}\x0a\x0avec3\x20LTC_EdgeVectorFormFactor(\x20const\x20in\x20vec3\x20v1,\x20const\x20in\x20vec3\x20v2\x20)\x20{\x0a\x0a\x09float\x20x\x20=\x20dot(\x20v1,\x20v2\x20);\x0a\x0a\x09float\x20y\x20=\x20abs(\x20x\x20);\x0a\x0a\x09//\x20rational\x20polynomial\x20approximation\x20to\x20theta\x20/\x20sin(\x20theta\x20)\x20/\x202PI\x0a\x09float\x20a\x20=\x200.8543985\x20+\x20(\x200.4965155\x20+\x200.0145206\x20*\x20y\x20)\x20*\x20y;\x0a\x09float\x20b\x20=\x203.4175940\x20+\x20(\x204.1616724\x20+\x20y\x20)\x20*\x20y;\x0a\x09float\x20v\x20=\x20a\x20/\x20b;\x0a\x0a\x09float\x20theta_sintheta\x20=\x20(\x20x\x20>\x200.0\x20)\x20?\x20v\x20:\x200.5\x20*\x20inversesqrt(\x20max(\x201.0\x20-\x20x\x20*\x20x,\x201e-7\x20)\x20)\x20-\x20v;\x0a\x0a\x09return\x20cross(\x20v1,\x20v2\x20)\x20*\x20theta_sintheta;\x0a\x0a}\x0a\x0avec3\x20LTC_Evaluate(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20vec3\x20P,\x20const\x20in\x20mat3\x20mInv,\x20const\x20in\x20vec3\x20rectCoords[\x204\x20]\x20)\x20{\x0a\x0a\x09//\x20bail\x20if\x20point\x20is\x20on\x20back\x20side\x20of\x20plane\x20of\x20light\x0a\x09//\x20assumes\x20ccw\x20winding\x20order\x20of\x20light\x20vertices\x0a\x09vec3\x20v1\x20=\x20rectCoords[\x201\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20v2\x20=\x20rectCoords[\x203\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20lightNormal\x20=\x20cross(\x20v1,\x20v2\x20);\x0a\x0a\x09if(\x20dot(\x20lightNormal,\x20P\x20-\x20rectCoords[\x200\x20]\x20)\x20<\x200.0\x20)\x20return\x20vec3(\x200.0\x20);\x0a\x0a\x09//\x20construct\x20orthonormal\x20basis\x20around\x20N\x0a\x09vec3\x20T1,\x20T2;\x0a\x09T1\x20=\x20normalize(\x20V\x20-\x20N\x20*\x20dot(\x20V,\x20N\x20)\x20);\x0a\x09T2\x20=\x20-\x20cross(\x20N,\x20T1\x20);\x20//\x20negated\x20from\x20paper;\x20possibly\x20due\x20to\x20a\x20different\x20handedness\x20of\x20world\x20coordinate\x20system\x0a\x0a\x09//\x20compute\x20transform\x0a\x09mat3\x20mat\x20=\x20mInv\x20*\x20transposeMat3(\x20mat3(\x20T1,\x20T2,\x20N\x20)\x20);\x0a\x0a\x09//\x20transform\x20rect\x0a\x09vec3\x20coords[\x204\x20];\x0a\x09coords[\x200\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x200\x20]\x20-\x20P\x20);\x0a\x09coords[\x201\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x201\x20]\x20-\x20P\x20);\x0a\x09coords[\x202\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x202\x20]\x20-\x20P\x20);\x0a\x09coords[\x203\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x203\x20]\x20-\x20P\x20);\x0a\x0a\x09//\x20project\x20rect\x20onto\x20sphere\x0a\x09coords[\x200\x20]\x20=\x20normalize(\x20coords[\x200\x20]\x20);\x0a\x09coords[\x201\x20]\x20=\x20normalize(\x20coords[\x201\x20]\x20);\x0a\x09coords[\x202\x20]\x20=\x20normalize(\x20coords[\x202\x20]\x20);\x0a\x09coords[\x203\x20]\x20=\x20normalize(\x20coords[\x203\x20]\x20);\x0a\x0a\x09//\x20calculate\x20vector\x20form\x20factor\x0a\x09vec3\x20vectorFormFactor\x20=\x20vec3(\x200.0\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x200\x20],\x20coords[\x201\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x201\x20],\x20coords[\x202\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x202\x20],\x20coords[\x203\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x203\x20],\x20coords[\x200\x20]\x20);\x0a\x0a\x09//\x20adjust\x20for\x20horizon\x20clipping\x0a\x09float\x20result\x20=\x20LTC_ClippedSphereFormFactor(\x20vectorFormFactor\x20);\x0a\x0a/*\x0a\x09//\x20alternate\x20method\x20of\x20adjusting\x20for\x20horizon\x20clipping\x20(see\x20referece)\x0a\x09//\x20refactoring\x20required\x0a\x09float\x20len\x20=\x20length(\x20vectorFormFactor\x20);\x0a\x09float\x20z\x20=\x20vectorFormFactor.z\x20/\x20len;\x0a\x0a\x09const\x20float\x20LUT_SIZE\x20=\x2064.0;\x0a\x09const\x20float\x20LUT_SCALE\x20=\x20(\x20LUT_SIZE\x20-\x201.0\x20)\x20/\x20LUT_SIZE;\x0a\x09const\x20float\x20LUT_BIAS\x20=\x200.5\x20/\x20LUT_SIZE;\x0a\x0a\x09//\x20tabulated\x20horizon-clipped\x20sphere,\x20apparently...\x0a\x09vec2\x20uv\x20=\x20vec2(\x20z\x20*\x200.5\x20+\x200.5,\x20len\x20);\x0a\x09uv\x20=\x20uv\x20*\x20LUT_SCALE\x20+\x20LUT_BIAS;\x0a\x0a\x09float\x20scale\x20=\x20texture2D(\x20ltc_2,\x20uv\x20).w;\x0a\x0a\x09float\x20result\x20=\x20len\x20*\x20scale;\x0a*/\x0a\x0a\x09return\x20vec3(\x20result\x20);\x0a\x0a}\x0a\x0a//\x20End\x20Rect\x20Area\x20Light\x0a\x0a#if\x20defined(\x20USE_SHEEN\x20)\x0a\x0a//\x20https://github.com/google/filament/blob/master/shaders/src/brdf.fs\x0afloat\x20D_Charlie(\x20float\x20roughness,\x20float\x20dotNH\x20)\x20{\x0a\x0a\x09float\x20alpha\x20=\x20pow2(\x20roughness\x20);\x0a\x0a\x09//\x20Estevez\x20and\x20Kulla\x202017,\x20\x22Production\x20Friendly\x20Microfacet\x20Sheen\x20BRDF\x22\x0a\x09float\x20invAlpha\x20=\x201.0\x20/\x20alpha;\x0a\x09float\x20cos2h\x20=\x20dotNH\x20*\x20dotNH;\x0a\x09float\x20sin2h\x20=\x20max(\x201.0\x20-\x20cos2h,\x200.0078125\x20);\x20//\x202^(-14/2),\x20so\x20sin2h^2\x20>\x200\x20in\x20fp16\x0a\x0a\x09return\x20(\x202.0\x20+\x20invAlpha\x20)\x20*\x20pow(\x20sin2h,\x20invAlpha\x20*\x200.5\x20)\x20/\x20(\x202.0\x20*\x20PI\x20);\x0a\x0a}\x0a\x0a//\x20https://github.com/google/filament/blob/master/shaders/src/brdf.fs\x0afloat\x20V_Neubelt(\x20float\x20dotNV,\x20float\x20dotNL\x20)\x20{\x0a\x0a\x09//\x20Neubelt\x20and\x20Pettineo\x202013,\x20\x22Crafting\x20a\x20Next-gen\x20Material\x20Pipeline\x20for\x20The\x20Order:\x201886\x22\x0a\x09return\x20saturate(\x201.0\x20/\x20(\x204.0\x20*\x20(\x20dotNL\x20+\x20dotNV\x20-\x20dotNL\x20*\x20dotNV\x20)\x20)\x20);\x0a\x0a}\x0a\x0avec3\x20BRDF_Sheen(\x20const\x20in\x20vec3\x20lightDir,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20vec3\x20sheenColor,\x20const\x20in\x20float\x20sheenRoughness\x20)\x20{\x0a\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20lightDir\x20+\x20viewDir\x20);\x0a\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20normal,\x20lightDir\x20)\x20);\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20normal,\x20viewDir\x20)\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20normal,\x20halfDir\x20)\x20);\x0a\x0a\x09float\x20D\x20=\x20D_Charlie(\x20sheenRoughness,\x20dotNH\x20);\x0a\x09float\x20V\x20=\x20V_Neubelt(\x20dotNV,\x20dotNL\x20);\x0a\x0a\x09return\x20sheenColor\x20*\x20(\x20D\x20*\x20V\x20);\x0a\x0a}\x0a\x0a#endif\x0a\x0a//\x20This\x20is\x20a\x20curve-fit\x20approxmation\x20to\x20the\x20\x22Charlie\x20sheen\x22\x20BRDF\x20integrated\x20over\x20the\x20hemisphere\x20from\x20\x0a//\x20Estevez\x20and\x20Kulla\x202017,\x20\x22Production\x20Friendly\x20Microfacet\x20Sheen\x20BRDF\x22.\x20The\x20analysis\x20can\x20be\x20found\x0a//\x20in\x20the\x20Sheen\x20section\x20of\x20https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\x0afloat\x20IBLSheenBRDF(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20normal,\x20viewDir\x20)\x20);\x0a\x0a\x09float\x20r2\x20=\x20roughness\x20*\x20roughness;\x0a\x0a\x09float\x20a\x20=\x20roughness\x20<\x200.25\x20?\x20-339.2\x20*\x20r2\x20+\x20161.4\x20*\x20roughness\x20-\x2025.9\x20:\x20-8.48\x20*\x20r2\x20+\x2014.3\x20*\x20roughness\x20-\x209.95;\x0a\x0a\x09float\x20b\x20=\x20roughness\x20<\x200.25\x20?\x2044.0\x20*\x20r2\x20-\x2023.7\x20*\x20roughness\x20+\x203.26\x20:\x201.97\x20*\x20r2\x20-\x203.27\x20*\x20roughness\x20+\x200.72;\x0a\x0a\x09float\x20DG\x20=\x20exp(\x20a\x20*\x20dotNV\x20+\x20b\x20)\x20+\x20(\x20roughness\x20<\x200.25\x20?\x200.0\x20:\x200.1\x20*\x20(\x20roughness\x20-\x200.25\x20)\x20);\x0a\x0a\x09return\x20saturate(\x20DG\x20*\x20RECIPROCAL_PI\x20);\x0a\x0a}\x0a\x0a//\x20Analytical\x20approximation\x20of\x20the\x20DFG\x20LUT,\x20one\x20half\x20of\x20the\x0a//\x20split-sum\x20approximation\x20used\x20in\x20indirect\x20specular\x20lighting.\x0a//\x20via\x20\x27environmentBRDF\x27\x20from\x20\x22Physically\x20Based\x20Shading\x20on\x20Mobile\x22\x0a//\x20https://www.unrealengine.com/blog/physically-based-shading-on-mobile\x0avec2\x20DFGApprox(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20normal,\x20viewDir\x20)\x20);\x0a\x0a\x09const\x20vec4\x20c0\x20=\x20vec4(\x20-\x201,\x20-\x200.0275,\x20-\x200.572,\x200.022\x20);\x0a\x0a\x09const\x20vec4\x20c1\x20=\x20vec4(\x201,\x200.0425,\x201.04,\x20-\x200.04\x20);\x0a\x0a\x09vec4\x20r\x20=\x20roughness\x20*\x20c0\x20+\x20c1;\x0a\x0a\x09float\x20a004\x20=\x20min(\x20r.x\x20*\x20r.x,\x20exp2(\x20-\x209.28\x20*\x20dotNV\x20)\x20)\x20*\x20r.x\x20+\x20r.y;\x0a\x0a\x09vec2\x20fab\x20=\x20vec2(\x20-\x201.04,\x201.04\x20)\x20*\x20a004\x20+\x20r.zw;\x0a\x0a\x09return\x20fab;\x0a\x0a}\x0a\x0avec3\x20EnvironmentBRDF(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20specularF90,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x0a\x09vec2\x20fab\x20=\x20DFGApprox(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x0a\x09return\x20specularColor\x20*\x20fab.x\x20+\x20specularF90\x20*\x20fab.y;\x0a\x0a}\x0a\x0a//\x20Fdez-Agüera\x27s\x20\x22Multiple-Scattering\x20Microfacet\x20Model\x20for\x20Real-Time\x20Image\x20Based\x20Lighting\x22\x0a//\x20Approximates\x20multiscattering\x20in\x20order\x20to\x20preserve\x20energy.\x0a//\x20http://www.jcgt.org/published/0008/01/03/\x0a#ifdef\x20USE_IRIDESCENCE\x0avoid\x20computeMultiscatteringIridescence(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20specularF90,\x20const\x20in\x20float\x20iridescence,\x20const\x20in\x20vec3\x20iridescenceF0,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a#else\x0avoid\x20computeMultiscattering(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20specularF90,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a#endif\x0a\x0a\x09vec2\x20fab\x20=\x20DFGApprox(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x0a\x09#ifdef\x20USE_IRIDESCENCE\x0a\x0a\x09\x09vec3\x20Fr\x20=\x20mix(\x20specularColor,\x20iridescenceF0,\x20iridescence\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09vec3\x20Fr\x20=\x20specularColor;\x0a\x0a\x09#endif\x0a\x0a\x09vec3\x20FssEss\x20=\x20Fr\x20*\x20fab.x\x20+\x20specularF90\x20*\x20fab.y;\x0a\x0a\x09float\x20Ess\x20=\x20fab.x\x20+\x20fab.y;\x0a\x09float\x20Ems\x20=\x201.0\x20-\x20Ess;\x0a\x0a\x09vec3\x20Favg\x20=\x20Fr\x20+\x20(\x201.0\x20-\x20Fr\x20)\x20*\x200.047619;\x20//\x201/21\x0a\x09vec3\x20Fms\x20=\x20FssEss\x20*\x20Favg\x20/\x20(\x201.0\x20-\x20Ems\x20*\x20Favg\x20);\x0a\x0a\x09singleScatter\x20+=\x20FssEss;\x0a\x09multiScatter\x20+=\x20Fms\x20*\x20Ems;\x0a\x0a}\x0a\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x0a\x09void\x20RE_Direct_RectArea_Physical(\x20const\x20in\x20RectAreaLight\x20rectAreaLight,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09\x09vec3\x20normal\x20=\x20geometryNormal;\x0a\x09\x09vec3\x20viewDir\x20=\x20geometryViewDir;\x0a\x09\x09vec3\x20position\x20=\x20geometryPosition;\x0a\x09\x09vec3\x20lightPos\x20=\x20rectAreaLight.position;\x0a\x09\x09vec3\x20halfWidth\x20=\x20rectAreaLight.halfWidth;\x0a\x09\x09vec3\x20halfHeight\x20=\x20rectAreaLight.halfHeight;\x0a\x09\x09vec3\x20lightColor\x20=\x20rectAreaLight.color;\x0a\x09\x09float\x20roughness\x20=\x20material.roughness;\x0a\x0a\x09\x09vec3\x20rectCoords[\x204\x20];\x0a\x09\x09rectCoords[\x200\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20-\x20halfHeight;\x20//\x20counterclockwise;\x20light\x20shines\x20in\x20local\x20neg\x20z\x20direction\x0a\x09\x09rectCoords[\x201\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20-\x20halfHeight;\x0a\x09\x09rectCoords[\x202\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09rectCoords[\x203\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20+\x20halfHeight;\x0a\x0a\x09\x09vec2\x20uv\x20=\x20LTC_Uv(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x0a\x09\x09vec4\x20t1\x20=\x20texture2D(\x20ltc_1,\x20uv\x20);\x0a\x09\x09vec4\x20t2\x20=\x20texture2D(\x20ltc_2,\x20uv\x20);\x0a\x0a\x09\x09mat3\x20mInv\x20=\x20mat3(\x0a\x09\x09\x09vec3(\x20t1.x,\x200,\x20t1.y\x20),\x0a\x09\x09\x09vec3(\x20\x20\x20\x200,\x201,\x20\x20\x20\x200\x20),\x0a\x09\x09\x09vec3(\x20t1.z,\x200,\x20t1.w\x20)\x0a\x09\x09);\x0a\x0a\x09\x09//\x20LTC\x20Fresnel\x20Approximation\x20by\x20Stephen\x20Hill\x0a\x09\x09//\x20http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\x0a\x09\x09vec3\x20fresnel\x20=\x20(\x20material.specularColor\x20*\x20t2.x\x20+\x20(\x20vec3(\x201.0\x20)\x20-\x20material.specularColor\x20)\x20*\x20t2.y\x20);\x0a\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20lightColor\x20*\x20fresnel\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mInv,\x20rectCoords\x20);\x0a\x0a\x09\x09reflectedLight.directDiffuse\x20+=\x20lightColor\x20*\x20material.diffuseColor\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mat3(\x201.0\x20),\x20rectCoords\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0avoid\x20RE_Direct_Physical(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometryNormal,\x20directLight.direction\x20)\x20);\x0a\x0a\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x0a\x09#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09\x09float\x20dotNLcc\x20=\x20saturate(\x20dot(\x20geometryClearcoatNormal,\x20directLight.direction\x20)\x20);\x0a\x0a\x09\x09vec3\x20ccIrradiance\x20=\x20dotNLcc\x20*\x20directLight.color;\x0a\x0a\x09\x09clearcoatSpecularDirect\x20+=\x20ccIrradiance\x20*\x20BRDF_GGX_Clearcoat(\x20directLight.direction,\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_SHEEN\x0a\x0a\x09\x09sheenSpecularDirect\x20+=\x20irradiance\x20*\x20BRDF_Sheen(\x20directLight.direction,\x20geometryViewDir,\x20geometryNormal,\x20material.sheenColor,\x20material.sheenRoughness\x20);\x0a\x0a\x09#endif\x0a\x0a\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_GGX(\x20directLight.direction,\x20geometryViewDir,\x20geometryNormal,\x20material\x20);\x0a\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a}\x0a\x0avoid\x20RE_IndirectDiffuse_Physical(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Lambert(\x20material.diffuseColor\x20);\x0a\x0a}\x0a\x0avoid\x20RE_IndirectSpecular_Physical(\x20const\x20in\x20vec3\x20radiance,\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20clearcoatRadiance,\x20const\x20in\x20vec3\x20geometryPosition,\x20const\x20in\x20vec3\x20geometryNormal,\x20const\x20in\x20vec3\x20geometryViewDir,\x20const\x20in\x20vec3\x20geometryClearcoatNormal,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight)\x20{\x0a\x0a\x09#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09\x09clearcoatSpecularIndirect\x20+=\x20clearcoatRadiance\x20*\x20EnvironmentBRDF(\x20geometryClearcoatNormal,\x20geometryViewDir,\x20material.clearcoatF0,\x20material.clearcoatF90,\x20material.clearcoatRoughness\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_SHEEN\x0a\x0a\x09\x09sheenSpecularIndirect\x20+=\x20irradiance\x20*\x20material.sheenColor\x20*\x20IBLSheenBRDF(\x20geometryNormal,\x20geometryViewDir,\x20material.sheenRoughness\x20);\x0a\x0a\x09#endif\x0a\x0a\x09//\x20Both\x20indirect\x20specular\x20and\x20indirect\x20diffuse\x20light\x20accumulate\x20here\x0a\x0a\x09vec3\x20singleScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09vec3\x20multiScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09vec3\x20cosineWeightedIrradiance\x20=\x20irradiance\x20*\x20RECIPROCAL_PI;\x0a\x0a\x09#ifdef\x20USE_IRIDESCENCE\x0a\x0a\x09\x09computeMultiscatteringIridescence(\x20geometryNormal,\x20geometryViewDir,\x20material.specularColor,\x20material.specularF90,\x20material.iridescence,\x20material.iridescenceFresnel,\x20material.roughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09computeMultiscattering(\x20geometryNormal,\x20geometryViewDir,\x20material.specularColor,\x20material.specularF90,\x20material.roughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x0a\x09#endif\x0a\x0a\x09vec3\x20totalScattering\x20=\x20singleScattering\x20+\x20multiScattering;\x0a\x09vec3\x20diffuse\x20=\x20material.diffuseColor\x20*\x20(\x201.0\x20-\x20max(\x20max(\x20totalScattering.r,\x20totalScattering.g\x20),\x20totalScattering.b\x20)\x20);\x0a\x0a\x09reflectedLight.indirectSpecular\x20+=\x20radiance\x20*\x20singleScattering;\x0a\x09reflectedLight.indirectSpecular\x20+=\x20multiScattering\x20*\x20cosineWeightedIrradiance;\x0a\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20diffuse\x20*\x20cosineWeightedIrradiance;\x0a\x0a}\x0a\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_Physical\x0a#define\x20RE_Direct_RectArea\x09\x09RE_Direct_RectArea_Physical\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_Physical\x0a#define\x20RE_IndirectSpecular\x09\x09RE_IndirectSpecular_Physical\x0a\x0a//\x20ref:\x20https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\x0afloat\x20computeSpecularOcclusion(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20ambientOcclusion,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x0a\x09return\x20saturate(\x20pow(\x20dotNV\x20+\x20ambientOcclusion,\x20exp2(\x20-\x2016.0\x20*\x20roughness\x20-\x201.0\x20)\x20)\x20-\x201.0\x20+\x20ambientOcclusion\x20);\x0a\x0a}\x0a','lights_fragment_begin':'\x0a/**\x0a\x20*\x20This\x20is\x20a\x20template\x20that\x20can\x20be\x20used\x20to\x20light\x20a\x20material,\x20it\x20uses\x20pluggable\x0a\x20*\x20RenderEquations\x20(RE)for\x20specific\x20lighting\x20scenarios.\x0a\x20*\x0a\x20*\x20Instructions\x20for\x20use:\x0a\x20*\x20-\x20Ensure\x20that\x20both\x20RE_Direct,\x20RE_IndirectDiffuse\x20and\x20RE_IndirectSpecular\x20are\x20defined\x0a\x20*\x20-\x20Create\x20a\x20material\x20parameter\x20that\x20is\x20to\x20be\x20passed\x20as\x20the\x20third\x20parameter\x20to\x20your\x20lighting\x20functions.\x0a\x20*\x0a\x20*\x20TODO:\x0a\x20*\x20-\x20Add\x20area\x20light\x20support.\x0a\x20*\x20-\x20Add\x20sphere\x20light\x20support.\x0a\x20*\x20-\x20Add\x20diffuse\x20light\x20probe\x20(irradiance\x20cubemap)\x20support.\x0a\x20*/\x0a\x0avec3\x20geometryPosition\x20=\x20-\x20vViewPosition;\x0avec3\x20geometryNormal\x20=\x20normal;\x0avec3\x20geometryViewDir\x20=\x20(\x20isOrthographic\x20)\x20?\x20vec3(\x200,\x200,\x201\x20)\x20:\x20normalize(\x20vViewPosition\x20);\x0a\x0avec3\x20geometryClearcoatNormal\x20=\x20vec3(\x200.0\x20);\x0a\x0a#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09geometryClearcoatNormal\x20=\x20clearcoatNormal;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_IRIDESCENCE\x0a\x0a\x09float\x20dotNVi\x20=\x20saturate(\x20dot(\x20normal,\x20geometryViewDir\x20)\x20);\x0a\x0a\x09if\x20(\x20material.iridescenceThickness\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09material.iridescence\x20=\x200.0;\x0a\x0a\x09}\x20else\x20{\x0a\x0a\x09\x09material.iridescence\x20=\x20saturate(\x20material.iridescence\x20);\x0a\x0a\x09}\x0a\x0a\x09if\x20(\x20material.iridescence\x20>\x200.0\x20)\x20{\x0a\x0a\x09\x09material.iridescenceFresnel\x20=\x20evalIridescence(\x201.0,\x20material.iridescenceIOR,\x20dotNVi,\x20material.iridescenceThickness,\x20material.specularColor\x20);\x0a\x0a\x09\x09//\x20Iridescence\x20F0\x20approximation\x0a\x09\x09material.iridescenceF0\x20=\x20Schlick_to_F0(\x20material.iridescenceFresnel,\x201.0,\x20dotNVi\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a\x0aIncidentLight\x20directLight;\x0a\x0a#if\x20(\x20NUM_POINT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x0a\x09PointLight\x20pointLight;\x0a\x09#if\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20NUM_POINT_LIGHT_SHADOWS\x20>\x200\x0a\x09PointLightShadow\x20pointLightShadow;\x0a\x09#endif\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x0a\x09\x09getPointLightInfo(\x20pointLight,\x20geometryPosition,\x20directLight\x20);\x0a\x0a\x09\x09#if\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20(\x20UNROLLED_LOOP_INDEX\x20<\x20NUM_POINT_LIGHT_SHADOWS\x20)\x0a\x09\x09pointLightShadow\x20=\x20pointLightShadows[\x20i\x20];\x0a\x09\x09directLight.color\x20*=\x20(\x20directLight.visible\x20&&\x20receiveShadow\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLightShadow.shadowMapSize,\x20pointLightShadow.shadowBias,\x20pointLightShadow.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLightShadow.shadowCameraNear,\x20pointLightShadow.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x0a\x09\x09RE_Direct(\x20directLight,\x20geometryPosition,\x20geometryNormal,\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material,\x20reflectedLight\x20);\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a#endif\x0a\x0a#if\x20(\x20NUM_SPOT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x0a\x09SpotLight\x20spotLight;\x0a\x09vec4\x20spotColor;\x0a\x09vec3\x20spotLightCoord;\x0a\x09bool\x20inSpotLightMap;\x0a\x0a\x09#if\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20NUM_SPOT_LIGHT_SHADOWS\x20>\x200\x0a\x09SpotLightShadow\x20spotLightShadow;\x0a\x09#endif\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x0a\x09\x09getSpotLightInfo(\x20spotLight,\x20geometryPosition,\x20directLight\x20);\x0a\x0a\x09\x09//\x20spot\x20lights\x20are\x20ordered\x20[shadows\x20with\x20maps,\x20shadows\x20without\x20maps,\x20maps\x20without\x20shadows,\x20none]\x0a\x09\x09#if\x20(\x20UNROLLED_LOOP_INDEX\x20<\x20NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS\x20)\x0a\x09\x09#define\x20SPOT_LIGHT_MAP_INDEX\x20UNROLLED_LOOP_INDEX\x0a\x09\x09#elif\x20(\x20UNROLLED_LOOP_INDEX\x20<\x20NUM_SPOT_LIGHT_SHADOWS\x20)\x0a\x09\x09#define\x20SPOT_LIGHT_MAP_INDEX\x20NUM_SPOT_LIGHT_MAPS\x0a\x09\x09#else\x0a\x09\x09#define\x20SPOT_LIGHT_MAP_INDEX\x20(\x20UNROLLED_LOOP_INDEX\x20-\x20NUM_SPOT_LIGHT_SHADOWS\x20+\x20NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS\x20)\x0a\x09\x09#endif\x0a\x0a\x09\x09#if\x20(\x20SPOT_LIGHT_MAP_INDEX\x20<\x20NUM_SPOT_LIGHT_MAPS\x20)\x0a\x09\x09\x09spotLightCoord\x20=\x20vSpotLightCoord[\x20i\x20].xyz\x20/\x20vSpotLightCoord[\x20i\x20].w;\x0a\x09\x09\x09inSpotLightMap\x20=\x20all(\x20lessThan(\x20abs(\x20spotLightCoord\x20*\x202.\x20-\x201.\x20),\x20vec3(\x201.0\x20)\x20)\x20);\x0a\x09\x09\x09spotColor\x20=\x20texture2D(\x20spotLightMap[\x20SPOT_LIGHT_MAP_INDEX\x20],\x20spotLightCoord.xy\x20);\x0a\x09\x09\x09directLight.color\x20=\x20inSpotLightMap\x20?\x20directLight.color\x20*\x20spotColor.rgb\x20:\x20directLight.color;\x0a\x09\x09#endif\x0a\x0a\x09\x09#undef\x20SPOT_LIGHT_MAP_INDEX\x0a\x0a\x09\x09#if\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20(\x20UNROLLED_LOOP_INDEX\x20<\x20NUM_SPOT_LIGHT_SHADOWS\x20)\x0a\x09\x09spotLightShadow\x20=\x20spotLightShadows[\x20i\x20];\x0a\x09\x09directLight.color\x20*=\x20(\x20directLight.visible\x20&&\x20receiveShadow\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLightShadow.shadowMapSize,\x20spotLightShadow.shadowBias,\x20spotLightShadow.shadowRadius,\x20vSpotLightCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x0a\x09\x09RE_Direct(\x20directLight,\x20geometryPosition,\x20geometryNormal,\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material,\x20reflectedLight\x20);\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a#endif\x0a\x0a#if\x20(\x20NUM_DIR_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#if\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20NUM_DIR_LIGHT_SHADOWS\x20>\x200\x0a\x09DirectionalLightShadow\x20directionalLightShadow;\x0a\x09#endif\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x0a\x09\x09getDirectionalLightInfo(\x20directionalLight,\x20directLight\x20);\x0a\x0a\x09\x09#if\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20(\x20UNROLLED_LOOP_INDEX\x20<\x20NUM_DIR_LIGHT_SHADOWS\x20)\x0a\x09\x09directionalLightShadow\x20=\x20directionalLightShadows[\x20i\x20];\x0a\x09\x09directLight.color\x20*=\x20(\x20directLight.visible\x20&&\x20receiveShadow\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLightShadow.shadowMapSize,\x20directionalLightShadow.shadowBias,\x20directionalLightShadow.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x0a\x09\x09RE_Direct(\x20directLight,\x20geometryPosition,\x20geometryNormal,\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material,\x20reflectedLight\x20);\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a#endif\x0a\x0a#if\x20(\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct_RectArea\x20)\x0a\x0a\x09RectAreaLight\x20rectAreaLight;\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_RECT_AREA_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09rectAreaLight\x20=\x20rectAreaLights[\x20i\x20];\x0a\x09\x09RE_Direct_RectArea(\x20rectAreaLight,\x20geometryPosition,\x20geometryNormal,\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material,\x20reflectedLight\x20);\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a#endif\x0a\x0a#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x0a\x09vec3\x20iblIrradiance\x20=\x20vec3(\x200.0\x20);\x0a\x0a\x09vec3\x20irradiance\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x0a\x09#if\x20defined(\x20USE_LIGHT_PROBES\x20)\x0a\x0a\x09\x09irradiance\x20+=\x20getLightProbeIrradiance(\x20lightProbe,\x20geometryNormal\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20(\x20NUM_HEMI_LIGHTS\x20>\x200\x20)\x0a\x0a\x09\x09#pragma\x20unroll_loop_start\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09\x09irradiance\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometryNormal\x20);\x0a\x0a\x09\x09}\x0a\x09\x09#pragma\x20unroll_loop_end\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x0a\x09vec3\x20radiance\x20=\x20vec3(\x200.0\x20);\x0a\x09vec3\x20clearcoatRadiance\x20=\x20vec3(\x200.0\x20);\x0a\x0a#endif\x0a','lights_fragment_maps':'\x0a#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x0a\x09\x09vec4\x20lightMapTexel\x20=\x20texture2D(\x20lightMap,\x20vLightMapUv\x20);\x0a\x09\x09vec3\x20lightMapIrradiance\x20=\x20lightMapTexel.rgb\x20*\x20lightMapIntensity;\x0a\x0a\x09\x09irradiance\x20+=\x20lightMapIrradiance;\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20STANDARD\x20)\x20&&\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x0a\x09\x09iblIrradiance\x20+=\x20getIBLIrradiance(\x20geometryNormal\x20);\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x0a\x09#ifdef\x20USE_ANISOTROPY\x0a\x0a\x09\x09radiance\x20+=\x20getIBLAnisotropyRadiance(\x20geometryViewDir,\x20geometryNormal,\x20material.roughness,\x20material.anisotropyB,\x20material.anisotropy\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09radiance\x20+=\x20getIBLRadiance(\x20geometryViewDir,\x20geometryNormal,\x20material.roughness\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09\x09clearcoatRadiance\x20+=\x20getIBLRadiance(\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material.clearcoatRoughness\x20);\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','lights_fragment_end':'\x0a#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x0a\x09RE_IndirectDiffuse(\x20irradiance,\x20geometryPosition,\x20geometryNormal,\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material,\x20reflectedLight\x20);\x0a\x0a#endif\x0a\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x0a\x09RE_IndirectSpecular(\x20radiance,\x20iblIrradiance,\x20clearcoatRadiance,\x20geometryPosition,\x20geometryNormal,\x20geometryViewDir,\x20geometryClearcoatNormal,\x20material,\x20reflectedLight\x20);\x0a\x0a#endif\x0a','logdepthbuf_fragment':'\x0a#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x0a\x09//\x20Doing\x20a\x20strict\x20comparison\x20with\x20==\x201.0\x20can\x20cause\x20noise\x20artifacts\x0a\x09//\x20on\x20some\x20platforms.\x20See\x20issue\x20#17623.\x0a\x09gl_FragDepthEXT\x20=\x20vIsPerspective\x20==\x200.0\x20?\x20gl_FragCoord.z\x20:\x20log2(\x20vFragDepth\x20)\x20*\x20logDepthBufFC\x20*\x200.5;\x0a\x0a#endif\x0a','logdepthbuf_pars_fragment':'\x0a#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x0a\x09uniform\x20float\x20logDepthBufFC;\x0a\x09varying\x20float\x20vFragDepth;\x0a\x09varying\x20float\x20vIsPerspective;\x0a\x0a#endif\x0a','logdepthbuf_pars_vertex':'\x0a#ifdef\x20USE_LOGDEPTHBUF\x0a\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x0a\x09\x09varying\x20float\x20vFragDepth;\x0a\x09\x09varying\x20float\x20vIsPerspective;\x0a\x0a\x09#else\x0a\x0a\x09\x09uniform\x20float\x20logDepthBufFC;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','logdepthbuf_vertex':'\x0a#ifdef\x20USE_LOGDEPTHBUF\x0a\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x0a\x09\x09vFragDepth\x20=\x201.0\x20+\x20gl_Position.w;\x0a\x09\x09vIsPerspective\x20=\x20float(\x20isPerspectiveMatrix(\x20projectionMatrix\x20)\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09if\x20(\x20isPerspectiveMatrix(\x20projectionMatrix\x20)\x20)\x20{\x0a\x0a\x09\x09\x09gl_Position.z\x20=\x20log2(\x20max(\x20EPSILON,\x20gl_Position.w\x20+\x201.0\x20)\x20)\x20*\x20logDepthBufFC\x20-\x201.0;\x0a\x0a\x09\x09\x09gl_Position.z\x20*=\x20gl_Position.w;\x0a\x0a\x09\x09}\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','map_fragment':'\x0a#ifdef\x20USE_MAP\x0a\x0a\x09vec4\x20sampledDiffuseColor\x20=\x20texture2D(\x20map,\x20vMapUv\x20);\x0a\x0a\x09#ifdef\x20DECODE_VIDEO_TEXTURE\x0a\x0a\x09\x09//\x20use\x20inline\x20sRGB\x20decode\x20until\x20browsers\x20properly\x20support\x20SRGB8_APLHA8\x20with\x20video\x20textures\x0a\x0a\x09\x09sampledDiffuseColor\x20=\x20vec4(\x20mix(\x20pow(\x20sampledDiffuseColor.rgb\x20*\x200.9478672986\x20+\x20vec3(\x200.0521327014\x20),\x20vec3(\x202.4\x20)\x20),\x20sampledDiffuseColor.rgb\x20*\x200.0773993808,\x20vec3(\x20lessThanEqual(\x20sampledDiffuseColor.rgb,\x20vec3(\x200.04045\x20)\x20)\x20)\x20),\x20sampledDiffuseColor.w\x20);\x0a\x09\x0a\x09#endif\x0a\x0a\x09diffuseColor\x20*=\x20sampledDiffuseColor;\x0a\x0a#endif\x0a','map_pars_fragment':'\x0a#ifdef\x20USE_MAP\x0a\x0a\x09uniform\x20sampler2D\x20map;\x0a\x0a#endif\x0a','map_particle_fragment':'\x0a#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x0a\x0a\x09#if\x20defined(\x20USE_POINTS_UV\x20)\x0a\x0a\x09\x09vec2\x20uv\x20=\x20vUv;\x0a\x0a\x09#else\x0a\x0a\x09\x09vec2\x20uv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20gl_PointCoord.x,\x201.0\x20-\x20gl_PointCoord.y,\x201\x20)\x20).xy;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_MAP\x0a\x0a\x09diffuseColor\x20*=\x20texture2D(\x20map,\x20uv\x20);\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_ALPHAMAP\x0a\x0a\x09diffuseColor.a\x20*=\x20texture2D(\x20alphaMap,\x20uv\x20).g;\x0a\x0a#endif\x0a','map_particle_pars_fragment':'\x0a#if\x20defined(\x20USE_POINTS_UV\x20)\x0a\x0a\x09varying\x20vec2\x20vUv;\x0a\x0a#else\x0a\x0a\x09#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x0a\x0a\x09\x09uniform\x20mat3\x20uvTransform;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_MAP\x0a\x0a\x09uniform\x20sampler2D\x20map;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_ALPHAMAP\x0a\x0a\x09uniform\x20sampler2D\x20alphaMap;\x0a\x0a#endif\x0a','metalnessmap_fragment':'\x0afloat\x20metalnessFactor\x20=\x20metalness;\x0a\x0a#ifdef\x20USE_METALNESSMAP\x0a\x0a\x09vec4\x20texelMetalness\x20=\x20texture2D(\x20metalnessMap,\x20vMetalnessMapUv\x20);\x0a\x0a\x09//\x20reads\x20channel\x20B,\x20compatible\x20with\x20a\x20combined\x20OcclusionRoughnessMetallic\x20(RGB)\x20texture\x0a\x09metalnessFactor\x20*=\x20texelMetalness.b;\x0a\x0a#endif\x0a','metalnessmap_pars_fragment':'\x0a#ifdef\x20USE_METALNESSMAP\x0a\x0a\x09uniform\x20sampler2D\x20metalnessMap;\x0a\x0a#endif\x0a','morphcolor_vertex':'\x0a#if\x20defined(\x20USE_MORPHCOLORS\x20)\x20&&\x20defined(\x20MORPHTARGETS_TEXTURE\x20)\x0a\x0a\x09//\x20morphTargetBaseInfluence\x20is\x20set\x20based\x20on\x20BufferGeometry.morphTargetsRelative\x20value:\x0a\x09//\x20When\x20morphTargetsRelative\x20is\x20false,\x20this\x20is\x20set\x20to\x201\x20-\x20sum(influences);\x20this\x20results\x20in\x20normal\x20=\x20sum((target\x20-\x20base)\x20*\x20influence)\x0a\x09//\x20When\x20morphTargetsRelative\x20is\x20true,\x20this\x20is\x20set\x20to\x201;\x20as\x20a\x20result,\x20all\x20morph\x20targets\x20are\x20simply\x20added\x20to\x20the\x20base\x20after\x20weighting\x0a\x09vColor\x20*=\x20morphTargetBaseInfluence;\x0a\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20MORPHTARGETS_COUNT;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09#if\x20defined(\x20USE_COLOR_ALPHA\x20)\x0a\x0a\x09\x09\x09if\x20(\x20morphTargetInfluences[\x20i\x20]\x20!=\x200.0\x20)\x20vColor\x20+=\x20getMorph(\x20gl_VertexID,\x20i,\x202\x20)\x20*\x20morphTargetInfluences[\x20i\x20];\x0a\x0a\x09\x09#elif\x20defined(\x20USE_COLOR\x20)\x0a\x0a\x09\x09\x09if\x20(\x20morphTargetInfluences[\x20i\x20]\x20!=\x200.0\x20)\x20vColor\x20+=\x20getMorph(\x20gl_VertexID,\x20i,\x202\x20).rgb\x20*\x20morphTargetInfluences[\x20i\x20];\x0a\x0a\x09\x09#endif\x0a\x0a\x09}\x0a\x0a#endif\x0a','morphnormal_vertex':'\x0a#ifdef\x20USE_MORPHNORMALS\x0a\x0a\x09//\x20morphTargetBaseInfluence\x20is\x20set\x20based\x20on\x20BufferGeometry.morphTargetsRelative\x20value:\x0a\x09//\x20When\x20morphTargetsRelative\x20is\x20false,\x20this\x20is\x20set\x20to\x201\x20-\x20sum(influences);\x20this\x20results\x20in\x20normal\x20=\x20sum((target\x20-\x20base)\x20*\x20influence)\x0a\x09//\x20When\x20morphTargetsRelative\x20is\x20true,\x20this\x20is\x20set\x20to\x201;\x20as\x20a\x20result,\x20all\x20morph\x20targets\x20are\x20simply\x20added\x20to\x20the\x20base\x20after\x20weighting\x0a\x09objectNormal\x20*=\x20morphTargetBaseInfluence;\x0a\x0a\x09#ifdef\x20MORPHTARGETS_TEXTURE\x0a\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20MORPHTARGETS_COUNT;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09\x09if\x20(\x20morphTargetInfluences[\x20i\x20]\x20!=\x200.0\x20)\x20objectNormal\x20+=\x20getMorph(\x20gl_VertexID,\x20i,\x201\x20).xyz\x20*\x20morphTargetInfluences[\x20i\x20];\x0a\x0a\x09\x09}\x0a\x0a\x09#else\x0a\x0a\x09\x09objectNormal\x20+=\x20morphNormal0\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09\x09objectNormal\x20+=\x20morphNormal1\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09\x09objectNormal\x20+=\x20morphNormal2\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09\x09objectNormal\x20+=\x20morphNormal3\x20*\x20morphTargetInfluences[\x203\x20];\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','morphtarget_pars_vertex':'\x0a#ifdef\x20USE_MORPHTARGETS\x0a\x0a\x09uniform\x20float\x20morphTargetBaseInfluence;\x0a\x0a\x09#ifdef\x20MORPHTARGETS_TEXTURE\x0a\x0a\x09\x09uniform\x20float\x20morphTargetInfluences[\x20MORPHTARGETS_COUNT\x20];\x0a\x09\x09uniform\x20sampler2DArray\x20morphTargetsTexture;\x0a\x09\x09uniform\x20ivec2\x20morphTargetsTextureSize;\x0a\x0a\x09\x09vec4\x20getMorph(\x20const\x20in\x20int\x20vertexIndex,\x20const\x20in\x20int\x20morphTargetIndex,\x20const\x20in\x20int\x20offset\x20)\x20{\x0a\x0a\x09\x09\x09int\x20texelIndex\x20=\x20vertexIndex\x20*\x20MORPHTARGETS_TEXTURE_STRIDE\x20+\x20offset;\x0a\x09\x09\x09int\x20y\x20=\x20texelIndex\x20/\x20morphTargetsTextureSize.x;\x0a\x09\x09\x09int\x20x\x20=\x20texelIndex\x20-\x20y\x20*\x20morphTargetsTextureSize.x;\x0a\x0a\x09\x09\x09ivec3\x20morphUV\x20=\x20ivec3(\x20x,\x20y,\x20morphTargetIndex\x20);\x0a\x09\x09\x09return\x20texelFetch(\x20morphTargetsTexture,\x20morphUV,\x200\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09#else\x0a\x0a\x09\x09#ifndef\x20USE_MORPHNORMALS\x0a\x0a\x09\x09\x09uniform\x20float\x20morphTargetInfluences[\x208\x20];\x0a\x0a\x09\x09#else\x0a\x0a\x09\x09\x09uniform\x20float\x20morphTargetInfluences[\x204\x20];\x0a\x0a\x09\x09#endif\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','morphtarget_vertex':'\x0a#ifdef\x20USE_MORPHTARGETS\x0a\x0a\x09//\x20morphTargetBaseInfluence\x20is\x20set\x20based\x20on\x20BufferGeometry.morphTargetsRelative\x20value:\x0a\x09//\x20When\x20morphTargetsRelative\x20is\x20false,\x20this\x20is\x20set\x20to\x201\x20-\x20sum(influences);\x20this\x20results\x20in\x20position\x20=\x20sum((target\x20-\x20base)\x20*\x20influence)\x0a\x09//\x20When\x20morphTargetsRelative\x20is\x20true,\x20this\x20is\x20set\x20to\x201;\x20as\x20a\x20result,\x20all\x20morph\x20targets\x20are\x20simply\x20added\x20to\x20the\x20base\x20after\x20weighting\x0a\x09transformed\x20*=\x20morphTargetBaseInfluence;\x0a\x0a\x09#ifdef\x20MORPHTARGETS_TEXTURE\x0a\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20MORPHTARGETS_COUNT;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09\x09if\x20(\x20morphTargetInfluences[\x20i\x20]\x20!=\x200.0\x20)\x20transformed\x20+=\x20getMorph(\x20gl_VertexID,\x20i,\x200\x20).xyz\x20*\x20morphTargetInfluences[\x20i\x20];\x0a\x0a\x09\x09}\x0a\x0a\x09#else\x0a\x0a\x09\x09transformed\x20+=\x20morphTarget0\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09\x09transformed\x20+=\x20morphTarget1\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09\x09transformed\x20+=\x20morphTarget2\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09\x09transformed\x20+=\x20morphTarget3\x20*\x20morphTargetInfluences[\x203\x20];\x0a\x0a\x09\x09#ifndef\x20USE_MORPHNORMALS\x0a\x0a\x09\x09\x09transformed\x20+=\x20morphTarget4\x20*\x20morphTargetInfluences[\x204\x20];\x0a\x09\x09\x09transformed\x20+=\x20morphTarget5\x20*\x20morphTargetInfluences[\x205\x20];\x0a\x09\x09\x09transformed\x20+=\x20morphTarget6\x20*\x20morphTargetInfluences[\x206\x20];\x0a\x09\x09\x09transformed\x20+=\x20morphTarget7\x20*\x20morphTargetInfluences[\x207\x20];\x0a\x0a\x09\x09#endif\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','normal_fragment_begin':'\x0afloat\x20faceDirection\x20=\x20gl_FrontFacing\x20?\x201.0\x20:\x20-\x201.0;\x0a\x0a#ifdef\x20FLAT_SHADED\x0a\x0a\x09vec3\x20fdx\x20=\x20dFdx(\x20vViewPosition\x20);\x0a\x09vec3\x20fdy\x20=\x20dFdy(\x20vViewPosition\x20);\x0a\x09vec3\x20normal\x20=\x20normalize(\x20cross(\x20fdx,\x20fdy\x20)\x20);\x0a\x0a#else\x0a\x0a\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);\x0a\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x0a\x09\x09normal\x20*=\x20faceDirection;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#if\x20defined(\x20USE_NORMALMAP_TANGENTSPACE\x20)\x20||\x20defined(\x20USE_CLEARCOAT_NORMALMAP\x20)\x20||\x20defined(\x20USE_ANISOTROPY\x20)\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09mat3\x20tbn\x20=\x20mat3(\x20normalize(\x20vTangent\x20),\x20normalize(\x20vBitangent\x20),\x20normal\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09mat3\x20tbn\x20=\x20getTangentFrame(\x20-\x20vViewPosition,\x20normal,\x0a\x09\x09#if\x20defined(\x20USE_NORMALMAP\x20)\x0a\x09\x09\x09vNormalMapUv\x0a\x09\x09#elif\x20defined(\x20USE_CLEARCOAT_NORMALMAP\x20)\x0a\x09\x09\x09vClearcoatNormalMapUv\x0a\x09\x09#else\x0a\x09\x09\x09vUv\x0a\x09\x09#endif\x0a\x09\x09);\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20defined(\x20DOUBLE_SIDED\x20)\x20&&\x20!\x20defined(\x20FLAT_SHADED\x20)\x0a\x0a\x09\x09tbn[0]\x20*=\x20faceDirection;\x0a\x09\x09tbn[1]\x20*=\x20faceDirection;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_CLEARCOAT_NORMALMAP\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09mat3\x20tbn2\x20=\x20mat3(\x20normalize(\x20vTangent\x20),\x20normalize(\x20vBitangent\x20),\x20normal\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09mat3\x20tbn2\x20=\x20getTangentFrame(\x20-\x20vViewPosition,\x20normal,\x20vClearcoatNormalMapUv\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20defined(\x20DOUBLE_SIDED\x20)\x20&&\x20!\x20defined(\x20FLAT_SHADED\x20)\x0a\x0a\x09\x09tbn2[0]\x20*=\x20faceDirection;\x0a\x09\x09tbn2[1]\x20*=\x20faceDirection;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a\x0a//\x20non\x20perturbed\x20normal\x20for\x20clearcoat\x20among\x20others\x0a\x0avec3\x20nonPerturbedNormal\x20=\x20normal;\x0a\x0a','normal_fragment_maps':'\x0a\x0a#ifdef\x20USE_NORMALMAP_OBJECTSPACE\x0a\x0a\x09normal\x20=\x20texture2D(\x20normalMap,\x20vNormalMapUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x20//\x20overrides\x20both\x20flatShading\x20and\x20attribute\x20normals\x0a\x0a\x09#ifdef\x20FLIP_SIDED\x0a\x0a\x09\x09normal\x20=\x20-\x20normal;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x0a\x09\x09normal\x20=\x20normal\x20*\x20faceDirection;\x0a\x0a\x09#endif\x0a\x0a\x09normal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);\x0a\x0a#elif\x20defined(\x20USE_NORMALMAP_TANGENTSPACE\x20)\x0a\x0a\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vNormalMapUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09mapN.xy\x20*=\x20normalScale;\x0a\x0a\x09normal\x20=\x20normalize(\x20tbn\x20*\x20mapN\x20);\x0a\x0a#elif\x20defined(\x20USE_BUMPMAP\x20)\x0a\x0a\x09normal\x20=\x20perturbNormalArb(\x20-\x20vViewPosition,\x20normal,\x20dHdxy_fwd(),\x20faceDirection\x20);\x0a\x0a#endif\x0a','normal_pars_fragment':'\x0a#ifndef\x20FLAT_SHADED\x0a\x0a\x09varying\x20vec3\x20vNormal;\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','normal_pars_vertex':'\x0a#ifndef\x20FLAT_SHADED\x0a\x0a\x09varying\x20vec3\x20vNormal;\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','normal_vertex':'\x0a#ifndef\x20FLAT_SHADED\x20//\x20normal\x20is\x20computed\x20with\x20derivatives\x20when\x20FLAT_SHADED\x0a\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','normalmap_pars_fragment':'\x0a#ifdef\x20USE_NORMALMAP\x0a\x0a\x09uniform\x20sampler2D\x20normalMap;\x0a\x09uniform\x20vec2\x20normalScale;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_NORMALMAP_OBJECTSPACE\x0a\x0a\x09uniform\x20mat3\x20normalMatrix;\x0a\x0a#endif\x0a\x0a#if\x20!\x20defined\x20(\x20USE_TANGENT\x20)\x20&&\x20(\x20defined\x20(\x20USE_NORMALMAP_TANGENTSPACE\x20)\x20||\x20defined\x20(\x20USE_CLEARCOAT_NORMALMAP\x20)\x20||\x20defined(\x20USE_ANISOTROPY\x20)\x20)\x0a\x0a\x09//\x20Normal\x20Mapping\x20Without\x20Precomputed\x20Tangents\x0a\x09//\x20http://www.thetenthplanet.de/archives/1180\x0a\x0a\x09mat3\x20getTangentFrame(\x20vec3\x20eye_pos,\x20vec3\x20surf_norm,\x20vec2\x20uv\x20)\x20{\x0a\x0a\x09\x09vec3\x20q0\x20=\x20dFdx(\x20eye_pos.xyz\x20);\x0a\x09\x09vec3\x20q1\x20=\x20dFdy(\x20eye_pos.xyz\x20);\x0a\x09\x09vec2\x20st0\x20=\x20dFdx(\x20uv.st\x20);\x0a\x09\x09vec2\x20st1\x20=\x20dFdy(\x20uv.st\x20);\x0a\x0a\x09\x09vec3\x20N\x20=\x20surf_norm;\x20//\x20normalized\x0a\x0a\x09\x09vec3\x20q1perp\x20=\x20cross(\x20q1,\x20N\x20);\x0a\x09\x09vec3\x20q0perp\x20=\x20cross(\x20N,\x20q0\x20);\x0a\x0a\x09\x09vec3\x20T\x20=\x20q1perp\x20*\x20st0.x\x20+\x20q0perp\x20*\x20st1.x;\x0a\x09\x09vec3\x20B\x20=\x20q1perp\x20*\x20st0.y\x20+\x20q0perp\x20*\x20st1.y;\x0a\x0a\x09\x09float\x20det\x20=\x20max(\x20dot(\x20T,\x20T\x20),\x20dot(\x20B,\x20B\x20)\x20);\x0a\x09\x09float\x20scale\x20=\x20(\x20det\x20==\x200.0\x20)\x20?\x200.0\x20:\x20inversesqrt(\x20det\x20);\x0a\x0a\x09\x09return\x20mat3(\x20T\x20*\x20scale,\x20B\x20*\x20scale,\x20N\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a','clearcoat_normal_fragment_begin':'\x0a#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09vec3\x20clearcoatNormal\x20=\x20nonPerturbedNormal;\x0a\x0a#endif\x0a','clearcoat_normal_fragment_maps':'\x0a#ifdef\x20USE_CLEARCOAT_NORMALMAP\x0a\x0a\x09vec3\x20clearcoatMapN\x20=\x20texture2D(\x20clearcoatNormalMap,\x20vClearcoatNormalMapUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09clearcoatMapN.xy\x20*=\x20clearcoatNormalScale;\x0a\x0a\x09clearcoatNormal\x20=\x20normalize(\x20tbn2\x20*\x20clearcoatMapN\x20);\x0a\x0a#endif\x0a','clearcoat_pars_fragment':'\x0a\x0a#ifdef\x20USE_CLEARCOATMAP\x0a\x0a\x09uniform\x20sampler2D\x20clearcoatMap;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_CLEARCOAT_NORMALMAP\x0a\x0a\x09uniform\x20sampler2D\x20clearcoatNormalMap;\x0a\x09uniform\x20vec2\x20clearcoatNormalScale;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_CLEARCOAT_ROUGHNESSMAP\x0a\x0a\x09uniform\x20sampler2D\x20clearcoatRoughnessMap;\x0a\x0a#endif\x0a','iridescence_pars_fragment':'\x0a\x0a#ifdef\x20USE_IRIDESCENCEMAP\x0a\x0a\x09uniform\x20sampler2D\x20iridescenceMap;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_IRIDESCENCE_THICKNESSMAP\x0a\x0a\x09uniform\x20sampler2D\x20iridescenceThicknessMap;\x0a\x0a#endif\x0a','opaque_fragment':'\x0a#ifdef\x20OPAQUE\x0adiffuseColor.a\x20=\x201.0;\x0a#endif\x0a\x0a#ifdef\x20USE_TRANSMISSION\x0adiffuseColor.a\x20*=\x20material.transmissionAlpha;\x0a#endif\x0a\x0agl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a','packing':'\x0avec3\x20packNormalToRGB(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x09return\x20normalize(\x20normal\x20)\x20*\x200.5\x20+\x200.5;\x0a}\x0a\x0avec3\x20unpackRGBToNormal(\x20const\x20in\x20vec3\x20rgb\x20)\x20{\x0a\x09return\x202.0\x20*\x20rgb.xyz\x20-\x201.0;\x0a}\x0a\x0aconst\x20float\x20PackUpscale\x20=\x20256.\x20/\x20255.;\x20//\x20fraction\x20->\x200..1\x20(including\x201)\x0aconst\x20float\x20UnpackDownscale\x20=\x20255.\x20/\x20256.;\x20//\x200..1\x20->\x20fraction\x20(excluding\x201)\x0a\x0aconst\x20vec3\x20PackFactors\x20=\x20vec3(\x20256.\x20*\x20256.\x20*\x20256.,\x20256.\x20*\x20256.,\x20256.\x20);\x0aconst\x20vec4\x20UnpackFactors\x20=\x20UnpackDownscale\x20/\x20vec4(\x20PackFactors,\x201.\x20);\x0a\x0aconst\x20float\x20ShiftRight8\x20=\x201.\x20/\x20256.;\x0a\x0avec4\x20packDepthToRGBA(\x20const\x20in\x20float\x20v\x20)\x20{\x0a\x09vec4\x20r\x20=\x20vec4(\x20fract(\x20v\x20*\x20PackFactors\x20),\x20v\x20);\x0a\x09r.yzw\x20-=\x20r.xyz\x20*\x20ShiftRight8;\x20//\x20tidy\x20overflow\x0a\x09return\x20r\x20*\x20PackUpscale;\x0a}\x0a\x0afloat\x20unpackRGBAToDepth(\x20const\x20in\x20vec4\x20v\x20)\x20{\x0a\x09return\x20dot(\x20v,\x20UnpackFactors\x20);\x0a}\x0a\x0avec2\x20packDepthToRG(\x20in\x20highp\x20float\x20v\x20)\x20{\x0a\x09return\x20packDepthToRGBA(\x20v\x20).yx;\x0a}\x0a\x0afloat\x20unpackRGToDepth(\x20const\x20in\x20highp\x20vec2\x20v\x20)\x20{\x0a\x09return\x20unpackRGBAToDepth(\x20vec4(\x20v.xy,\x200.0,\x200.0\x20)\x20);\x0a}\x0a\x0avec4\x20pack2HalfToRGBA(\x20vec2\x20v\x20)\x20{\x0a\x09vec4\x20r\x20=\x20vec4(\x20v.x,\x20fract(\x20v.x\x20*\x20255.0\x20),\x20v.y,\x20fract(\x20v.y\x20*\x20255.0\x20)\x20);\x0a\x09return\x20vec4(\x20r.x\x20-\x20r.y\x20/\x20255.0,\x20r.y,\x20r.z\x20-\x20r.w\x20/\x20255.0,\x20r.w\x20);\x0a}\x0a\x0avec2\x20unpackRGBATo2Half(\x20vec4\x20v\x20)\x20{\x0a\x09return\x20vec2(\x20v.x\x20+\x20(\x20v.y\x20/\x20255.0\x20),\x20v.z\x20+\x20(\x20v.w\x20/\x20255.0\x20)\x20);\x0a}\x0a\x0a//\x20NOTE:\x20viewZ,\x20the\x20z-coordinate\x20in\x20camera\x20space,\x20is\x20negative\x20for\x20points\x20in\x20front\x20of\x20the\x20camera\x0a\x0afloat\x20viewZToOrthographicDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09//\x20-near\x20maps\x20to\x200;\x20-far\x20maps\x20to\x201\x0a\x09return\x20(\x20viewZ\x20+\x20near\x20)\x20/\x20(\x20near\x20-\x20far\x20);\x0a}\x0a\x0afloat\x20orthographicDepthToViewZ(\x20const\x20in\x20float\x20depth,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09//\x20maps\x20orthographic\x20depth\x20in\x20[\x200,\x201\x20]\x20to\x20viewZ\x0a\x09return\x20depth\x20*\x20(\x20near\x20-\x20far\x20)\x20-\x20near;\x0a}\x0a\x0a//\x20NOTE:\x20https://twitter.com/gonnavis/status/1377183786949959682\x0a\x0afloat\x20viewZToPerspectiveDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09//\x20-near\x20maps\x20to\x200;\x20-far\x20maps\x20to\x201\x0a\x09return\x20(\x20(\x20near\x20+\x20viewZ\x20)\x20*\x20far\x20)\x20/\x20(\x20(\x20far\x20-\x20near\x20)\x20*\x20viewZ\x20);\x0a}\x0a\x0afloat\x20perspectiveDepthToViewZ(\x20const\x20in\x20float\x20depth,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09//\x20maps\x20perspective\x20depth\x20in\x20[\x200,\x201\x20]\x20to\x20viewZ\x0a\x09return\x20(\x20near\x20*\x20far\x20)\x20/\x20(\x20(\x20far\x20-\x20near\x20)\x20*\x20depth\x20-\x20far\x20);\x0a}\x0a','premultiplied_alpha_fragment':'\x0a#ifdef\x20PREMULTIPLIED_ALPHA\x0a\x0a\x09//\x20Get\x20get\x20normal\x20blending\x20with\x20premultipled,\x20use\x20with\x20CustomBlending,\x20OneFactor,\x20OneMinusSrcAlphaFactor,\x20AddEquation.\x0a\x09gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a\x0a#endif\x0a','project_vertex':'\x0avec4\x20mvPosition\x20=\x20vec4(\x20transformed,\x201.0\x20);\x0a\x0a#ifdef\x20USE_BATCHING\x0a\x0a\x09mvPosition\x20=\x20batchingMatrix\x20*\x20mvPosition;\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_INSTANCING\x0a\x0a\x09mvPosition\x20=\x20instanceMatrix\x20*\x20mvPosition;\x0a\x0a#endif\x0a\x0amvPosition\x20=\x20modelViewMatrix\x20*\x20mvPosition;\x0a\x0agl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a','dithering_fragment':'\x0a#ifdef\x20DITHERING\x0a\x0a\x09gl_FragColor.rgb\x20=\x20dithering(\x20gl_FragColor.rgb\x20);\x0a\x0a#endif\x0a','dithering_pars_fragment':'\x0a#ifdef\x20DITHERING\x0a\x0a\x09//\x20based\x20on\x20https://www.shadertoy.com/view/MslGR8\x0a\x09vec3\x20dithering(\x20vec3\x20color\x20)\x20{\x0a\x09\x09//Calculate\x20grid\x20position\x0a\x09\x09float\x20grid_position\x20=\x20rand(\x20gl_FragCoord.xy\x20);\x0a\x0a\x09\x09//Shift\x20the\x20individual\x20colors\x20differently,\x20thus\x20making\x20it\x20even\x20harder\x20to\x20see\x20the\x20dithering\x20pattern\x0a\x09\x09vec3\x20dither_shift_RGB\x20=\x20vec3(\x200.25\x20/\x20255.0,\x20-0.25\x20/\x20255.0,\x200.25\x20/\x20255.0\x20);\x0a\x0a\x09\x09//modify\x20shift\x20according\x20to\x20grid\x20position.\x0a\x09\x09dither_shift_RGB\x20=\x20mix(\x202.0\x20*\x20dither_shift_RGB,\x20-2.0\x20*\x20dither_shift_RGB,\x20grid_position\x20);\x0a\x0a\x09\x09//shift\x20the\x20color\x20by\x20dither_shift\x0a\x09\x09return\x20color\x20+\x20dither_shift_RGB;\x0a\x09}\x0a\x0a#endif\x0a','roughnessmap_fragment':'\x0afloat\x20roughnessFactor\x20=\x20roughness;\x0a\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x0a\x09vec4\x20texelRoughness\x20=\x20texture2D(\x20roughnessMap,\x20vRoughnessMapUv\x20);\x0a\x0a\x09//\x20reads\x20channel\x20G,\x20compatible\x20with\x20a\x20combined\x20OcclusionRoughnessMetallic\x20(RGB)\x20texture\x0a\x09roughnessFactor\x20*=\x20texelRoughness.g;\x0a\x0a#endif\x0a','roughnessmap_pars_fragment':'\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x0a\x09uniform\x20sampler2D\x20roughnessMap;\x0a\x0a#endif\x0a','shadowmap_pars_fragment':'\x0a#if\x20NUM_SPOT_LIGHT_COORDS\x20>\x200\x0a\x0a\x09varying\x20vec4\x20vSpotLightCoord[\x20NUM_SPOT_LIGHT_COORDS\x20];\x0a\x0a#endif\x0a\x0a#if\x20NUM_SPOT_LIGHT_MAPS\x20>\x200\x0a\x0a\x09uniform\x20sampler2D\x20spotLightMap[\x20NUM_SPOT_LIGHT_MAPS\x20];\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_SHADOWMAP\x0a\x0a\x09#if\x20NUM_DIR_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09uniform\x20sampler2D\x20directionalShadowMap[\x20NUM_DIR_LIGHT_SHADOWS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHT_SHADOWS\x20];\x0a\x0a\x09\x09struct\x20DirectionalLightShadow\x20{\x0a\x09\x09\x09float\x20shadowBias;\x0a\x09\x09\x09float\x20shadowNormalBias;\x0a\x09\x09\x09float\x20shadowRadius;\x0a\x09\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09};\x0a\x0a\x09\x09uniform\x20DirectionalLightShadow\x20directionalLightShadows[\x20NUM_DIR_LIGHT_SHADOWS\x20];\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20NUM_SPOT_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09uniform\x20sampler2D\x20spotShadowMap[\x20NUM_SPOT_LIGHT_SHADOWS\x20];\x0a\x0a\x09\x09struct\x20SpotLightShadow\x20{\x0a\x09\x09\x09float\x20shadowBias;\x0a\x09\x09\x09float\x20shadowNormalBias;\x0a\x09\x09\x09float\x20shadowRadius;\x0a\x09\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09};\x0a\x0a\x09\x09uniform\x20SpotLightShadow\x20spotLightShadows[\x20NUM_SPOT_LIGHT_SHADOWS\x20];\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20NUM_POINT_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09uniform\x20sampler2D\x20pointShadowMap[\x20NUM_POINT_LIGHT_SHADOWS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHT_SHADOWS\x20];\x0a\x0a\x09\x09struct\x20PointLightShadow\x20{\x0a\x09\x09\x09float\x20shadowBias;\x0a\x09\x09\x09float\x20shadowNormalBias;\x0a\x09\x09\x09float\x20shadowRadius;\x0a\x09\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09\x09float\x20shadowCameraNear;\x0a\x09\x09\x09float\x20shadowCameraFar;\x0a\x09\x09};\x0a\x0a\x09\x09uniform\x20PointLightShadow\x20pointLightShadows[\x20NUM_POINT_LIGHT_SHADOWS\x20];\x0a\x0a\x09#endif\x0a\x0a\x09/*\x0a\x09#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x0a\x09\x09//\x20TODO\x20(abelnation):\x20create\x20uniforms\x20for\x20area\x20light\x20shadows\x0a\x0a\x09#endif\x0a\x09*/\x0a\x0a\x09float\x20texture2DCompare(\x20sampler2D\x20depths,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x0a\x09\x09return\x20step(\x20compare,\x20unpackRGBAToDepth(\x20texture2D(\x20depths,\x20uv\x20)\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09vec2\x20texture2DDistribution(\x20sampler2D\x20shadow,\x20vec2\x20uv\x20)\x20{\x0a\x0a\x09\x09return\x20unpackRGBATo2Half(\x20texture2D(\x20shadow,\x20uv\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20VSMShadow\x20(sampler2D\x20shadow,\x20vec2\x20uv,\x20float\x20compare\x20){\x0a\x0a\x09\x09float\x20occlusion\x20=\x201.0;\x0a\x0a\x09\x09vec2\x20distribution\x20=\x20texture2DDistribution(\x20shadow,\x20uv\x20);\x0a\x0a\x09\x09float\x20hard_shadow\x20=\x20step(\x20compare\x20,\x20distribution.x\x20);\x20//\x20Hard\x20Shadow\x0a\x0a\x09\x09if\x20(hard_shadow\x20!=\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09float\x20distance\x20=\x20compare\x20-\x20distribution.x\x20;\x0a\x09\x09\x09float\x20variance\x20=\x20max(\x200.00000,\x20distribution.y\x20*\x20distribution.y\x20);\x0a\x09\x09\x09float\x20softness_probability\x20=\x20variance\x20/\x20(variance\x20+\x20distance\x20*\x20distance\x20);\x20//\x20Chebeyshevs\x20inequality\x0a\x09\x09\x09softness_probability\x20=\x20clamp(\x20(\x20softness_probability\x20-\x200.3\x20)\x20/\x20(\x200.95\x20-\x200.3\x20),\x200.0,\x201.0\x20);\x20//\x200.3\x20reduces\x20light\x20bleed\x0a\x09\x09\x09occlusion\x20=\x20clamp(\x20max(\x20hard_shadow,\x20softness_probability\x20),\x200.0,\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x09\x09return\x20occlusion;\x0a\x0a\x09}\x0a\x0a\x09float\x20getShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord\x20)\x20{\x0a\x0a\x09\x09float\x20shadow\x20=\x201.0;\x0a\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0a\x09\x09shadowCoord.z\x20+=\x20shadowBias;\x0a\x0a\x09\x09bool\x20inFrustum\x20=\x20shadowCoord.x\x20>=\x200.0\x20&&\x20shadowCoord.x\x20<=\x201.0\x20&&\x20shadowCoord.y\x20>=\x200.0\x20&&\x20shadowCoord.y\x20<=\x201.0;\x0a\x09\x09bool\x20frustumTest\x20=\x20inFrustum\x20&&\x20shadowCoord.z\x20<=\x201.0;\x0a\x0a\x09\x09if\x20(\x20frustumTest\x20)\x20{\x0a\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x0a\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx2\x20=\x20dx0\x20/\x202.0;\x0a\x09\x09\x09float\x20dy2\x20=\x20dy0\x20/\x202.0;\x0a\x09\x09\x09float\x20dx3\x20=\x20dx1\x20/\x202.0;\x0a\x09\x09\x09float\x20dy3\x20=\x20dy1\x20/\x202.0;\x0a\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx2,\x20dy2\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy2\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx3,\x20dy2\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx2,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx3,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx2,\x20dy3\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy3\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx3,\x20dy3\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x2017.0\x20);\x0a\x0a\x09\x09#elif\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx\x20=\x20texelSize.x;\x0a\x09\x09\x09float\x20dy\x20=\x20texelSize.y;\x0a\x0a\x09\x09\x09vec2\x20uv\x20=\x20shadowCoord.xy;\x0a\x09\x09\x09vec2\x20f\x20=\x20fract(\x20uv\x20*\x20shadowMapSize\x20+\x200.5\x20);\x0a\x09\x09\x09uv\x20-=\x20f\x20*\x20texelSize;\x0a\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20uv,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x20dx,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x200.0,\x20dy\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20uv\x20+\x20texelSize,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09mix(\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x20-dx,\x200.0\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x202.0\x20*\x20dx,\x200.0\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20f.x\x20)\x20+\x0a\x09\x09\x09\x09mix(\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x20-dx,\x20dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x202.0\x20*\x20dx,\x20dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20f.x\x20)\x20+\x0a\x09\x09\x09\x09mix(\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x200.0,\x20-dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x200.0,\x202.0\x20*\x20dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20f.y\x20)\x20+\x0a\x09\x09\x09\x09mix(\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x20dx,\x20-dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x20dx,\x202.0\x20*\x20dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x20f.y\x20)\x20+\x0a\x09\x09\x09\x09mix(\x20mix(\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x20-dx,\x20-dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x09\x20\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x202.0\x20*\x20dx,\x20-dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x09\x20\x20f.x\x20),\x0a\x09\x09\x09\x09\x09\x20mix(\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x20-dx,\x202.0\x20*\x20dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x09\x20\x20texture2DCompare(\x20shadowMap,\x20uv\x20+\x20vec2(\x202.0\x20*\x20dx,\x202.0\x20*\x20dy\x20),\x20shadowCoord.z\x20),\x0a\x09\x09\x09\x09\x09\x09\x20\x20f.x\x20),\x0a\x09\x09\x09\x09\x09\x20f.y\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x0a\x09\x09#elif\x20defined(\x20SHADOWMAP_TYPE_VSM\x20)\x0a\x0a\x09\x09\x09shadow\x20=\x20VSMShadow(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20);\x0a\x0a\x09\x09#else\x20//\x20no\x20percentage-closer\x20filtering:\x0a\x0a\x09\x09\x09shadow\x20=\x20texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20);\x0a\x0a\x09\x09#endif\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x20shadow;\x0a\x0a\x09}\x0a\x0a\x09//\x20cubeToUV()\x20maps\x20a\x203D\x20direction\x20vector\x20suitable\x20for\x20cube\x20texture\x20mapping\x20to\x20a\x202D\x0a\x09//\x20vector\x20suitable\x20for\x202D\x20texture\x20mapping.\x20This\x20code\x20uses\x20the\x20following\x20layout\x20for\x20the\x0a\x09//\x202D\x20texture:\x0a\x09//\x0a\x09//\x20xzXZ\x0a\x09//\x20\x20y\x20Y\x0a\x09//\x0a\x09//\x20Y\x20-\x20Positive\x20y\x20direction\x0a\x09//\x20y\x20-\x20Negative\x20y\x20direction\x0a\x09//\x20X\x20-\x20Positive\x20x\x20direction\x0a\x09//\x20x\x20-\x20Negative\x20x\x20direction\x0a\x09//\x20Z\x20-\x20Positive\x20z\x20direction\x0a\x09//\x20z\x20-\x20Negative\x20z\x20direction\x0a\x09//\x0a\x09//\x20Source\x20and\x20test\x20bed:\x0a\x09//\x20https://gist.github.com/tschw/da10c43c467ce8afd0c4\x0a\x0a\x09vec2\x20cubeToUV(\x20vec3\x20v,\x20float\x20texelSizeY\x20)\x20{\x0a\x0a\x09\x09//\x20Number\x20of\x20texels\x20to\x20avoid\x20at\x20the\x20edge\x20of\x20each\x20square\x0a\x0a\x09\x09vec3\x20absV\x20=\x20abs(\x20v\x20);\x0a\x0a\x09\x09//\x20Intersect\x20unit\x20cube\x0a\x0a\x09\x09float\x20scaleToCube\x20=\x201.0\x20/\x20max(\x20absV.x,\x20max(\x20absV.y,\x20absV.z\x20)\x20);\x0a\x09\x09absV\x20*=\x20scaleToCube;\x0a\x0a\x09\x09//\x20Apply\x20scale\x20to\x20avoid\x20seams\x0a\x0a\x09\x09//\x20two\x20texels\x20less\x20per\x20square\x20(one\x20texel\x20will\x20do\x20for\x20NEAREST)\x0a\x09\x09v\x20*=\x20scaleToCube\x20*\x20(\x201.0\x20-\x202.0\x20*\x20texelSizeY\x20);\x0a\x0a\x09\x09//\x20Unwrap\x0a\x0a\x09\x09//\x20space:\x20-1\x20...\x201\x20range\x20for\x20each\x20square\x0a\x09\x09//\x0a\x09\x09//\x20#X##\x09\x09dim\x20\x20\x20\x20:=\x20(\x204\x20,\x202\x20)\x0a\x09\x09//\x20\x20#\x20#\x09\x09center\x20:=\x20(\x201\x20,\x201\x20)\x0a\x0a\x09\x09vec2\x20planar\x20=\x20v.xy;\x0a\x0a\x09\x09float\x20almostATexel\x20=\x201.5\x20*\x20texelSizeY;\x0a\x09\x09float\x20almostOne\x20=\x201.0\x20-\x20almostATexel;\x0a\x0a\x09\x09if\x20(\x20absV.z\x20>=\x20almostOne\x20)\x20{\x0a\x0a\x09\x09\x09if\x20(\x20v.z\x20>\x200.0\x20)\x0a\x09\x09\x09\x09planar.x\x20=\x204.0\x20-\x20v.x;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20absV.x\x20>=\x20almostOne\x20)\x20{\x0a\x0a\x09\x09\x09float\x20signX\x20=\x20sign(\x20v.x\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.z\x20*\x20signX\x20+\x202.0\x20*\x20signX;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20absV.y\x20>=\x20almostOne\x20)\x20{\x0a\x0a\x09\x09\x09float\x20signY\x20=\x20sign(\x20v.y\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.x\x20+\x202.0\x20*\x20signY\x20+\x202.0;\x0a\x09\x09\x09planar.y\x20=\x20v.z\x20*\x20signY\x20-\x202.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09//\x20Transform\x20to\x20UV\x20space\x0a\x0a\x09\x09//\x20scale\x20:=\x200.5\x20/\x20dim\x0a\x09\x09//\x20translate\x20:=\x20(\x20center\x20+\x200.5\x20)\x20/\x20dim\x0a\x09\x09return\x20vec2(\x200.125,\x200.25\x20)\x20*\x20planar\x20+\x20vec2(\x200.375,\x200.75\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20getPointShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord,\x20float\x20shadowCameraNear,\x20float\x20shadowCameraFar\x20)\x20{\x0a\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20(\x20shadowMapSize\x20*\x20vec2(\x204.0,\x202.0\x20)\x20);\x0a\x0a\x09\x09//\x20for\x20point\x20lights,\x20the\x20uniform\x20@vShadowCoord\x20is\x20re-purposed\x20to\x20hold\x0a\x09\x09//\x20the\x20vector\x20from\x20the\x20light\x20to\x20the\x20world-space\x20position\x20of\x20the\x20fragment.\x0a\x09\x09vec3\x20lightToPosition\x20=\x20shadowCoord.xyz;\x0a\x0a\x09\x09//\x20dp\x20=\x20normalized\x20distance\x20from\x20light\x20to\x20fragment\x20position\x0a\x09\x09float\x20dp\x20=\x20(\x20length(\x20lightToPosition\x20)\x20-\x20shadowCameraNear\x20)\x20/\x20(\x20shadowCameraFar\x20-\x20shadowCameraNear\x20);\x20//\x20need\x20to\x20clamp?\x0a\x09\x09dp\x20+=\x20shadowBias;\x0a\x0a\x09\x09//\x20bd3D\x20=\x20base\x20direction\x203D\x0a\x09\x09vec3\x20bd3D\x20=\x20normalize(\x20lightToPosition\x20);\x0a\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x20||\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x20||\x20defined(\x20SHADOWMAP_TYPE_VSM\x20)\x0a\x0a\x09\x09\x09vec2\x20offset\x20=\x20vec2(\x20-\x201,\x201\x20)\x20*\x20shadowRadius\x20*\x20texelSize.y;\x0a\x0a\x09\x09\x09return\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxx,\x20texelSize.y\x20),\x20dp\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x0a\x09\x09#else\x20//\x20no\x20percentage-closer\x20filtering\x0a\x0a\x09\x09\x09return\x20texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20);\x0a\x0a\x09\x09#endif\x0a\x0a\x09}\x0a\x0a#endif\x0a','shadowmap_pars_vertex':'\x0a\x0a#if\x20NUM_SPOT_LIGHT_COORDS\x20>\x200\x0a\x0a\x09uniform\x20mat4\x20spotLightMatrix[\x20NUM_SPOT_LIGHT_COORDS\x20];\x0a\x09varying\x20vec4\x20vSpotLightCoord[\x20NUM_SPOT_LIGHT_COORDS\x20];\x0a\x0a#endif\x0a\x0a#ifdef\x20USE_SHADOWMAP\x0a\x0a\x09#if\x20NUM_DIR_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09uniform\x20mat4\x20directionalShadowMatrix[\x20NUM_DIR_LIGHT_SHADOWS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHT_SHADOWS\x20];\x0a\x0a\x09\x09struct\x20DirectionalLightShadow\x20{\x0a\x09\x09\x09float\x20shadowBias;\x0a\x09\x09\x09float\x20shadowNormalBias;\x0a\x09\x09\x09float\x20shadowRadius;\x0a\x09\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09};\x0a\x0a\x09\x09uniform\x20DirectionalLightShadow\x20directionalLightShadows[\x20NUM_DIR_LIGHT_SHADOWS\x20];\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20NUM_SPOT_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09struct\x20SpotLightShadow\x20{\x0a\x09\x09\x09float\x20shadowBias;\x0a\x09\x09\x09float\x20shadowNormalBias;\x0a\x09\x09\x09float\x20shadowRadius;\x0a\x09\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09};\x0a\x0a\x09\x09uniform\x20SpotLightShadow\x20spotLightShadows[\x20NUM_SPOT_LIGHT_SHADOWS\x20];\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20NUM_POINT_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09uniform\x20mat4\x20pointShadowMatrix[\x20NUM_POINT_LIGHT_SHADOWS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHT_SHADOWS\x20];\x0a\x0a\x09\x09struct\x20PointLightShadow\x20{\x0a\x09\x09\x09float\x20shadowBias;\x0a\x09\x09\x09float\x20shadowNormalBias;\x0a\x09\x09\x09float\x20shadowRadius;\x0a\x09\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09\x09float\x20shadowCameraNear;\x0a\x09\x09\x09float\x20shadowCameraFar;\x0a\x09\x09};\x0a\x0a\x09\x09uniform\x20PointLightShadow\x20pointLightShadows[\x20NUM_POINT_LIGHT_SHADOWS\x20];\x0a\x0a\x09#endif\x0a\x0a\x09/*\x0a\x09#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x0a\x09\x09//\x20TODO\x20(abelnation):\x20uniforms\x20for\x20area\x20light\x20shadows\x0a\x0a\x09#endif\x0a\x09*/\x0a\x0a#endif\x0a','shadowmap_vertex':'\x0a\x0a#if\x20(\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20(\x20NUM_DIR_LIGHT_SHADOWS\x20>\x200\x20||\x20NUM_POINT_LIGHT_SHADOWS\x20>\x200\x20)\x20)\x20||\x20(\x20NUM_SPOT_LIGHT_COORDS\x20>\x200\x20)\x0a\x0a\x09//\x20Offsetting\x20the\x20position\x20used\x20for\x20querying\x20occlusion\x20along\x20the\x20world\x20normal\x20can\x20be\x20used\x20to\x20reduce\x20shadow\x20acne.\x0a\x09vec3\x20shadowWorldNormal\x20=\x20inverseTransformDirection(\x20transformedNormal,\x20viewMatrix\x20);\x0a\x09vec4\x20shadowWorldPosition;\x0a\x0a#endif\x0a\x0a#if\x20defined(\x20USE_SHADOWMAP\x20)\x0a\x0a\x09#if\x20NUM_DIR_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09#pragma\x20unroll_loop_start\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHT_SHADOWS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09\x09shadowWorldPosition\x20=\x20worldPosition\x20+\x20vec4(\x20shadowWorldNormal\x20*\x20directionalLightShadows[\x20i\x20].shadowNormalBias,\x200\x20);\x0a\x09\x09\x09vDirectionalShadowCoord[\x20i\x20]\x20=\x20directionalShadowMatrix[\x20i\x20]\x20*\x20shadowWorldPosition;\x0a\x0a\x09\x09}\x0a\x09\x09#pragma\x20unroll_loop_end\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20NUM_POINT_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09\x09#pragma\x20unroll_loop_start\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHT_SHADOWS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09\x09shadowWorldPosition\x20=\x20worldPosition\x20+\x20vec4(\x20shadowWorldNormal\x20*\x20pointLightShadows[\x20i\x20].shadowNormalBias,\x200\x20);\x0a\x09\x09\x09vPointShadowCoord[\x20i\x20]\x20=\x20pointShadowMatrix[\x20i\x20]\x20*\x20shadowWorldPosition;\x0a\x0a\x09\x09}\x0a\x09\x09#pragma\x20unroll_loop_end\x0a\x0a\x09#endif\x0a\x0a\x09/*\x0a\x09#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x0a\x09\x09//\x20TODO\x20(abelnation):\x20update\x20vAreaShadowCoord\x20with\x20area\x20light\x20info\x0a\x0a\x09#endif\x0a\x09*/\x0a\x0a#endif\x0a\x0a//\x20spot\x20lights\x20can\x20be\x20evaluated\x20without\x20active\x20shadow\x20mapping\x20(when\x20SpotLight.map\x20is\x20used)\x0a\x0a#if\x20NUM_SPOT_LIGHT_COORDS\x20>\x200\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHT_COORDS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09shadowWorldPosition\x20=\x20worldPosition;\x0a\x09\x09#if\x20(\x20defined(\x20USE_SHADOWMAP\x20)\x20&&\x20UNROLLED_LOOP_INDEX\x20<\x20NUM_SPOT_LIGHT_SHADOWS\x20)\x0a\x09\x09\x09shadowWorldPosition.xyz\x20+=\x20shadowWorldNormal\x20*\x20spotLightShadows[\x20i\x20].shadowNormalBias;\x0a\x09\x09#endif\x0a\x09\x09vSpotLightCoord[\x20i\x20]\x20=\x20spotLightMatrix[\x20i\x20]\x20*\x20shadowWorldPosition;\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a#endif\x0a\x0a\x0a','shadowmask_pars_fragment':'\x0afloat\x20getShadowMask()\x20{\x0a\x0a\x09float\x20shadow\x20=\x201.0;\x0a\x0a\x09#ifdef\x20USE_SHADOWMAP\x0a\x0a\x09#if\x20NUM_DIR_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09DirectionalLightShadow\x20directionalLight;\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHT_SHADOWS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09directionalLight\x20=\x20directionalLightShadows[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20receiveShadow\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20NUM_SPOT_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09SpotLightShadow\x20spotLight;\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHT_SHADOWS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09spotLight\x20=\x20spotLightShadows[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20receiveShadow\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotLightCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a\x09#endif\x0a\x0a\x09#if\x20NUM_POINT_LIGHT_SHADOWS\x20>\x200\x0a\x0a\x09PointLightShadow\x20pointLight;\x0a\x0a\x09#pragma\x20unroll_loop_start\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHT_SHADOWS;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09pointLight\x20=\x20pointLightShadows[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20receiveShadow\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x0a\x09}\x0a\x09#pragma\x20unroll_loop_end\x0a\x0a\x09#endif\x0a\x0a\x09/*\x0a\x09#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x0a\x09\x09//\x20TODO\x20(abelnation):\x20update\x20shadow\x20for\x20Area\x20light\x0a\x0a\x09#endif\x0a\x09*/\x0a\x0a\x09#endif\x0a\x0a\x09return\x20shadow;\x0a\x0a}\x0a','skinbase_vertex':'\x0a#ifdef\x20USE_SKINNING\x0a\x0a\x09mat4\x20boneMatX\x20=\x20getBoneMatrix(\x20skinIndex.x\x20);\x0a\x09mat4\x20boneMatY\x20=\x20getBoneMatrix(\x20skinIndex.y\x20);\x0a\x09mat4\x20boneMatZ\x20=\x20getBoneMatrix(\x20skinIndex.z\x20);\x0a\x09mat4\x20boneMatW\x20=\x20getBoneMatrix(\x20skinIndex.w\x20);\x0a\x0a#endif\x0a','skinning_pars_vertex':'\x0a#ifdef\x20USE_SKINNING\x0a\x0a\x09uniform\x20mat4\x20bindMatrix;\x0a\x09uniform\x20mat4\x20bindMatrixInverse;\x0a\x0a\x09uniform\x20highp\x20sampler2D\x20boneTexture;\x0a\x0a\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x0a\x09\x09int\x20size\x20=\x20textureSize(\x20boneTexture,\x200\x20).x;\x0a\x09\x09int\x20j\x20=\x20int(\x20i\x20)\x20*\x204;\x0a\x09\x09int\x20x\x20=\x20j\x20%\x20size;\x0a\x09\x09int\x20y\x20=\x20j\x20/\x20size;\x0a\x09\x09vec4\x20v1\x20=\x20texelFetch(\x20boneTexture,\x20ivec2(\x20x,\x20y\x20),\x200\x20);\x0a\x09\x09vec4\x20v2\x20=\x20texelFetch(\x20boneTexture,\x20ivec2(\x20x\x20+\x201,\x20y\x20),\x200\x20);\x0a\x09\x09vec4\x20v3\x20=\x20texelFetch(\x20boneTexture,\x20ivec2(\x20x\x20+\x202,\x20y\x20),\x200\x20);\x0a\x09\x09vec4\x20v4\x20=\x20texelFetch(\x20boneTexture,\x20ivec2(\x20x\x20+\x203,\x20y\x20),\x200\x20);\x0a\x0a\x09\x09return\x20mat4(\x20v1,\x20v2,\x20v3,\x20v4\x20);\x0a\x0a\x09}\x0a\x0a#endif\x0a','skinning_vertex':'\x0a#ifdef\x20USE_SKINNING\x0a\x0a\x09vec4\x20skinVertex\x20=\x20bindMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a\x0a\x09vec4\x20skinned\x20=\x20vec4(\x200.0\x20);\x0a\x09skinned\x20+=\x20boneMatX\x20*\x20skinVertex\x20*\x20skinWeight.x;\x0a\x09skinned\x20+=\x20boneMatY\x20*\x20skinVertex\x20*\x20skinWeight.y;\x0a\x09skinned\x20+=\x20boneMatZ\x20*\x20skinVertex\x20*\x20skinWeight.z;\x0a\x09skinned\x20+=\x20boneMatW\x20*\x20skinVertex\x20*\x20skinWeight.w;\x0a\x0a\x09transformed\x20=\x20(\x20bindMatrixInverse\x20*\x20skinned\x20).xyz;\x0a\x0a#endif\x0a','skinnormal_vertex':'\x0a#ifdef\x20USE_SKINNING\x0a\x0a\x09mat4\x20skinMatrix\x20=\x20mat4(\x200.0\x20);\x0a\x09skinMatrix\x20+=\x20skinWeight.x\x20*\x20boneMatX;\x0a\x09skinMatrix\x20+=\x20skinWeight.y\x20*\x20boneMatY;\x0a\x09skinMatrix\x20+=\x20skinWeight.z\x20*\x20boneMatZ;\x0a\x09skinMatrix\x20+=\x20skinWeight.w\x20*\x20boneMatW;\x0a\x09skinMatrix\x20=\x20bindMatrixInverse\x20*\x20skinMatrix\x20*\x20bindMatrix;\x0a\x0a\x09objectNormal\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectNormal,\x200.0\x20)\x20).xyz;\x0a\x0a\x09#ifdef\x20USE_TANGENT\x0a\x0a\x09\x09objectTangent\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectTangent,\x200.0\x20)\x20).xyz;\x0a\x0a\x09#endif\x0a\x0a#endif\x0a','specularmap_fragment':'\x0afloat\x20specularStrength;\x0a\x0a#ifdef\x20USE_SPECULARMAP\x0a\x0a\x09vec4\x20texelSpecular\x20=\x20texture2D(\x20specularMap,\x20vSpecularMapUv\x20);\x0a\x09specularStrength\x20=\x20texelSpecular.r;\x0a\x0a#else\x0a\x0a\x09specularStrength\x20=\x201.0;\x0a\x0a#endif\x0a','specularmap_pars_fragment':'\x0a#ifdef\x20USE_SPECULARMAP\x0a\x0a\x09uniform\x20sampler2D\x20specularMap;\x0a\x0a#endif\x0a','tonemapping_fragment':'\x0a#if\x20defined(\x20TONE_MAPPING\x20)\x0a\x0a\x09gl_FragColor.rgb\x20=\x20toneMapping(\x20gl_FragColor.rgb\x20);\x0a\x0a#endif\x0a','tonemapping_pars_fragment':'\x0a#ifndef\x20saturate\x0a//\x20<common>\x20may\x20have\x20defined\x20saturate()\x20already\x0a#define\x20saturate(\x20a\x20)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#endif\x0a\x0auniform\x20float\x20toneMappingExposure;\x0a\x0a//\x20exposure\x20only\x0avec3\x20LinearToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x0a\x09return\x20saturate(\x20toneMappingExposure\x20*\x20color\x20);\x0a\x0a}\x0a\x0a//\x20source:\x20https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf\x0avec3\x20ReinhardToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20color\x20/\x20(\x20vec3(\x201.0\x20)\x20+\x20color\x20)\x20);\x0a\x0a}\x0a\x0a//\x20source:\x20http://filmicworlds.com/blog/filmic-tonemapping-operators/\x0avec3\x20OptimizedCineonToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x0a\x09//\x20optimized\x20filmic\x20operator\x20by\x20Jim\x20Hejl\x20and\x20Richard\x20Burgess-Dawson\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09color\x20=\x20max(\x20vec3(\x200.0\x20),\x20color\x20-\x200.004\x20);\x0a\x09return\x20pow(\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x200.5\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x201.7\x20)\x20+\x200.06\x20),\x20vec3(\x202.2\x20)\x20);\x0a\x0a}\x0a\x0a//\x20source:\x20https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\x0avec3\x20RRTAndODTFit(\x20vec3\x20v\x20)\x20{\x0a\x0a\x09vec3\x20a\x20=\x20v\x20*\x20(\x20v\x20+\x200.0245786\x20)\x20-\x200.000090537;\x0a\x09vec3\x20b\x20=\x20v\x20*\x20(\x200.983729\x20*\x20v\x20+\x200.4329510\x20)\x20+\x200.238081;\x0a\x09return\x20a\x20/\x20b;\x0a\x0a}\x0a\x0a//\x20this\x20implementation\x20of\x20ACES\x20is\x20modified\x20to\x20accommodate\x20a\x20brighter\x20viewing\x20environment.\x0a//\x20the\x20scale\x20factor\x20of\x201/0.6\x20is\x20subjective.\x20see\x20discussion\x20in\x20#19621.\x0a\x0avec3\x20ACESFilmicToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x0a\x09//\x20sRGB\x20=>\x20XYZ\x20=>\x20D65_2_D60\x20=>\x20AP1\x20=>\x20RRT_SAT\x0a\x09const\x20mat3\x20ACESInputMat\x20=\x20mat3(\x0a\x09\x09vec3(\x200.59719,\x200.07600,\x200.02840\x20),\x20//\x20transposed\x20from\x20source\x0a\x09\x09vec3(\x200.35458,\x200.90834,\x200.13383\x20),\x0a\x09\x09vec3(\x200.04823,\x200.01566,\x200.83777\x20)\x0a\x09);\x0a\x0a\x09//\x20ODT_SAT\x20=>\x20XYZ\x20=>\x20D60_2_D65\x20=>\x20sRGB\x0a\x09const\x20mat3\x20ACESOutputMat\x20=\x20mat3(\x0a\x09\x09vec3(\x20\x201.60475,\x20-0.10208,\x20-0.00327\x20),\x20//\x20transposed\x20from\x20source\x0a\x09\x09vec3(\x20-0.53108,\x20\x201.10813,\x20-0.07276\x20),\x0a\x09\x09vec3(\x20-0.07367,\x20-0.00605,\x20\x201.07602\x20)\x0a\x09);\x0a\x0a\x09color\x20*=\x20toneMappingExposure\x20/\x200.6;\x0a\x0a\x09color\x20=\x20ACESInputMat\x20*\x20color;\x0a\x0a\x09//\x20Apply\x20RRT\x20and\x20ODT\x0a\x09color\x20=\x20RRTAndODTFit(\x20color\x20);\x0a\x0a\x09color\x20=\x20ACESOutputMat\x20*\x20color;\x0a\x0a\x09//\x20Clamp\x20to\x20[0,\x201]\x0a\x09return\x20saturate(\x20color\x20);\x0a\x0a}\x0a\x0avec3\x20CustomToneMapping(\x20vec3\x20color\x20)\x20{\x20return\x20color;\x20}\x0a','transmission_fragment':'\x0a#ifdef\x20USE_TRANSMISSION\x0a\x0a\x09material.transmission\x20=\x20transmission;\x0a\x09material.transmissionAlpha\x20=\x201.0;\x0a\x09material.thickness\x20=\x20thickness;\x0a\x09material.attenuationDistance\x20=\x20attenuationDistance;\x0a\x09material.attenuationColor\x20=\x20attenuationColor;\x0a\x0a\x09#ifdef\x20USE_TRANSMISSIONMAP\x0a\x0a\x09\x09material.transmission\x20*=\x20texture2D(\x20transmissionMap,\x20vTransmissionMapUv\x20).r;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_THICKNESSMAP\x0a\x0a\x09\x09material.thickness\x20*=\x20texture2D(\x20thicknessMap,\x20vThicknessMapUv\x20).g;\x0a\x0a\x09#endif\x0a\x0a\x09vec3\x20pos\x20=\x20vWorldPosition;\x0a\x09vec3\x20v\x20=\x20normalize(\x20cameraPosition\x20-\x20pos\x20);\x0a\x09vec3\x20n\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x0a\x09vec4\x20transmitted\x20=\x20getIBLVolumeRefraction(\x0a\x09\x09n,\x20v,\x20material.roughness,\x20material.diffuseColor,\x20material.specularColor,\x20material.specularF90,\x0a\x09\x09pos,\x20modelMatrix,\x20viewMatrix,\x20projectionMatrix,\x20material.ior,\x20material.thickness,\x0a\x09\x09material.attenuationColor,\x20material.attenuationDistance\x20);\x0a\x0a\x09material.transmissionAlpha\x20=\x20mix(\x20material.transmissionAlpha,\x20transmitted.a,\x20material.transmission\x20);\x0a\x0a\x09totalDiffuse\x20=\x20mix(\x20totalDiffuse,\x20transmitted.rgb,\x20material.transmission\x20);\x0a\x0a#endif\x0a','transmission_pars_fragment':'\x0a#ifdef\x20USE_TRANSMISSION\x0a\x0a\x09//\x20Transmission\x20code\x20is\x20based\x20on\x20glTF-Sampler-Viewer\x0a\x09//\x20https://github.com/KhronosGroup/glTF-Sample-Viewer\x0a\x0a\x09uniform\x20float\x20transmission;\x0a\x09uniform\x20float\x20thickness;\x0a\x09uniform\x20float\x20attenuationDistance;\x0a\x09uniform\x20vec3\x20attenuationColor;\x0a\x0a\x09#ifdef\x20USE_TRANSMISSIONMAP\x0a\x0a\x09\x09uniform\x20sampler2D\x20transmissionMap;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_THICKNESSMAP\x0a\x0a\x09\x09uniform\x20sampler2D\x20thicknessMap;\x0a\x0a\x09#endif\x0a\x0a\x09uniform\x20vec2\x20transmissionSamplerSize;\x0a\x09uniform\x20sampler2D\x20transmissionSamplerMap;\x0a\x0a\x09uniform\x20mat4\x20modelMatrix;\x0a\x09uniform\x20mat4\x20projectionMatrix;\x0a\x0a\x09varying\x20vec3\x20vWorldPosition;\x0a\x0a\x09//\x20Mipped\x20Bicubic\x20Texture\x20Filtering\x20by\x20N8\x0a\x09//\x20https://www.shadertoy.com/view/Dl2SDW\x0a\x0a\x09float\x20w0(\x20float\x20a\x20)\x20{\x0a\x0a\x09\x09return\x20(\x201.0\x20/\x206.0\x20)\x20*\x20(\x20a\x20*\x20(\x20a\x20*\x20(\x20-\x20a\x20+\x203.0\x20)\x20-\x203.0\x20)\x20+\x201.0\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20w1(\x20float\x20a\x20)\x20{\x0a\x0a\x09\x09return\x20(\x201.0\x20/\x206.0\x20)\x20*\x20(\x20a\x20*\x20\x20a\x20*\x20(\x203.0\x20*\x20a\x20-\x206.0\x20)\x20+\x204.0\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20w2(\x20float\x20a\x20){\x0a\x0a\x09\x09return\x20(\x201.0\x20/\x206.0\x20)\x20*\x20(\x20a\x20*\x20(\x20a\x20*\x20(\x20-\x203.0\x20*\x20a\x20+\x203.0\x20)\x20+\x203.0\x20)\x20+\x201.0\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20w3(\x20float\x20a\x20)\x20{\x0a\x0a\x09\x09return\x20(\x201.0\x20/\x206.0\x20)\x20*\x20(\x20a\x20*\x20a\x20*\x20a\x20);\x0a\x0a\x09}\x0a\x0a\x09//\x20g0\x20and\x20g1\x20are\x20the\x20two\x20amplitude\x20functions\x0a\x09float\x20g0(\x20float\x20a\x20)\x20{\x0a\x0a\x09\x09return\x20w0(\x20a\x20)\x20+\x20w1(\x20a\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20g1(\x20float\x20a\x20)\x20{\x0a\x0a\x09\x09return\x20w2(\x20a\x20)\x20+\x20w3(\x20a\x20);\x0a\x0a\x09}\x0a\x0a\x09//\x20h0\x20and\x20h1\x20are\x20the\x20two\x20offset\x20functions\x0a\x09float\x20h0(\x20float\x20a\x20)\x20{\x0a\x0a\x09\x09return\x20-\x201.0\x20+\x20w1(\x20a\x20)\x20/\x20(\x20w0(\x20a\x20)\x20+\x20w1(\x20a\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09float\x20h1(\x20float\x20a\x20)\x20{\x0a\x0a\x09\x09return\x201.0\x20+\x20w3(\x20a\x20)\x20/\x20(\x20w2(\x20a\x20)\x20+\x20w3(\x20a\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09vec4\x20bicubic(\x20sampler2D\x20tex,\x20vec2\x20uv,\x20vec4\x20texelSize,\x20float\x20lod\x20)\x20{\x0a\x0a\x09\x09uv\x20=\x20uv\x20*\x20texelSize.zw\x20+\x200.5;\x0a\x0a\x09\x09vec2\x20iuv\x20=\x20floor(\x20uv\x20);\x0a\x09\x09vec2\x20fuv\x20=\x20fract(\x20uv\x20);\x0a\x0a\x09\x09float\x20g0x\x20=\x20g0(\x20fuv.x\x20);\x0a\x09\x09float\x20g1x\x20=\x20g1(\x20fuv.x\x20);\x0a\x09\x09float\x20h0x\x20=\x20h0(\x20fuv.x\x20);\x0a\x09\x09float\x20h1x\x20=\x20h1(\x20fuv.x\x20);\x0a\x09\x09float\x20h0y\x20=\x20h0(\x20fuv.y\x20);\x0a\x09\x09float\x20h1y\x20=\x20h1(\x20fuv.y\x20);\x0a\x0a\x09\x09vec2\x20p0\x20=\x20(\x20vec2(\x20iuv.x\x20+\x20h0x,\x20iuv.y\x20+\x20h0y\x20)\x20-\x200.5\x20)\x20*\x20texelSize.xy;\x0a\x09\x09vec2\x20p1\x20=\x20(\x20vec2(\x20iuv.x\x20+\x20h1x,\x20iuv.y\x20+\x20h0y\x20)\x20-\x200.5\x20)\x20*\x20texelSize.xy;\x0a\x09\x09vec2\x20p2\x20=\x20(\x20vec2(\x20iuv.x\x20+\x20h0x,\x20iuv.y\x20+\x20h1y\x20)\x20-\x200.5\x20)\x20*\x20texelSize.xy;\x0a\x09\x09vec2\x20p3\x20=\x20(\x20vec2(\x20iuv.x\x20+\x20h1x,\x20iuv.y\x20+\x20h1y\x20)\x20-\x200.5\x20)\x20*\x20texelSize.xy;\x0a\x0a\x09\x09return\x20g0(\x20fuv.y\x20)\x20*\x20(\x20g0x\x20*\x20textureLod(\x20tex,\x20p0,\x20lod\x20)\x20+\x20g1x\x20*\x20textureLod(\x20tex,\x20p1,\x20lod\x20)\x20)\x20+\x0a\x09\x09\x09g1(\x20fuv.y\x20)\x20*\x20(\x20g0x\x20*\x20textureLod(\x20tex,\x20p2,\x20lod\x20)\x20+\x20g1x\x20*\x20textureLod(\x20tex,\x20p3,\x20lod\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09vec4\x20textureBicubic(\x20sampler2D\x20sampler,\x20vec2\x20uv,\x20float\x20lod\x20)\x20{\x0a\x0a\x09\x09vec2\x20fLodSize\x20=\x20vec2(\x20textureSize(\x20sampler,\x20int(\x20lod\x20)\x20)\x20);\x0a\x09\x09vec2\x20cLodSize\x20=\x20vec2(\x20textureSize(\x20sampler,\x20int(\x20lod\x20+\x201.0\x20)\x20)\x20);\x0a\x09\x09vec2\x20fLodSizeInv\x20=\x201.0\x20/\x20fLodSize;\x0a\x09\x09vec2\x20cLodSizeInv\x20=\x201.0\x20/\x20cLodSize;\x0a\x09\x09vec4\x20fSample\x20=\x20bicubic(\x20sampler,\x20uv,\x20vec4(\x20fLodSizeInv,\x20fLodSize\x20),\x20floor(\x20lod\x20)\x20);\x0a\x09\x09vec4\x20cSample\x20=\x20bicubic(\x20sampler,\x20uv,\x20vec4(\x20cLodSizeInv,\x20cLodSize\x20),\x20ceil(\x20lod\x20)\x20);\x0a\x09\x09return\x20mix(\x20fSample,\x20cSample,\x20fract(\x20lod\x20)\x20);\x0a\x0a\x09}\x0a\x0a\x09vec3\x20getVolumeTransmissionRay(\x20const\x20in\x20vec3\x20n,\x20const\x20in\x20vec3\x20v,\x20const\x20in\x20float\x20thickness,\x20const\x20in\x20float\x20ior,\x20const\x20in\x20mat4\x20modelMatrix\x20)\x20{\x0a\x0a\x09\x09//\x20Direction\x20of\x20refracted\x20light.\x0a\x09\x09vec3\x20refractionVector\x20=\x20refract(\x20-\x20v,\x20normalize(\x20n\x20),\x201.0\x20/\x20ior\x20);\x0a\x0a\x09\x09//\x20Compute\x20rotation-independant\x20scaling\x20of\x20the\x20model\x20matrix.\x0a\x09\x09vec3\x20modelScale;\x0a\x09\x09modelScale.x\x20=\x20length(\x20vec3(\x20modelMatrix[\x200\x20].xyz\x20)\x20);\x0a\x09\x09modelScale.y\x20=\x20length(\x20vec3(\x20modelMatrix[\x201\x20].xyz\x20)\x20);\x0a\x09\x09modelScale.z\x20=\x20length(\x20vec3(\x20modelMatrix[\x202\x20].xyz\x20)\x20);\x0a\x0a\x09\x09//\x20The\x20thickness\x20is\x20specified\x20in\x20local\x20space.\x0a\x09\x09return\x20normalize(\x20refractionVector\x20)\x20*\x20thickness\x20*\x20modelScale;\x0a\x0a\x09}\x0a\x0a\x09float\x20applyIorToRoughness(\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20float\x20ior\x20)\x20{\x0a\x0a\x09\x09//\x20Scale\x20roughness\x20with\x20IOR\x20so\x20that\x20an\x20IOR\x20of\x201.0\x20results\x20in\x20no\x20microfacet\x20refraction\x20and\x0a\x09\x09//\x20an\x20IOR\x20of\x201.5\x20results\x20in\x20the\x20default\x20amount\x20of\x20microfacet\x20refraction.\x0a\x09\x09return\x20roughness\x20*\x20clamp(\x20ior\x20*\x202.0\x20-\x202.0,\x200.0,\x201.0\x20);\x0a\x0a\x09}\x0a\x0a\x09vec4\x20getTransmissionSample(\x20const\x20in\x20vec2\x20fragCoord,\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20float\x20ior\x20)\x20{\x0a\x0a\x09\x09float\x20lod\x20=\x20log2(\x20transmissionSamplerSize.x\x20)\x20*\x20applyIorToRoughness(\x20roughness,\x20ior\x20);\x0a\x09\x09return\x20textureBicubic(\x20transmissionSamplerMap,\x20fragCoord.xy,\x20lod\x20);\x0a\x0a\x09}\x0a\x0a\x09vec3\x20volumeAttenuation(\x20const\x20in\x20float\x20transmissionDistance,\x20const\x20in\x20vec3\x20attenuationColor,\x20const\x20in\x20float\x20attenuationDistance\x20)\x20{\x0a\x0a\x09\x09if\x20(\x20isinf(\x20attenuationDistance\x20)\x20)\x20{\x0a\x0a\x09\x09\x09//\x20Attenuation\x20distance\x20is\x20+∞,\x20i.e.\x20the\x20transmitted\x20color\x20is\x20not\x20attenuated\x20at\x20all.\x0a\x09\x09\x09return\x20vec3(\x201.0\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09//\x20Compute\x20light\x20attenuation\x20using\x20Beer\x27s\x20law.\x0a\x09\x09\x09vec3\x20attenuationCoefficient\x20=\x20-log(\x20attenuationColor\x20)\x20/\x20attenuationDistance;\x0a\x09\x09\x09vec3\x20transmittance\x20=\x20exp(\x20-\x20attenuationCoefficient\x20*\x20transmissionDistance\x20);\x20//\x20Beer\x27s\x20law\x0a\x09\x09\x09return\x20transmittance;\x0a\x0a\x09\x09}\x0a\x0a\x09}\x0a\x0a\x09vec4\x20getIBLVolumeRefraction(\x20const\x20in\x20vec3\x20n,\x20const\x20in\x20vec3\x20v,\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20vec3\x20diffuseColor,\x0a\x09\x09const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20specularF90,\x20const\x20in\x20vec3\x20position,\x20const\x20in\x20mat4\x20modelMatrix,\x0a\x09\x09const\x20in\x20mat4\x20viewMatrix,\x20const\x20in\x20mat4\x20projMatrix,\x20const\x20in\x20float\x20ior,\x20const\x20in\x20float\x20thickness,\x0a\x09\x09const\x20in\x20vec3\x20attenuationColor,\x20const\x20in\x20float\x20attenuationDistance\x20)\x20{\x0a\x0a\x09\x09vec3\x20transmissionRay\x20=\x20getVolumeTransmissionRay(\x20n,\x20v,\x20thickness,\x20ior,\x20modelMatrix\x20);\x0a\x09\x09vec3\x20refractedRayExit\x20=\x20position\x20+\x20transmissionRay;\x0a\x0a\x09\x09//\x20Project\x20refracted\x20vector\x20on\x20the\x20framebuffer,\x20while\x20mapping\x20to\x20normalized\x20device\x20coordinates.\x0a\x09\x09vec4\x20ndcPos\x20=\x20projMatrix\x20*\x20viewMatrix\x20*\x20vec4(\x20refractedRayExit,\x201.0\x20);\x0a\x09\x09vec2\x20refractionCoords\x20=\x20ndcPos.xy\x20/\x20ndcPos.w;\x0a\x09\x09refractionCoords\x20+=\x201.0;\x0a\x09\x09refractionCoords\x20/=\x202.0;\x0a\x0a\x09\x09//\x20Sample\x20framebuffer\x20to\x20get\x20pixel\x20the\x20refracted\x20ray\x20hits.\x0a\x09\x09vec4\x20transmittedLight\x20=\x20getTransmissionSample(\x20refractionCoords,\x20roughness,\x20ior\x20);\x0a\x0a\x09\x09vec3\x20transmittance\x20=\x20diffuseColor\x20*\x20volumeAttenuation(\x20length(\x20transmissionRay\x20),\x20attenuationColor,\x20attenuationDistance\x20);\x0a\x09\x09vec3\x20attenuatedColor\x20=\x20transmittance\x20*\x20transmittedLight.rgb;\x0a\x0a\x09\x09//\x20Get\x20the\x20specular\x20component.\x0a\x09\x09vec3\x20F\x20=\x20EnvironmentBRDF(\x20n,\x20v,\x20specularColor,\x20specularF90,\x20roughness\x20);\x0a\x0a\x09\x09//\x20As\x20less\x20light\x20is\x20transmitted,\x20the\x20opacity\x20should\x20be\x20increased.\x20This\x20simple\x20approximation\x20does\x20a\x20decent\x20job\x20\x0a\x09\x09//\x20of\x20modulating\x20a\x20CSS\x20background,\x20and\x20has\x20no\x20effect\x20when\x20the\x20buffer\x20is\x20opaque,\x20due\x20to\x20a\x20solid\x20object\x20or\x20clear\x20color.\x0a\x09\x09float\x20transmittanceFactor\x20=\x20(\x20transmittance.r\x20+\x20transmittance.g\x20+\x20transmittance.b\x20)\x20/\x203.0;\x0a\x0a\x09\x09return\x20vec4(\x20(\x201.0\x20-\x20F\x20)\x20*\x20attenuatedColor,\x201.0\x20-\x20(\x201.0\x20-\x20transmittedLight.a\x20)\x20*\x20transmittanceFactor\x20);\x0a\x0a\x09}\x0a#endif\x0a','uv_pars_fragment':'\x0a#if\x20defined(\x20USE_UV\x20)\x20||\x20defined(\x20USE_ANISOTROPY\x20)\x0a\x0a\x09varying\x20vec2\x20vUv;\x0a\x0a#endif\x0a#ifdef\x20USE_MAP\x0a\x0a\x09varying\x20vec2\x20vMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_ALPHAMAP\x0a\x0a\x09varying\x20vec2\x20vAlphaMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_LIGHTMAP\x0a\x0a\x09varying\x20vec2\x20vLightMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_AOMAP\x0a\x0a\x09varying\x20vec2\x20vAoMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_BUMPMAP\x0a\x0a\x09varying\x20vec2\x20vBumpMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_NORMALMAP\x0a\x0a\x09varying\x20vec2\x20vNormalMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_EMISSIVEMAP\x0a\x0a\x09varying\x20vec2\x20vEmissiveMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_METALNESSMAP\x0a\x0a\x09varying\x20vec2\x20vMetalnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x0a\x09varying\x20vec2\x20vRoughnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_ANISOTROPYMAP\x0a\x0a\x09varying\x20vec2\x20vAnisotropyMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOATMAP\x0a\x0a\x09varying\x20vec2\x20vClearcoatMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOAT_NORMALMAP\x0a\x0a\x09varying\x20vec2\x20vClearcoatNormalMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOAT_ROUGHNESSMAP\x0a\x0a\x09varying\x20vec2\x20vClearcoatRoughnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_IRIDESCENCEMAP\x0a\x0a\x09varying\x20vec2\x20vIridescenceMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_IRIDESCENCE_THICKNESSMAP\x0a\x0a\x09varying\x20vec2\x20vIridescenceThicknessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SHEEN_COLORMAP\x0a\x0a\x09varying\x20vec2\x20vSheenColorMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SHEEN_ROUGHNESSMAP\x0a\x0a\x09varying\x20vec2\x20vSheenRoughnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULARMAP\x0a\x0a\x09varying\x20vec2\x20vSpecularMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULAR_COLORMAP\x0a\x0a\x09varying\x20vec2\x20vSpecularColorMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULAR_INTENSITYMAP\x0a\x0a\x09varying\x20vec2\x20vSpecularIntensityMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_TRANSMISSIONMAP\x0a\x0a\x09uniform\x20mat3\x20transmissionMapTransform;\x0a\x09varying\x20vec2\x20vTransmissionMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_THICKNESSMAP\x0a\x0a\x09uniform\x20mat3\x20thicknessMapTransform;\x0a\x09varying\x20vec2\x20vThicknessMapUv;\x0a\x0a#endif\x0a','uv_pars_vertex':'\x0a#if\x20defined(\x20USE_UV\x20)\x20||\x20defined(\x20USE_ANISOTROPY\x20)\x0a\x0a\x09varying\x20vec2\x20vUv;\x0a\x0a#endif\x0a#ifdef\x20USE_MAP\x0a\x0a\x09uniform\x20mat3\x20mapTransform;\x0a\x09varying\x20vec2\x20vMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_ALPHAMAP\x0a\x0a\x09uniform\x20mat3\x20alphaMapTransform;\x0a\x09varying\x20vec2\x20vAlphaMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_LIGHTMAP\x0a\x0a\x09uniform\x20mat3\x20lightMapTransform;\x0a\x09varying\x20vec2\x20vLightMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_AOMAP\x0a\x0a\x09uniform\x20mat3\x20aoMapTransform;\x0a\x09varying\x20vec2\x20vAoMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_BUMPMAP\x0a\x0a\x09uniform\x20mat3\x20bumpMapTransform;\x0a\x09varying\x20vec2\x20vBumpMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_NORMALMAP\x0a\x0a\x09uniform\x20mat3\x20normalMapTransform;\x0a\x09varying\x20vec2\x20vNormalMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_DISPLACEMENTMAP\x0a\x0a\x09uniform\x20mat3\x20displacementMapTransform;\x0a\x09varying\x20vec2\x20vDisplacementMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_EMISSIVEMAP\x0a\x0a\x09uniform\x20mat3\x20emissiveMapTransform;\x0a\x09varying\x20vec2\x20vEmissiveMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_METALNESSMAP\x0a\x0a\x09uniform\x20mat3\x20metalnessMapTransform;\x0a\x09varying\x20vec2\x20vMetalnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x0a\x09uniform\x20mat3\x20roughnessMapTransform;\x0a\x09varying\x20vec2\x20vRoughnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_ANISOTROPYMAP\x0a\x0a\x09uniform\x20mat3\x20anisotropyMapTransform;\x0a\x09varying\x20vec2\x20vAnisotropyMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOATMAP\x0a\x0a\x09uniform\x20mat3\x20clearcoatMapTransform;\x0a\x09varying\x20vec2\x20vClearcoatMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOAT_NORMALMAP\x0a\x0a\x09uniform\x20mat3\x20clearcoatNormalMapTransform;\x0a\x09varying\x20vec2\x20vClearcoatNormalMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOAT_ROUGHNESSMAP\x0a\x0a\x09uniform\x20mat3\x20clearcoatRoughnessMapTransform;\x0a\x09varying\x20vec2\x20vClearcoatRoughnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SHEEN_COLORMAP\x0a\x0a\x09uniform\x20mat3\x20sheenColorMapTransform;\x0a\x09varying\x20vec2\x20vSheenColorMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SHEEN_ROUGHNESSMAP\x0a\x0a\x09uniform\x20mat3\x20sheenRoughnessMapTransform;\x0a\x09varying\x20vec2\x20vSheenRoughnessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_IRIDESCENCEMAP\x0a\x0a\x09uniform\x20mat3\x20iridescenceMapTransform;\x0a\x09varying\x20vec2\x20vIridescenceMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_IRIDESCENCE_THICKNESSMAP\x0a\x0a\x09uniform\x20mat3\x20iridescenceThicknessMapTransform;\x0a\x09varying\x20vec2\x20vIridescenceThicknessMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULARMAP\x0a\x0a\x09uniform\x20mat3\x20specularMapTransform;\x0a\x09varying\x20vec2\x20vSpecularMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULAR_COLORMAP\x0a\x0a\x09uniform\x20mat3\x20specularColorMapTransform;\x0a\x09varying\x20vec2\x20vSpecularColorMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULAR_INTENSITYMAP\x0a\x0a\x09uniform\x20mat3\x20specularIntensityMapTransform;\x0a\x09varying\x20vec2\x20vSpecularIntensityMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_TRANSMISSIONMAP\x0a\x0a\x09uniform\x20mat3\x20transmissionMapTransform;\x0a\x09varying\x20vec2\x20vTransmissionMapUv;\x0a\x0a#endif\x0a#ifdef\x20USE_THICKNESSMAP\x0a\x0a\x09uniform\x20mat3\x20thicknessMapTransform;\x0a\x09varying\x20vec2\x20vThicknessMapUv;\x0a\x0a#endif\x0a','uv_vertex':'\x0a#if\x20defined(\x20USE_UV\x20)\x20||\x20defined(\x20USE_ANISOTROPY\x20)\x0a\x0a\x09vUv\x20=\x20vec3(\x20uv,\x201\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_MAP\x0a\x0a\x09vMapUv\x20=\x20(\x20mapTransform\x20*\x20vec3(\x20MAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_ALPHAMAP\x0a\x0a\x09vAlphaMapUv\x20=\x20(\x20alphaMapTransform\x20*\x20vec3(\x20ALPHAMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_LIGHTMAP\x0a\x0a\x09vLightMapUv\x20=\x20(\x20lightMapTransform\x20*\x20vec3(\x20LIGHTMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_AOMAP\x0a\x0a\x09vAoMapUv\x20=\x20(\x20aoMapTransform\x20*\x20vec3(\x20AOMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_BUMPMAP\x0a\x0a\x09vBumpMapUv\x20=\x20(\x20bumpMapTransform\x20*\x20vec3(\x20BUMPMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_NORMALMAP\x0a\x0a\x09vNormalMapUv\x20=\x20(\x20normalMapTransform\x20*\x20vec3(\x20NORMALMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_DISPLACEMENTMAP\x0a\x0a\x09vDisplacementMapUv\x20=\x20(\x20displacementMapTransform\x20*\x20vec3(\x20DISPLACEMENTMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_EMISSIVEMAP\x0a\x0a\x09vEmissiveMapUv\x20=\x20(\x20emissiveMapTransform\x20*\x20vec3(\x20EMISSIVEMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_METALNESSMAP\x0a\x0a\x09vMetalnessMapUv\x20=\x20(\x20metalnessMapTransform\x20*\x20vec3(\x20METALNESSMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x0a\x09vRoughnessMapUv\x20=\x20(\x20roughnessMapTransform\x20*\x20vec3(\x20ROUGHNESSMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_ANISOTROPYMAP\x0a\x0a\x09vAnisotropyMapUv\x20=\x20(\x20anisotropyMapTransform\x20*\x20vec3(\x20ANISOTROPYMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOATMAP\x0a\x0a\x09vClearcoatMapUv\x20=\x20(\x20clearcoatMapTransform\x20*\x20vec3(\x20CLEARCOATMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOAT_NORMALMAP\x0a\x0a\x09vClearcoatNormalMapUv\x20=\x20(\x20clearcoatNormalMapTransform\x20*\x20vec3(\x20CLEARCOAT_NORMALMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_CLEARCOAT_ROUGHNESSMAP\x0a\x0a\x09vClearcoatRoughnessMapUv\x20=\x20(\x20clearcoatRoughnessMapTransform\x20*\x20vec3(\x20CLEARCOAT_ROUGHNESSMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_IRIDESCENCEMAP\x0a\x0a\x09vIridescenceMapUv\x20=\x20(\x20iridescenceMapTransform\x20*\x20vec3(\x20IRIDESCENCEMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_IRIDESCENCE_THICKNESSMAP\x0a\x0a\x09vIridescenceThicknessMapUv\x20=\x20(\x20iridescenceThicknessMapTransform\x20*\x20vec3(\x20IRIDESCENCE_THICKNESSMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_SHEEN_COLORMAP\x0a\x0a\x09vSheenColorMapUv\x20=\x20(\x20sheenColorMapTransform\x20*\x20vec3(\x20SHEEN_COLORMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_SHEEN_ROUGHNESSMAP\x0a\x0a\x09vSheenRoughnessMapUv\x20=\x20(\x20sheenRoughnessMapTransform\x20*\x20vec3(\x20SHEEN_ROUGHNESSMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULARMAP\x0a\x0a\x09vSpecularMapUv\x20=\x20(\x20specularMapTransform\x20*\x20vec3(\x20SPECULARMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULAR_COLORMAP\x0a\x0a\x09vSpecularColorMapUv\x20=\x20(\x20specularColorMapTransform\x20*\x20vec3(\x20SPECULAR_COLORMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_SPECULAR_INTENSITYMAP\x0a\x0a\x09vSpecularIntensityMapUv\x20=\x20(\x20specularIntensityMapTransform\x20*\x20vec3(\x20SPECULAR_INTENSITYMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_TRANSMISSIONMAP\x0a\x0a\x09vTransmissionMapUv\x20=\x20(\x20transmissionMapTransform\x20*\x20vec3(\x20TRANSMISSIONMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a#ifdef\x20USE_THICKNESSMAP\x0a\x0a\x09vThicknessMapUv\x20=\x20(\x20thicknessMapTransform\x20*\x20vec3(\x20THICKNESSMAP_UV,\x201\x20)\x20).xy;\x0a\x0a#endif\x0a','worldpos_vertex':'\x0a#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20DISTANCE\x20)\x20||\x20defined\x20(\x20USE_SHADOWMAP\x20)\x20||\x20defined\x20(\x20USE_TRANSMISSION\x20)\x20||\x20NUM_SPOT_LIGHT_COORDS\x20>\x200\x0a\x0a\x09vec4\x20worldPosition\x20=\x20vec4(\x20transformed,\x201.0\x20);\x0a\x0a\x09#ifdef\x20USE_BATCHING\x0a\x0a\x09\x09worldPosition\x20=\x20batchingMatrix\x20*\x20worldPosition;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_INSTANCING\x0a\x0a\x09\x09worldPosition\x20=\x20instanceMatrix\x20*\x20worldPosition;\x0a\x0a\x09#endif\x0a\x0a\x09worldPosition\x20=\x20modelMatrix\x20*\x20worldPosition;\x0a\x0a#endif\x0a','background_vert':'\x0avarying\x20vec2\x20vUv;\x0auniform\x20mat3\x20uvTransform;\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a\x0a\x09gl_Position\x20=\x20vec4(\x20position.xy,\x201.0,\x201.0\x20);\x0a\x0a}\x0a','background_frag':'\x0auniform\x20sampler2D\x20t2D;\x0auniform\x20float\x20backgroundIntensity;\x0a\x0avarying\x20vec2\x20vUv;\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20t2D,\x20vUv\x20);\x0a\x0a\x09#ifdef\x20DECODE_VIDEO_TEXTURE\x0a\x0a\x09\x09//\x20use\x20inline\x20sRGB\x20decode\x20until\x20browsers\x20properly\x20support\x20SRGB8_APLHA8\x20with\x20video\x20textures\x0a\x0a\x09\x09texColor\x20=\x20vec4(\x20mix(\x20pow(\x20texColor.rgb\x20*\x200.9478672986\x20+\x20vec3(\x200.0521327014\x20),\x20vec3(\x202.4\x20)\x20),\x20texColor.rgb\x20*\x200.0773993808,\x20vec3(\x20lessThanEqual(\x20texColor.rgb,\x20vec3(\x200.04045\x20)\x20)\x20)\x20),\x20texColor.w\x20);\x0a\x0a\x09#endif\x0a\x0a\x09texColor.rgb\x20*=\x20backgroundIntensity;\x0a\x0a\x09gl_FragColor\x20=\x20texColor;\x0a\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x0a}\x0a','backgroundCube_vert':'\x0avarying\x20vec3\x20vWorldDirection;\x0a\x0a#include\x20<common>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x0a\x09gl_Position.z\x20=\x20gl_Position.w;\x20//\x20set\x20z\x20to\x20camera.far\x0a\x0a}\x0a','backgroundCube_frag':'\x0a\x0a#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x0a\x09uniform\x20samplerCube\x20envMap;\x0a\x0a#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x0a\x09uniform\x20sampler2D\x20envMap;\x0a\x0a#endif\x0a\x0auniform\x20float\x20flipEnvMap;\x0auniform\x20float\x20backgroundBlurriness;\x0auniform\x20float\x20backgroundIntensity;\x0a\x0avarying\x20vec3\x20vWorldDirection;\x0a\x0a#include\x20<cube_uv_reflection_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x0a\x09\x09vec4\x20texColor\x20=\x20textureCube(\x20envMap,\x20vec3(\x20flipEnvMap\x20*\x20vWorldDirection.x,\x20vWorldDirection.yz\x20)\x20);\x0a\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x0a\x09\x09vec4\x20texColor\x20=\x20textureCubeUV(\x20envMap,\x20vWorldDirection,\x20backgroundBlurriness\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09vec4\x20texColor\x20=\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x0a\x09#endif\x0a\x0a\x09texColor.rgb\x20*=\x20backgroundIntensity;\x0a\x0a\x09gl_FragColor\x20=\x20texColor;\x0a\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x0a}\x0a','cube_vert':'\x0avarying\x20vec3\x20vWorldDirection;\x0a\x0a#include\x20<common>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x0a\x09gl_Position.z\x20=\x20gl_Position.w;\x20//\x20set\x20z\x20to\x20camera.far\x0a\x0a}\x0a','cube_frag':'\x0auniform\x20samplerCube\x20tCube;\x0auniform\x20float\x20tFlip;\x0auniform\x20float\x20opacity;\x0a\x0avarying\x20vec3\x20vWorldDirection;\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vec4\x20texColor\x20=\x20textureCube(\x20tCube,\x20vec3(\x20tFlip\x20*\x20vWorldDirection.x,\x20vWorldDirection.yz\x20)\x20);\x0a\x0a\x09gl_FragColor\x20=\x20texColor;\x0a\x09gl_FragColor.a\x20*=\x20opacity;\x0a\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x0a}\x0a','depth_vert':'\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0a//\x20This\x20is\x20used\x20for\x20computing\x20an\x20equivalent\x20of\x20gl_FragCoord.z\x20that\x20is\x20as\x20high\x20precision\x20as\x20possible.\x0a//\x20Some\x20platforms\x20compute\x20gl_FragCoord\x20at\x20a\x20lower\x20precision\x20which\x20makes\x20the\x20manually\x20computed\x20value\x20better\x20for\x0a//\x20depth-based\x20postprocessing\x20effects.\x20Reproduced\x20on\x20iPad\x20with\x20A10\x20processor\x20/\x20iPadOS\x2013.3.1.\x0avarying\x20vec2\x20vHighPrecisionZW;\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x0a\x09#include\x20<batching_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x0a\x09#endif\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a\x09vHighPrecisionZW\x20=\x20gl_Position.zw;\x0a\x0a}\x0a','depth_frag':'\x0a#if\x20DEPTH_PACKING\x20==\x203200\x0a\x0a\x09uniform\x20float\x20opacity;\x0a\x0a#endif\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avarying\x20vec2\x20vHighPrecisionZW;\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x0a\x09\x09diffuseColor.a\x20=\x20opacity;\x0a\x0a\x09#endif\x0a\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x0a\x09//\x20Higher\x20precision\x20equivalent\x20of\x20gl_FragCoord.z.\x20This\x20assumes\x20depthRange\x20has\x20been\x20left\x20to\x20its\x20default\x20values.\x0a\x09float\x20fragCoordZ\x20=\x200.5\x20*\x20vHighPrecisionZW[0]\x20/\x20vHighPrecisionZW[1]\x20+\x200.5;\x0a\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x0a\x09\x09gl_FragColor\x20=\x20vec4(\x20vec3(\x201.0\x20-\x20fragCoordZ\x20),\x20opacity\x20);\x0a\x0a\x09#elif\x20DEPTH_PACKING\x20==\x203201\x0a\x0a\x09\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20fragCoordZ\x20);\x0a\x0a\x09#endif\x0a\x0a}\x0a','distanceRGBA_vert':'\x0a#define\x20DISTANCE\x0a\x0avarying\x20vec3\x20vWorldPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x0a\x09#include\x20<batching_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x0a\x09#endif\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a\x0a}\x0a','distanceRGBA_frag':'\x0a#define\x20DISTANCE\x0a\x0auniform\x20vec3\x20referencePosition;\x0auniform\x20float\x20nearDistance;\x0auniform\x20float\x20farDistance;\x0avarying\x20vec3\x20vWorldPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main\x20()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x0a\x09float\x20dist\x20=\x20length(\x20vWorldPosition\x20-\x20referencePosition\x20);\x0a\x09dist\x20=\x20(\x20dist\x20-\x20nearDistance\x20)\x20/\x20(\x20farDistance\x20-\x20nearDistance\x20);\x0a\x09dist\x20=\x20saturate(\x20dist\x20);\x20//\x20clamp\x20to\x20[\x200,\x201\x20]\x0a\x0a\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20dist\x20);\x0a\x0a}\x0a','equirect_vert':'\x0avarying\x20vec3\x20vWorldDirection;\x0a\x0a#include\x20<common>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x0a}\x0a','equirect_frag':'\x0auniform\x20sampler2D\x20tEquirect;\x0a\x0avarying\x20vec3\x20vWorldDirection;\x0a\x0a#include\x20<common>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vec3\x20direction\x20=\x20normalize(\x20vWorldDirection\x20);\x0a\x0a\x09vec2\x20sampleUV\x20=\x20equirectUv(\x20direction\x20);\x0a\x0a\x09gl_FragColor\x20=\x20texture2D(\x20tEquirect,\x20sampleUV\x20);\x0a\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x0a}\x0a','linedashed_vert':'\x0auniform\x20float\x20scale;\x0aattribute\x20float\x20lineDistance;\x0a\x0avarying\x20float\x20vLineDistance;\x0a\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09vLineDistance\x20=\x20scale\x20*\x20lineDistance;\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','linedashed_frag':'\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a\x0auniform\x20float\x20dashSize;\x0auniform\x20float\x20totalSize;\x0a\x0avarying\x20float\x20vLineDistance;\x0a\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09if\x20(\x20mod(\x20vLineDistance,\x20totalSize\x20)\x20>\x20dashSize\x20)\x20{\x0a\x0a\x09\x09discard;\x0a\x0a\x09}\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x20//\x20simple\x20shader\x0a\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x0a}\x0a','meshbasic_vert':'\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#if\x20defined\x20(\x20USE_ENVMAP\x20)\x20||\x20defined\x20(\x20USE_SKINNING\x20)\x0a\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinbase_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09\x09#include\x20<defaultnormal_vertex>\x0a\x0a\x09#endif\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','meshbasic_frag':'\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a\x0a#ifndef\x20FLAT_SHADED\x0a\x0a\x09varying\x20vec3\x20vNormal;\x0a\x0a#endif\x0a\x0a#include\x20<common>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<envmap_common_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x0a\x09//\x20accumulation\x20(baked\x20indirect\x20lighting\x20only)\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x0a\x09\x09vec4\x20lightMapTexel\x20=\x20texture2D(\x20lightMap,\x20vLightMapUv\x20);\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20lightMapTexel.rgb\x20*\x20lightMapIntensity\x20*\x20RECIPROCAL_PI;\x0a\x0a\x09#else\x0a\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vec3(\x201.0\x20);\x0a\x0a\x09#endif\x0a\x0a\x09//\x20modulation\x0a\x09#include\x20<aomap_fragment>\x0a\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20diffuseColor.rgb;\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.indirectDiffuse;\x0a\x0a\x09#include\x20<envmap_fragment>\x0a\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a\x0a}\x0a','meshlambert_vert':'\x0a#define\x20LAMBERT\x0a\x0avarying\x20vec3\x20vViewPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<normal_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<normal_vertex>\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','meshlambert_frag':'\x0a#define\x20LAMBERT\x0a\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_common_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<normal_pars_fragment>\x0a#include\x20<lights_lambert_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x0a\x09//\x20accumulation\x0a\x09#include\x20<lights_lambert_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x0a\x09//\x20modulation\x0a\x09#include\x20<aomap_fragment>\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x0a\x09#include\x20<envmap_fragment>\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a\x0a}\x0a','meshmatcap_vert':'\x0a#define\x20MATCAP\x0a\x0avarying\x20vec3\x20vViewPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<normal_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<normal_vertex>\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x0a}\x0a','meshmatcap_frag':'\x0a#define\x20MATCAP\x0a\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20sampler2D\x20matcap;\x0a\x0avarying\x20vec3\x20vViewPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<normal_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x0a\x09vec3\x20viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0a\x09vec3\x20x\x20=\x20normalize(\x20vec3(\x20viewDir.z,\x200.0,\x20-\x20viewDir.x\x20)\x20);\x0a\x09vec3\x20y\x20=\x20cross(\x20viewDir,\x20x\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20dot(\x20x,\x20normal\x20),\x20dot(\x20y,\x20normal\x20)\x20)\x20*\x200.495\x20+\x200.5;\x20//\x200.495\x20to\x20remove\x20artifacts\x20caused\x20by\x20undersized\x20matcap\x20disks\x0a\x0a\x09#ifdef\x20USE_MATCAP\x0a\x0a\x09\x09vec4\x20matcapColor\x20=\x20texture2D(\x20matcap,\x20uv\x20);\x0a\x0a\x09#else\x0a\x0a\x09\x09vec4\x20matcapColor\x20=\x20vec4(\x20vec3(\x20mix(\x200.2,\x200.8,\x20uv.y\x20)\x20),\x201.0\x20);\x20//\x20default\x20if\x20matcap\x20is\x20missing\x0a\x0a\x09#endif\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20diffuseColor.rgb\x20*\x20matcapColor.rgb;\x0a\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a\x0a}\x0a','meshnormal_vert':'\x0a#define\x20NORMAL\x0a\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP_TANGENTSPACE\x20)\x0a\x0a\x09varying\x20vec3\x20vViewPosition;\x0a\x0a#endif\x0a\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<normal_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<normal_vertex>\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP_TANGENTSPACE\x20)\x0a\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x0a#endif\x0a\x0a}\x0a','meshnormal_frag':'\x0a#define\x20NORMAL\x0a\x0auniform\x20float\x20opacity;\x0a\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP_TANGENTSPACE\x20)\x0a\x0a\x09varying\x20vec3\x20vViewPosition;\x0a\x0a#endif\x0a\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<normal_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x0a\x09gl_FragColor\x20=\x20vec4(\x20packNormalToRGB(\x20normal\x20),\x20opacity\x20);\x0a\x0a\x09#ifdef\x20OPAQUE\x0a\x0a\x09\x09gl_FragColor.a\x20=\x201.0;\x0a\x0a\x09#endif\x0a\x0a}\x0a','meshphong_vert':'\x0a#define\x20PHONG\x0a\x0avarying\x20vec3\x20vViewPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<normal_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<normal_vertex>\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','meshphong_frag':'\x0a#define\x20PHONG\x0a\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20vec3\x20specular;\x0auniform\x20float\x20shininess;\x0auniform\x20float\x20opacity;\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_common_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<normal_pars_fragment>\x0a#include\x20<lights_phong_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x0a\x09//\x20accumulation\x0a\x09#include\x20<lights_phong_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x0a\x09//\x20modulation\x0a\x09#include\x20<aomap_fragment>\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x0a\x09#include\x20<envmap_fragment>\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a\x0a}\x0a','meshphysical_vert':'\x0a#define\x20STANDARD\x0a\x0avarying\x20vec3\x20vViewPosition;\x0a\x0a#ifdef\x20USE_TRANSMISSION\x0a\x0a\x09varying\x20vec3\x20vWorldPosition;\x0a\x0a#endif\x0a\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<normal_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<normal_vertex>\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a#ifdef\x20USE_TRANSMISSION\x0a\x0a\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a\x0a#endif\x0a}\x0a','meshphysical_frag':'\x0a#define\x20STANDARD\x0a\x0a#ifdef\x20PHYSICAL\x0a\x09#define\x20IOR\x0a\x09#define\x20USE_SPECULAR\x0a#endif\x0a\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20metalness;\x0auniform\x20float\x20opacity;\x0a\x0a#ifdef\x20IOR\x0a\x09uniform\x20float\x20ior;\x0a#endif\x0a\x0a#ifdef\x20USE_SPECULAR\x0a\x09uniform\x20float\x20specularIntensity;\x0a\x09uniform\x20vec3\x20specularColor;\x0a\x0a\x09#ifdef\x20USE_SPECULAR_COLORMAP\x0a\x09\x09uniform\x20sampler2D\x20specularColorMap;\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_SPECULAR_INTENSITYMAP\x0a\x09\x09uniform\x20sampler2D\x20specularIntensityMap;\x0a\x09#endif\x0a#endif\x0a\x0a#ifdef\x20USE_CLEARCOAT\x0a\x09uniform\x20float\x20clearcoat;\x0a\x09uniform\x20float\x20clearcoatRoughness;\x0a#endif\x0a\x0a#ifdef\x20USE_IRIDESCENCE\x0a\x09uniform\x20float\x20iridescence;\x0a\x09uniform\x20float\x20iridescenceIOR;\x0a\x09uniform\x20float\x20iridescenceThicknessMinimum;\x0a\x09uniform\x20float\x20iridescenceThicknessMaximum;\x0a#endif\x0a\x0a#ifdef\x20USE_SHEEN\x0a\x09uniform\x20vec3\x20sheenColor;\x0a\x09uniform\x20float\x20sheenRoughness;\x0a\x0a\x09#ifdef\x20USE_SHEEN_COLORMAP\x0a\x09\x09uniform\x20sampler2D\x20sheenColorMap;\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_SHEEN_ROUGHNESSMAP\x0a\x09\x09uniform\x20sampler2D\x20sheenRoughnessMap;\x0a\x09#endif\x0a#endif\x0a\x0a#ifdef\x20USE_ANISOTROPY\x0a\x09uniform\x20vec2\x20anisotropyVector;\x0a\x0a\x09#ifdef\x20USE_ANISOTROPYMAP\x0a\x09\x09uniform\x20sampler2D\x20anisotropyMap;\x0a\x09#endif\x0a#endif\x0a\x0avarying\x20vec3\x20vViewPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<iridescence_fragment>\x0a#include\x20<cube_uv_reflection_fragment>\x0a#include\x20<envmap_common_pars_fragment>\x0a#include\x20<envmap_physical_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<normal_pars_fragment>\x0a#include\x20<lights_physical_pars_fragment>\x0a#include\x20<transmission_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<clearcoat_pars_fragment>\x0a#include\x20<iridescence_pars_fragment>\x0a#include\x20<roughnessmap_pars_fragment>\x0a#include\x20<metalnessmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x09#include\x20<roughnessmap_fragment>\x0a\x09#include\x20<metalnessmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<clearcoat_normal_fragment_begin>\x0a\x09#include\x20<clearcoat_normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x0a\x09//\x20accumulation\x0a\x09#include\x20<lights_physical_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x0a\x09//\x20modulation\x0a\x09#include\x20<aomap_fragment>\x0a\x0a\x09vec3\x20totalDiffuse\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse;\x0a\x09vec3\x20totalSpecular\x20=\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular;\x0a\x0a\x09#include\x20<transmission_fragment>\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20totalDiffuse\x20+\x20totalSpecular\x20+\x20totalEmissiveRadiance;\x0a\x0a\x09#ifdef\x20USE_SHEEN\x0a\x0a\x09\x09//\x20Sheen\x20energy\x20compensation\x20approximation\x20calculation\x20can\x20be\x20found\x20at\x20the\x20end\x20of\x0a\x09\x09//\x20https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\x0a\x09\x09float\x20sheenEnergyComp\x20=\x201.0\x20-\x200.157\x20*\x20max3(\x20material.sheenColor\x20);\x0a\x0a\x09\x09outgoingLight\x20=\x20outgoingLight\x20*\x20sheenEnergyComp\x20+\x20sheenSpecularDirect\x20+\x20sheenSpecularIndirect;\x0a\x0a\x09#endif\x0a\x0a\x09#ifdef\x20USE_CLEARCOAT\x0a\x0a\x09\x09float\x20dotNVcc\x20=\x20saturate(\x20dot(\x20geometryClearcoatNormal,\x20geometryViewDir\x20)\x20);\x0a\x0a\x09\x09vec3\x20Fcc\x20=\x20F_Schlick(\x20material.clearcoatF0,\x20material.clearcoatF90,\x20dotNVcc\x20);\x0a\x0a\x09\x09outgoingLight\x20=\x20outgoingLight\x20*\x20(\x201.0\x20-\x20material.clearcoat\x20*\x20Fcc\x20)\x20+\x20(\x20clearcoatSpecularDirect\x20+\x20clearcoatSpecularIndirect\x20)\x20*\x20material.clearcoat;\x0a\x0a\x09#endif\x0a\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a\x0a}\x0a','meshtoon_vert':'\x0a#define\x20TOON\x0a\x0avarying\x20vec3\x20vViewPosition;\x0a\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<normal_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<normal_vertex>\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','meshtoon_frag':'\x0a#define\x20TOON\x0a\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<gradientmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<normal_pars_fragment>\x0a#include\x20<lights_toon_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x0a\x09//\x20accumulation\x0a\x09#include\x20<lights_toon_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x0a\x09//\x20modulation\x0a\x09#include\x20<aomap_fragment>\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a\x0a}\x0a','points_vert':'\x0auniform\x20float\x20size;\x0auniform\x20float\x20scale;\x0a\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0a#ifdef\x20USE_POINTS_UV\x0a\x0a\x09varying\x20vec2\x20vUv;\x0a\x09uniform\x20mat3\x20uvTransform;\x0a\x0a#endif\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#ifdef\x20USE_POINTS_UV\x0a\x0a\x09\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a\x0a\x09#endif\x0a\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<morphcolor_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x0a\x09gl_PointSize\x20=\x20size;\x0a\x0a\x09#ifdef\x20USE_SIZEATTENUATION\x0a\x0a\x09\x09bool\x20isPerspective\x20=\x20isPerspectiveMatrix(\x20projectionMatrix\x20);\x0a\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20gl_PointSize\x20*=\x20(\x20scale\x20/\x20-\x20mvPosition.z\x20);\x0a\x0a\x09#endif\x0a\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','points_frag':'\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<map_particle_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_particle_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x0a}\x0a','shadow_vert':'\x0a#include\x20<common>\x0a#include\x20<batching_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<batching_vertex>\x0a\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','shadow_frag':'\x0auniform\x20vec3\x20color;\x0auniform\x20float\x20opacity;\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x0a\x09gl_FragColor\x20=\x20vec4(\x20color,\x20opacity\x20*\x20(\x201.0\x20-\x20getShadowMask()\x20)\x20);\x0a\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x0a}\x0a','sprite_vert':'\x0auniform\x20float\x20rotation;\x0auniform\x20vec2\x20center;\x0a\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<uv_vertex>\x0a\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x0a\x09vec2\x20scale;\x0a\x09scale.x\x20=\x20length(\x20vec3(\x20modelMatrix[\x200\x20].x,\x20modelMatrix[\x200\x20].y,\x20modelMatrix[\x200\x20].z\x20)\x20);\x0a\x09scale.y\x20=\x20length(\x20vec3(\x20modelMatrix[\x201\x20].x,\x20modelMatrix[\x201\x20].y,\x20modelMatrix[\x201\x20].z\x20)\x20);\x0a\x0a\x09#ifndef\x20USE_SIZEATTENUATION\x0a\x0a\x09\x09bool\x20isPerspective\x20=\x20isPerspectiveMatrix(\x20projectionMatrix\x20);\x0a\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20scale\x20*=\x20-\x20mvPosition.z;\x0a\x0a\x09#endif\x0a\x0a\x09vec2\x20alignedPosition\x20=\x20(\x20position.xy\x20-\x20(\x20center\x20-\x20vec2(\x200.5\x20)\x20)\x20)\x20*\x20scale;\x0a\x0a\x09vec2\x20rotatedPosition;\x0a\x09rotatedPosition.x\x20=\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.x\x20-\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09rotatedPosition.y\x20=\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.x\x20+\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x0a\x09mvPosition.xy\x20+=\x20rotatedPosition;\x0a\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x0a}\x0a','sprite_frag':'\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<alphatest_pars_fragment>\x0a#include\x20<alphahash_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<alphahash_fragment>\x0a\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x0a\x09#include\x20<opaque_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<colorspace_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x0a}\x0a'};},0x9c0d:(m,H,O)=>{O['d'](H,{'z':()=>j});var N=O(0xfdaa),J=O(0x41ef),A=O(0x1264d),v=O(0x1008e),F=O(0x58c9),G=O(0x169b1),R=O(0x3e78),j={'basic':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['specularmap'],F['f']['envmap'],F['f']['aomap'],F['f']['lightmap'],F['f']['fog']]),'vertexShader':N['v']['meshbasic_vert'],'fragmentShader':N['v']['meshbasic_frag']},'lambert':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['specularmap'],F['f']['envmap'],F['f']['aomap'],F['f']['lightmap'],F['f']['emissivemap'],F['f']['bumpmap'],F['f']['normalmap'],F['f']['displacementmap'],F['f']['fog'],F['f']['lights'],{'emissive':{'value':new G['Q'](0x0)}}]),'vertexShader':N['v']['meshlambert_vert'],'fragmentShader':N['v']['meshlambert_frag']},'phong':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['specularmap'],F['f']['envmap'],F['f']['aomap'],F['f']['lightmap'],F['f']['emissivemap'],F['f']['bumpmap'],F['f']['normalmap'],F['f']['displacementmap'],F['f']['fog'],F['f']['lights'],{'emissive':{'value':new G['Q'](0x0)},'specular':{'value':new G['Q'](0x111111)},'shininess':{'value':0x1e}}]),'vertexShader':N['v']['meshphong_vert'],'fragmentShader':N['v']['meshphong_frag']},'standard':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['envmap'],F['f']['aomap'],F['f']['lightmap'],F['f']['emissivemap'],F['f']['bumpmap'],F['f']['normalmap'],F['f']['displacementmap'],F['f']['roughnessmap'],F['f']['metalnessmap'],F['f']['fog'],F['f']['lights'],{'emissive':{'value':new G['Q'](0x0)},'roughness':{'value':0x1},'metalness':{'value':0x0},'envMapIntensity':{'value':0x1}}]),'vertexShader':N['v']['meshphysical_vert'],'fragmentShader':N['v']['meshphysical_frag']},'toon':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['aomap'],F['f']['lightmap'],F['f']['emissivemap'],F['f']['bumpmap'],F['f']['normalmap'],F['f']['displacementmap'],F['f']['gradientmap'],F['f']['fog'],F['f']['lights'],{'emissive':{'value':new G['Q'](0x0)}}]),'vertexShader':N['v']['meshtoon_vert'],'fragmentShader':N['v']['meshtoon_frag']},'matcap':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['bumpmap'],F['f']['normalmap'],F['f']['displacementmap'],F['f']['fog'],{'matcap':{'value':null}}]),'vertexShader':N['v']['meshmatcap_vert'],'fragmentShader':N['v']['meshmatcap_frag']},'points':{'uniforms':(0x0,J['Ii'])([F['f']['points'],F['f']['fog']]),'vertexShader':N['v']['points_vert'],'fragmentShader':N['v']['points_frag']},'dashed':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['fog'],{'scale':{'value':0x1},'dashSize':{'value':0x1},'totalSize':{'value':0x2}}]),'vertexShader':N['v']['linedashed_vert'],'fragmentShader':N['v']['linedashed_frag']},'depth':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['displacementmap']]),'vertexShader':N['v']['depth_vert'],'fragmentShader':N['v']['depth_frag']},'normal':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['bumpmap'],F['f']['normalmap'],F['f']['displacementmap'],{'opacity':{'value':0x1}}]),'vertexShader':N['v']['meshnormal_vert'],'fragmentShader':N['v']['meshnormal_frag']},'sprite':{'uniforms':(0x0,J['Ii'])([F['f']['sprite'],F['f']['fog']]),'vertexShader':N['v']['sprite_vert'],'fragmentShader':N['v']['sprite_frag']},'background':{'uniforms':{'uvTransform':{'value':new R['d']()},'t2D':{'value':null},'backgroundIntensity':{'value':0x1}},'vertexShader':N['v']['background_vert'],'fragmentShader':N['v']['background_frag']},'backgroundCube':{'uniforms':{'envMap':{'value':null},'flipEnvMap':{'value':-0x1},'backgroundBlurriness':{'value':0x0},'backgroundIntensity':{'value':0x1}},'vertexShader':N['v']['backgroundCube_vert'],'fragmentShader':N['v']['backgroundCube_frag']},'cube':{'uniforms':{'tCube':{'value':null},'tFlip':{'value':-0x1},'opacity':{'value':0x1}},'vertexShader':N['v']['cube_vert'],'fragmentShader':N['v']['cube_frag']},'equirect':{'uniforms':{'tEquirect':{'value':null}},'vertexShader':N['v']['equirect_vert'],'fragmentShader':N['v']['equirect_frag']},'distanceRGBA':{'uniforms':(0x0,J['Ii'])([F['f']['common'],F['f']['displacementmap'],{'referencePosition':{'value':new v['P']()},'nearDistance':{'value':0x1},'farDistance':{'value':0x3e8}}]),'vertexShader':N['v']['distanceRGBA_vert'],'fragmentShader':N['v']['distanceRGBA_frag']},'shadow':{'uniforms':(0x0,J['Ii'])([F['f']['lights'],F['f']['fog'],{'color':{'value':new G['Q'](0x0)},'opacity':{'value':0x1}}]),'vertexShader':N['v']['shadow_vert'],'fragmentShader':N['v']['shadow_frag']}};j['physical']={'uniforms':(0x0,J['Ii'])([j['standard']['uniforms'],{'clearcoat':{'value':0x0},'clearcoatMap':{'value':null},'clearcoatMapTransform':{'value':new R['d']()},'clearcoatNormalMap':{'value':null},'clearcoatNormalMapTransform':{'value':new R['d']()},'clearcoatNormalScale':{'value':new A['I'](0x1,0x1)},'clearcoatRoughness':{'value':0x0},'clearcoatRoughnessMap':{'value':null},'clearcoatRoughnessMapTransform':{'value':new R['d']()},'iridescence':{'value':0x0},'iridescenceMap':{'value':null},'iridescenceMapTransform':{'value':new R['d']()},'iridescenceIOR':{'value':1.3},'iridescenceThicknessMinimum':{'value':0x64},'iridescenceThicknessMaximum':{'value':0x190},'iridescenceThicknessMap':{'value':null},'iridescenceThicknessMapTransform':{'value':new R['d']()},'sheen':{'value':0x0},'sheenColor':{'value':new G['Q'](0x0)},'sheenColorMap':{'value':null},'sheenColorMapTransform':{'value':new R['d']()},'sheenRoughness':{'value':0x1},'sheenRoughnessMap':{'value':null},'sheenRoughnessMapTransform':{'value':new R['d']()},'transmission':{'value':0x0},'transmissionMap':{'value':null},'transmissionMapTransform':{'value':new R['d']()},'transmissionSamplerSize':{'value':new A['I']()},'transmissionSamplerMap':{'value':null},'thickness':{'value':0x0},'thicknessMap':{'value':null},'thicknessMapTransform':{'value':new R['d']()},'attenuationDistance':{'value':0x0},'attenuationColor':{'value':new G['Q'](0x0)},'specularColor':{'value':new G['Q'](0x1,0x1,0x1)},'specularColorMap':{'value':null},'specularColorMapTransform':{'value':new R['d']()},'specularIntensity':{'value':0x1},'specularIntensityMap':{'value':null},'specularIntensityMapTransform':{'value':new R['d']()},'anisotropyVector':{'value':new A['I']()},'anisotropyMap':{'value':null},'anisotropyMapTransform':{'value':new R['d']()}}]),'vertexShader':N['v']['meshphysical_vert'],'fragmentShader':N['v']['meshphysical_frag']};},0x971c:(m,H,O)=>{O['d'](H,{'H':()=>u,'J':()=>N});var u='\x0avoid\x20main()\x20{\x0a\x0a\x09gl_Position\x20=\x20vec4(\x20position,\x201.0\x20);\x0a\x0a}\x0a',N='\x0auniform\x20sampler2D\x20shadow_pass;\x0auniform\x20vec2\x20resolution;\x0auniform\x20float\x20radius;\x0a\x0a#include\x20<packing>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x09const\x20float\x20samples\x20=\x20float(\x20VSM_SAMPLES\x20);\x0a\x0a\x09float\x20mean\x20=\x200.0;\x0a\x09float\x20squared_mean\x20=\x200.0;\x0a\x0a\x09float\x20uvStride\x20=\x20samples\x20<=\x201.0\x20?\x200.0\x20:\x202.0\x20/\x20(\x20samples\x20-\x201.0\x20);\x0a\x09float\x20uvStart\x20=\x20samples\x20<=\x201.0\x20?\x200.0\x20:\x20-\x201.0;\x0a\x09for\x20(\x20float\x20i\x20=\x200.0;\x20i\x20<\x20samples;\x20i\x20++\x20)\x20{\x0a\x0a\x09\x09float\x20uvOffset\x20=\x20uvStart\x20+\x20i\x20*\x20uvStride;\x0a\x0a\x09\x09#ifdef\x20HORIZONTAL_PASS\x0a\x0a\x09\x09\x09vec2\x20distribution\x20=\x20unpackRGBATo2Half(\x20texture2D(\x20shadow_pass,\x20(\x20gl_FragCoord.xy\x20+\x20vec2(\x20uvOffset,\x200.0\x20)\x20*\x20radius\x20)\x20/\x20resolution\x20)\x20);\x0a\x09\x09\x09mean\x20+=\x20distribution.x;\x0a\x09\x09\x09squared_mean\x20+=\x20distribution.y\x20*\x20distribution.y\x20+\x20distribution.x\x20*\x20distribution.x;\x0a\x0a\x09\x09#else\x0a\x0a\x09\x09\x09float\x20depth\x20=\x20unpackRGBAToDepth(\x20texture2D(\x20shadow_pass,\x20(\x20gl_FragCoord.xy\x20+\x20vec2(\x200.0,\x20uvOffset\x20)\x20*\x20radius\x20)\x20/\x20resolution\x20)\x20);\x0a\x09\x09\x09mean\x20+=\x20depth;\x0a\x09\x09\x09squared_mean\x20+=\x20depth\x20*\x20depth;\x0a\x0a\x09\x09#endif\x0a\x0a\x09}\x0a\x0a\x09mean\x20=\x20mean\x20/\x20samples;\x0a\x09squared_mean\x20=\x20squared_mean\x20/\x20samples;\x0a\x0a\x09float\x20std_dev\x20=\x20sqrt(\x20squared_mean\x20-\x20mean\x20*\x20mean\x20);\x0a\x0a\x09gl_FragColor\x20=\x20pack2HalfToRGBA(\x20vec2(\x20mean,\x20std_dev\x20)\x20);\x0a\x0a}\x0a';},0x41ef:(m,H,O)=>{O['d'](H,{'Ii':()=>J,'Jd':()=>A,'Ll':()=>F,'_U':()=>v,'lx':()=>N});var u=O(0x4efe);function N(G){var R={};for(var j in G)for(var B in(R[j]={},G[j])){var z=G[j][B];z&&(z['isColor']||z['isMatrix3']||z['isMatrix4']||z['isVector2']||z['isVector3']||z['isVector4']||z['isTexture']||z['isQuaternion'])?z['isRenderTargetTexture']?(console['warn']('UniformsUtils:\x20Textures\x20of\x20render\x20targets\x20cannot\x20be\x20cloned\x20via\x20cloneUniforms()\x20or\x20mergeUniforms().'),R[j][B]=null):R[j][B]=z['clone']():Array['isArray'](z)?R[j][B]=z['slice']():R[j][B]=z;}return R;}function J(G){for(var R={},j=0x0;j<G['length'];j++){var B=N(G[j]);for(var z in B)R[z]=B[z];}return R;}function A(G){for(var R=[],j=0x0;j<G['length'];j++)R['push'](G[j]['clone']());return R;}function v(G){return null===G['getRenderTarget']()?G['outputColorSpace']:u['pp']['workingColorSpace'];}var F={'clone':N,'merge':J};},0x4d15:(m,H,O)=>{function u(){var N=null,J=!0x1,A=null,v=null;function F(G,c){A(G,c),v=N['requestAnimationFrame'](F);}return{'start':function(){!0x0!==J&&null!==A&&(v=N['requestAnimationFrame'](F),J=!0x0);},'stop':function(){N['cancelAnimationFrame'](v),J=!0x1;},'setAnimationLoop':function(a){A=a;},'setContext':function(a){N=a;}};}O['d'](H,{'O':()=>u});},0xc1e:(m,H,O)=>{function u(N,J){var A=J['isWebGL2'],v=new WeakMap();return{'get':function(F){return F['isInterleavedBufferAttribute']&&(F=F['data']),v['get'](F);},'remove':function(F){F['isInterleavedBufferAttribute']&&(F=F['data']);var a=v['get'](F);a&&(N['deleteBuffer'](a['buffer']),v['delete'](F));},'update':function(F,G){if(F['isGLBufferAttribute']){var c=v['get'](F);(!c||c['version']<F['version'])&&v['set'](F,{'buffer':F['buffer'],'type':F['type'],'bytesPerElement':F['elementSize'],'version':F['version']});}else{F['isInterleavedBufferAttribute']&&(F=F['data']);var R=v['get'](F);if(void 0x0===R)v['set'](F,function(j,B){var z,q=j['array'],b=j['usage'],L=q['byteLength'],y=N['createBuffer']();if(N['bindBuffer'](B,y),N['bufferData'](B,q,b),j['onUploadCallback'](),q instanceof Float32Array)z=N['FLOAT'];else{if(q instanceof Uint16Array){if(j['isFloat16BufferAttribute']){if(!A)throw new Error('THREE.WebGLAttributes:\x20Usage\x20of\x20Float16BufferAttribute\x20requires\x20WebGL2.');z=N['HALF_FLOAT'];}else z=N['UNSIGNED_SHORT'];}else{if(q instanceof Int16Array)z=N['SHORT'];else{if(q instanceof Uint32Array)z=N['UNSIGNED_INT'];else{if(q instanceof Int32Array)z=N['INT'];else{if(q instanceof Int8Array)z=N['BYTE'];else{if(q instanceof Uint8Array)z=N['UNSIGNED_BYTE'];else{if(!(q instanceof Uint8ClampedArray))throw new Error('THREE.WebGLAttributes:\x20Unsupported\x20buffer\x20data\x20format:\x20'+q);z=N['UNSIGNED_BYTE'];}}}}}}}return{'buffer':y,'type':z,'bytesPerElement':q['BYTES_PER_ELEMENT'],'version':j['version'],'size':L};}(F,G));else{if(R['version']<F['version']){if(R['size']!==F['array']['byteLength'])throw new Error('THREE.WebGLAttributes:\x20The\x20size\x20of\x20the\x20buffer\x20attribute\x27s\x20array\x20buffer\x20does\x20not\x20match\x20the\x20original\x20size.\x20Resizing\x20buffer\x20attributes\x20is\x20not\x20supported.');!function(j,B,z){var q=B['array'],b=B['_updateRange'],L=B['updateRanges'];if(N['bindBuffer'](z,j),-0x1===b['count']&&0x0===L['length']&&N['bufferSubData'](z,0x0,q),0x0!==L['length']){for(var y=0x0,h=L['length'];y<h;y++){var X=L[y];A?N['bufferSubData'](z,X['start']*q['BYTES_PER_ELEMENT'],q,X['start'],X['count']):N['bufferSubData'](z,X['start']*q['BYTES_PER_ELEMENT'],q['subarray'](X['start'],X['start']+X['count']));}B['clearUpdateRanges']();}-0x1!==b['count']&&(A?N['bufferSubData'](z,b['offset']*q['BYTES_PER_ELEMENT'],q,b['offset'],b['count']):N['bufferSubData'](z,b['offset']*q['BYTES_PER_ELEMENT'],q['subarray'](b['offset'],b['offset']+b['count'])),b['count']=-0x1),B['onUploadCallback']();}(R['buffer'],F,G),R['version']=F['version'];}}}}};}O['d'](H,{'B':()=>u});},0x7b4e:(m,H,O)=>{function u(N,J,A,v){var F,G=v['isWebGL2'];this['setMode']=function(c){F=c;},this['render']=function(c,R){N['drawArrays'](F,c,R),A['update'](R,F,0x1);},this['renderInstances']=function(R,j,B){if(0x0!==B){var z,q;if(G)z=N,q='drawArraysInstanced';else{if(q='drawArraysInstancedANGLE',null===(z=J['get']('ANGLE_instanced_arrays')))return void console['error']('THREE.WebGLBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');}z[q](F,R,j,B),A['update'](j,F,B);}},this['renderMultiDraw']=function(R,j,B){if(0x0!==B){var z=J['get']('WEBGL_multi_draw');if(null===z){for(var q=0x0;q<B;q++)this['render'](R[q],j[q]);}else{z['multiDrawArraysWEBGL'](F,R,0x0,j,0x0,B);for(var b=0x0,L=0x0;L<B;L++)b+=j[L];A['update'](b,F,0x1);}}};}O['d'](H,{'b':()=>u});},0xcf4d:(m,H,O)=>{function u(N,J,A){var F;function G(Q){if('highp'===Q){if(N['getShaderPrecisionFormat'](N['VERTEX_SHADER'],N['HIGH_FLOAT'])['precision']>0x0&&N['getShaderPrecisionFormat'](N['FRAGMENT_SHADER'],N['HIGH_FLOAT'])['precision']>0x0)return'highp';Q='mediump';}return'mediump'===Q&&N['getShaderPrecisionFormat'](N['VERTEX_SHADER'],N['MEDIUM_FLOAT'])['precision']>0x0&&N['getShaderPrecisionFormat'](N['FRAGMENT_SHADER'],N['MEDIUM_FLOAT'])['precision']>0x0?'mediump':'lowp';}var R='undefined'!=typeof WebGL2RenderingContext&&'WebGL2RenderingContext'===N['constructor']['name'],j=void 0x0!==A['precision']?A['precision']:'highp',B=G(j);B!==j&&(console['warn']('THREE.WebGLRenderer:',j,'not\x20supported,\x20using',B,'instead.'),j=B);var z=R||J['has']('WEBGL_draw_buffers'),q=!0x0===A['logarithmicDepthBuffer'],b=N['getParameter'](N['MAX_TEXTURE_IMAGE_UNITS']),L=N['getParameter'](N['MAX_VERTEX_TEXTURE_IMAGE_UNITS']),y=N['getParameter'](N['MAX_TEXTURE_SIZE']),X=N['getParameter'](N['MAX_CUBE_MAP_TEXTURE_SIZE']),C=N['getParameter'](N['MAX_VERTEX_ATTRIBS']),T=N['getParameter'](N['MAX_VERTEX_UNIFORM_VECTORS']),E=N['getParameter'](N['MAX_VARYING_VECTORS']),D=N['getParameter'](N['MAX_FRAGMENT_UNIFORM_VECTORS']),K=L>0x0,w=R||J['has']('OES_texture_float');return{'isWebGL2':R,'drawBuffers':z,'getMaxAnisotropy':function(){if(void 0x0!==F)return F;if(!0x0===J['has']('EXT_texture_filter_anisotropic')){var Q=J['get']('EXT_texture_filter_anisotropic');F=N['getParameter'](Q['MAX_TEXTURE_MAX_ANISOTROPY_EXT']);}else F=0x0;return F;},'getMaxPrecision':G,'precision':j,'logarithmicDepthBuffer':q,'maxTextures':b,'maxVertexTextures':L,'maxTextureSize':y,'maxCubemapSize':X,'maxAttributes':C,'maxVertexUniforms':T,'maxVaryings':E,'maxFragmentUniforms':D,'vertexTextures':K,'floatFragmentTextures':w,'floatVertexTextures':K&&w,'maxSamples':R?N['getParameter'](N['MAX_SAMPLES']):0x0};}O['d'](H,{'E':()=>u});},0xddf9:(m,H,O)=>{function u(N){var J={};function A(v){if(void 0x0!==J[v])return J[v];var F;switch(v){case'WEBGL_depth_texture':F=N['getExtension']('WEBGL_depth_texture')||N['getExtension']('MOZ_WEBGL_depth_texture')||N['getExtension']('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':F=N['getExtension']('EXT_texture_filter_anisotropic')||N['getExtension']('MOZ_EXT_texture_filter_anisotropic')||N['getExtension']('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':F=N['getExtension']('WEBGL_compressed_texture_s3tc')||N['getExtension']('MOZ_WEBGL_compressed_texture_s3tc')||N['getExtension']('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':F=N['getExtension']('WEBGL_compressed_texture_pvrtc')||N['getExtension']('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:F=N['getExtension'](v);}return J[v]=F,F;}return{'has':function(v){return null!==A(v);},'init':function(v){v['isWebGL2']?A('EXT_color_buffer_float'):(A('WEBGL_depth_texture'),A('OES_texture_float'),A('OES_texture_half_float'),A('OES_texture_half_float_linear'),A('OES_standard_derivatives'),A('OES_element_index_uint'),A('OES_vertex_array_object'),A('ANGLE_instanced_arrays')),A('OES_texture_float_linear'),A('EXT_color_buffer_half_float'),A('WEBGL_multisampled_render_to_texture');},'get':function(v){var F=A(v);return null===F&&console['warn']('THREE.WebGLRenderer:\x20'+v+'\x20extension\x20not\x20supported.'),F;}};}O['d'](H,{'C':()=>u});},0xcff:(m,H,O)=>{function u(N,J,A,v){var F,G,c,R=v['isWebGL2'];this['setMode']=function(j){F=j;},this['setIndex']=function(j){G=j['type'],c=j['bytesPerElement'];},this['render']=function(j,B){N['drawElements'](F,B,G,j*c),A['update'](B,F,0x1);},this['renderInstances']=function(j,B,z){if(0x0!==z){var q,b;if(R)q=N,b='drawElementsInstanced';else{if(b='drawElementsInstancedANGLE',null===(q=J['get']('ANGLE_instanced_arrays')))return void console['error']('THREE.WebGLIndexedBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');}q[b](F,B,G,j*c,z),A['update'](B,F,z);}},this['renderMultiDraw']=function(j,B,z){if(0x0!==z){var q=J['get']('WEBGL_multi_draw');if(null===q){for(var b=0x0;b<z;b++)this['render'](j[b]/c,B[b]);}else{q['multiDrawElementsWEBGL'](F,B,0x0,G,j,0x0,z);for(var L=0x0,y=0x0;y<z;y++)L+=B[y];A['update'](L,F,0x1);}}};}O['d'](H,{'W':()=>u});},0xfa3f:(m,H,O)=>{function u(N){var J={'frame':0x0,'calls':0x0,'triangles':0x0,'points':0x0,'lines':0x0};return{'memory':{'geometries':0x0,'textures':0x0},'render':J,'programs':null,'autoReset':!0x0,'reset':function(){J['calls']=0x0,J['triangles']=0x0,J['points']=0x0,J['lines']=0x0;},'update':function(A,v,F){switch(J['calls']++,v){case N['TRIANGLES']:J['triangles']+=F*(A/0x3);break;case N['LINES']:J['lines']+=F*(A/0x2);break;case N['LINE_STRIP']:J['lines']+=F*(A-0x1);break;case N['LINE_LOOP']:J['lines']+=F*A;break;case N['POINTS']:J['points']+=F*A;break;default:console['error']('THREE.WebGLInfo:\x20Unknown\x20draw\x20mode:',v);}}};}O['d'](H,{'i':()=>u});},0x11c2f:(m,H,O)=>{function u(N,J,A,v){var F=new WeakMap();function G(c){var R=c['target'];R['removeEventListener']('dispose',G),A['remove'](R['instanceMatrix']),null!==R['instanceColor']&&A['remove'](R['instanceColor']);}return{'update':function(R){var j=v['render']['frame'],B=R['geometry'],z=J['get'](R,B);if(F['get'](z)!==j&&(J['update'](z),F['set'](z,j)),R['isInstancedMesh']&&(!0x1===R['hasEventListener']('dispose',G)&&R['addEventListener']('dispose',G),F['get'](R)!==j&&(A['update'](R['instanceMatrix'],N['ARRAY_BUFFER']),null!==R['instanceColor']&&A['update'](R['instanceColor'],N['ARRAY_BUFFER']),F['set'](R,j))),R['isSkinnedMesh']){var q=R['skeleton'];F['get'](q)!==j&&(q['update'](),F['set'](q,j));}return z;},'dispose':function(){F=new WeakMap();}};}O['d'](H,{'C':()=>u});},0xbaa2:(m,H,O)=>{function u(){var N=new WeakMap();return{'get':function(J){var A=N['get'](J);return void 0x0===A&&(A={},N['set'](J,A)),A;},'remove':function(J){N['delete'](J);},'update':function(J,A,v){N['get'](J)[A]=v;},'dispose':function(){N=new WeakMap();}};}O['d'](H,{'R':()=>u});},0xac6:(m,H,O)=>{function u(v,F){return v['groupOrder']!==F['groupOrder']?v['groupOrder']-F['groupOrder']:v['renderOrder']!==F['renderOrder']?v['renderOrder']-F['renderOrder']:v['material']['id']!==F['material']['id']?v['material']['id']-F['material']['id']:v['z']!==F['z']?v['z']-F['z']:v['id']-F['id'];}function N(v,F){return v['groupOrder']!==F['groupOrder']?v['groupOrder']-F['groupOrder']:v['renderOrder']!==F['renderOrder']?v['renderOrder']-F['renderOrder']:v['z']!==F['z']?F['z']-v['z']:v['id']-F['id'];}function J(){var v=[],F=0x0,G=[],c=[],R=[];function j(B,z,q,b,L,y){var h=v[F];return void 0x0===h?(h={'id':B['id'],'object':B,'geometry':z,'material':q,'groupOrder':b,'renderOrder':B['renderOrder'],'z':L,'group':y},v[F]=h):(h['id']=B['id'],h['object']=B,h['geometry']=z,h['material']=q,h['groupOrder']=b,h['renderOrder']=B['renderOrder'],h['z']=L,h['group']=y),F++,h;}return{'opaque':G,'transmissive':c,'transparent':R,'init':function(){F=0x0,G['length']=0x0,c['length']=0x0,R['length']=0x0;},'push':function(B,z,q,b,L,y){var h=j(B,z,q,b,L,y);q['transmission']>0x0?c['push'](h):!0x0===q['transparent']?R['push'](h):G['push'](h);},'unshift':function(B,z,q,b,L,y){var h=j(B,z,q,b,L,y);q['transmission']>0x0?c['unshift'](h):!0x0===q['transparent']?R['unshift'](h):G['unshift'](h);},'finish':function(){for(var B=F,z=v['length'];B<z;B++){var q=v[B];if(null===q['id'])break;q['id']=null,q['object']=null,q['geometry']=null,q['material']=null,q['group']=null;}},'sort':function(B,z){G['length']>0x1&&G['sort'](B||u),c['length']>0x1&&c['sort'](z||N),R['length']>0x1&&R['sort'](z||N);}};}function A(){var v=new WeakMap();return{'get':function(F,G){var c,R=v['get'](F);return void 0x0===R?(c=new J(),v['set'](F,[c])):G>=R['length']?(c=new J(),R['push'](c)):c=R[G],c;},'dispose':function(){v=new WeakMap();}};}O['d'](H,{'$':()=>A});},0x16f96:(m,H,O)=>{function u(N,J,A){var v=N['createShader'](J);return N['shaderSource'](v,A),N['compileShader'](v),v;}O['d'](H,{'n':()=>u});},0x2106:(m,H,O)=>{function u(F,G){var c='undefined'!=typeof Symbol&&F[Symbol['iterator']]||F['@@iterator'];if(c)return(c=c['call'](F))['next']['bind'](c);if(Array['isArray'](F)||(c=function(j,B){if(!j)return;if('string'==typeof j)return N(j,B);var z=Object['prototype']['toString']['call'](j)['slice'](0x8,-0x1);'Object'===z&&j['constructor']&&(z=j['constructor']['name']);if('Map'===z||'Set'===z)return Array['from'](j);if('Arguments'===z||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/['test'](z))return N(j,B);}(F))||G&&F&&'number'==typeof F['length']){c&&(F=c);var R=0x0;return function(){return R>=F['length']?{'done':!0x0}:{'done':!0x1,'value':F[R++]};};}throw new TypeError('Invalid\x20attempt\x20to\x20iterate\x20non-iterable\x20instance.\x0aIn\x20order\x20to\x20be\x20iterable,\x20non-array\x20objects\x20must\x20have\x20a\x20[Symbol.iterator]()\x20method.');}function N(F,G){(null==G||G>F['length'])&&(G=F['length']);for(var c=0x0,R=new Array(G);c<G;c++)R[c]=F[c];return R;}O['d'](H,{'j':()=>A});var J=0x0,A=(function(){function F(){this['shaderCache']=new Map(),this['materialCache']=new Map();}var G=F['prototype'];return G['update']=function(c){var R=c['vertexShader'],j=c['fragmentShader'],B=this['_getShaderStage'](R),z=this['_getShaderStage'](j),q=this['_getShaderCacheForMaterial'](c);return!0x1===q['has'](B)&&(q['add'](B),B['usedTimes']++),!0x1===q['has'](z)&&(q['add'](z),z['usedTimes']++),this;},G['remove']=function(c){for(var R,j=u(this['materialCache']['get'](c));!(R=j())['done'];){var B=R['value'];B['usedTimes']--,0x0===B['usedTimes']&&this['shaderCache']['delete'](B['code']);}return this['materialCache']['delete'](c),this;},G['getVertexShaderID']=function(c){return this['_getShaderStage'](c['vertexShader'])['id'];},G['getFragmentShaderID']=function(c){return this['_getShaderStage'](c['fragmentShader'])['id'];},G['dispose']=function(){this['shaderCache']['clear'](),this['materialCache']['clear']();},G['_getShaderCacheForMaterial']=function(c){var R=this['materialCache'],j=R['get'](c);return void 0x0===j&&(j=new Set(),R['set'](c,j)),j;},G['_getShaderStage']=function(c){var R=this['shaderCache'],j=R['get'](c);return void 0x0===j&&(j=new v(c),R['set'](c,j)),j;},F;}()),v=function(F){this['id']=J++,this['code']=F,this['usedTimes']=0x0;};},0x9176:(m,H,O)=>{function u(N,J,A,v){var F={},G={},R=[],j=A['isWebGL2']?N['getParameter'](N['MAX_UNIFORM_BUFFER_BINDINGS']):0x0;function B(b,L,y){var h=b['value'];if(void 0x0===y[L]){if('number'==typeof h)y[L]=h;else{for(var X=Array['isArray'](h)?h:[h],C=[],T=0x0;T<X['length'];T++)C['push'](X[T]['clone']());y[L]=C;}return!0x0;}if('number'==typeof h){if(y[L]!==h)return y[L]=h,!0x0;}else for(var E=Array['isArray'](y[L])?y[L]:[y[L]],d=Array['isArray'](h)?h:[h],D=0x0;D<E['length'];D++){var K=E[D];if(!0x1===K['equals'](d[D]))return K['copy'](d[D]),!0x0;}return!0x1;}function z(b){var L={'boundary':0x0,'storage':0x0};return'number'==typeof b?(L['boundary']=0x4,L['storage']=0x4):b['isVector2']?(L['boundary']=0x8,L['storage']=0x8):b['isVector3']||b['isColor']?(L['boundary']=0x10,L['storage']=0xc):b['isVector4']?(L['boundary']=0x10,L['storage']=0x10):b['isMatrix3']?(L['boundary']=0x30,L['storage']=0x30):b['isMatrix4']?(L['boundary']=0x40,L['storage']=0x40):b['isTexture']?console['warn']('THREE.WebGLRenderer:\x20Texture\x20samplers\x20can\x20not\x20be\x20part\x20of\x20an\x20uniforms\x20group.'):console['warn']('THREE.WebGLRenderer:\x20Unsupported\x20uniform\x20value\x20type.',b),L;}function q(b){var L=b['target'];L['removeEventListener']('dispose',q);var y=R['indexOf'](L['__bindingPointIndex']);R['splice'](y,0x1),N['deleteBuffer'](F[L['id']]),delete F[L['id']],delete G[L['id']];}return{'bind':function(b,L){var y=L['program'];v['uniformBlockBinding'](b,y);},'update':function(b,L){var y=F[b['id']];void 0x0===y&&(!function(T){for(var E=T['uniforms'],D=0x0,K=0x10,w=0x0,Q=0x0,U=E['length'];Q<U;Q++){for(var M=E[Q],g={'boundary':0x0,'storage':0x0},x=Array['isArray'](M['value'])?M['value']:[M['value']],Y=0x0,W=x['length'];Y<W;Y++){var k=z(x[Y]);g['boundary']+=k['boundary'],g['storage']+=k['storage'];}if(M['__data']=new Float32Array(g['storage']/Float32Array['BYTES_PER_ELEMENT']),M['__offset']=D,Q>0x0)0x0!==(w=D%K)&&K-w-g['boundary']<0x0&&(D+=K-w,M['__offset']=D);D+=g['storage'];}(w=D%K)>0x0&&(D+=K-w),(T['__size']=D,T['__cache']={});}(b),y=function(T){var E=(function(){for(var Q=0x0;Q<j;Q++)if(-0x1===R['indexOf'](Q))return R['push'](Q),Q;return console['error']('THREE.WebGLRenderer:\x20Maximum\x20number\x20of\x20simultaneously\x20usable\x20uniforms\x20groups\x20reached.'),0x0;}());T['__bindingPointIndex']=E;var D=N['createBuffer'](),K=T['__size'],w=T['usage'];return N['bindBuffer'](N['UNIFORM_BUFFER'],D),N['bufferData'](N['UNIFORM_BUFFER'],K,w),N['bindBuffer'](N['UNIFORM_BUFFER'],null),N['bindBufferBase'](N['UNIFORM_BUFFER'],E,D),D;}(b),F[b['id']]=y,b['addEventListener']('dispose',q));var X=L['program'];v['updateUBOMapping'](b,X);var C=J['render']['frame'];G[b['id']]!==C&&(!function(T){var E=F[T['id']],D=T['uniforms'],K=T['__cache'];N['bindBuffer'](N['UNIFORM_BUFFER'],E);for(var w=0x0,Q=D['length'];w<Q;w++){var U=D[w];if(!0x0===B(U,w,K)){for(var M=U['__offset'],g=Array['isArray'](U['value'])?U['value']:[U['value']],x=0x0,Y=0x0;Y<g['length'];Y++){var W=g[Y],k=z(W);'number'==typeof W?(U['__data'][0x0]=W,N['bufferSubData'](N['UNIFORM_BUFFER'],M+x,U['__data'])):W['isMatrix3']?(U['__data'][0x0]=W['elements'][0x0],U['__data'][0x1]=W['elements'][0x1],U['__data'][0x2]=W['elements'][0x2],U['__data'][0x3]=W['elements'][0x0],U['__data'][0x4]=W['elements'][0x3],U['__data'][0x5]=W['elements'][0x4],U['__data'][0x6]=W['elements'][0x5],U['__data'][0x7]=W['elements'][0x0],U['__data'][0x8]=W['elements'][0x6],U['__data'][0x9]=W['elements'][0x7],U['__data'][0xa]=W['elements'][0x8],U['__data'][0xb]=W['elements'][0x0]):(W['toArray'](U['__data'],x),x+=k['storage']/Float32Array['BYTES_PER_ELEMENT']);}N['bufferSubData'](N['UNIFORM_BUFFER'],M,U['__data']);}}N['bindBuffer'](N['UNIFORM_BUFFER'],null);}(b),G[b['id']]=C);},'dispose':function(){for(var b in F)N['deleteBuffer'](F[b]);R=[],F={},G={};}};}O['d'](H,{'p':()=>u});},0xc3ba:(m,H,O)=>{O['d'](H,{'h':()=>J});var u=O(0x172d2),N=O(0x4efe);function J(A,v,F){var G=F['isWebGL2'];return{'convert':function(R,j){var B;void 0x0===j&&(j=u['jf0']);var z=N['pp']['getTransfer'](j);if(R===u['OUM'])return A['UNSIGNED_BYTE'];if(R===u['Wew'])return A['UNSIGNED_SHORT_4_4_4_4'];if(R===u['gJ2'])return A['UNSIGNED_SHORT_5_5_5_1'];if(R===u['tJf'])return A['BYTE'];if(R===u['fBL'])return A['SHORT'];if(R===u['cHt'])return A['UNSIGNED_SHORT'];if(R===u['Yuy'])return A['INT'];if(R===u['bkx'])return A['UNSIGNED_INT'];if(R===u['RQf'])return A['FLOAT'];if(R===u['ix0'])return G?A['HALF_FLOAT']:null!==(B=v['get']('OES_texture_half_float'))?B['HALF_FLOAT_OES']:null;if(R===u['wrO'])return A['ALPHA'];if(R===u['GWd'])return A['RGBA'];if(R===u['Kzv'])return A['LUMINANCE'];if(R===u['CMB'])return A['LUMINANCE_ALPHA'];if(R===u['zdS'])return A['DEPTH_COMPONENT'];if(R===u['dcC'])return A['DEPTH_STENCIL'];if(R===u['Ua6'])return null!==(B=v['get']('EXT_sRGB'))?B['SRGB_ALPHA_EXT']:null;if(R===u['VT0'])return A['RED'];if(R===u['ZQM'])return A['RED_INTEGER'];if(R===u['paN'])return A['RG'];if(R===u['TkQ'])return A['RG_INTEGER'];if(R===u['c90'])return A['RGBA_INTEGER'];if(R===u['IE4']||R===u['Nz6']||R===u['jR7']||R===u['BXX']){if(z===u['KLL']){if(null===(B=v['get']('WEBGL_compressed_texture_s3tc_srgb')))return null;if(R===u['IE4'])return B['COMPRESSED_SRGB_S3TC_DXT1_EXT'];if(R===u['Nz6'])return B['COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT'];if(R===u['jR7'])return B['COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT'];if(R===u['BXX'])return B['COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT'];}else{if(null===(B=v['get']('WEBGL_compressed_texture_s3tc')))return null;if(R===u['IE4'])return B['COMPRESSED_RGB_S3TC_DXT1_EXT'];if(R===u['Nz6'])return B['COMPRESSED_RGBA_S3TC_DXT1_EXT'];if(R===u['jR7'])return B['COMPRESSED_RGBA_S3TC_DXT3_EXT'];if(R===u['BXX'])return B['COMPRESSED_RGBA_S3TC_DXT5_EXT'];}}if(R===u['k6Q']||R===u['kTp']||R===u['HXV']||R===u['pBf']){if(null===(B=v['get']('WEBGL_compressed_texture_pvrtc')))return null;if(R===u['k6Q'])return B['COMPRESSED_RGB_PVRTC_4BPPV1_IMG'];if(R===u['kTp'])return B['COMPRESSED_RGB_PVRTC_2BPPV1_IMG'];if(R===u['HXV'])return B['COMPRESSED_RGBA_PVRTC_4BPPV1_IMG'];if(R===u['pBf'])return B['COMPRESSED_RGBA_PVRTC_2BPPV1_IMG'];}if(R===u['CVz'])return null!==(B=v['get']('WEBGL_compressed_texture_etc1'))?B['COMPRESSED_RGB_ETC1_WEBGL']:null;if(R===u['Riy']||R===u['KDk']){if(null===(B=v['get']('WEBGL_compressed_texture_etc')))return null;if(R===u['Riy'])return z===u['KLL']?B['COMPRESSED_SRGB8_ETC2']:B['COMPRESSED_RGB8_ETC2'];if(R===u['KDk'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ETC2_EAC']:B['COMPRESSED_RGBA8_ETC2_EAC'];}if(R===u['qa3']||R===u['B_h']||R===u['czI']||R===u['rSH']||R===u['Qrf']||R===u['psI']||R===u['a5J']||R===u['_QJ']||R===u['uB5']||R===u['lyL']||R===u['bC7']||R===u['y3Z']||R===u['ojs']||R===u['S$4']){if(null===(B=v['get']('WEBGL_compressed_texture_astc')))return null;if(R===u['qa3'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR']:B['COMPRESSED_RGBA_ASTC_4x4_KHR'];if(R===u['B_h'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR']:B['COMPRESSED_RGBA_ASTC_5x4_KHR'];if(R===u['czI'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR']:B['COMPRESSED_RGBA_ASTC_5x5_KHR'];if(R===u['rSH'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR']:B['COMPRESSED_RGBA_ASTC_6x5_KHR'];if(R===u['Qrf'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR']:B['COMPRESSED_RGBA_ASTC_6x6_KHR'];if(R===u['psI'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR']:B['COMPRESSED_RGBA_ASTC_8x5_KHR'];if(R===u['a5J'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR']:B['COMPRESSED_RGBA_ASTC_8x6_KHR'];if(R===u['_QJ'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR']:B['COMPRESSED_RGBA_ASTC_8x8_KHR'];if(R===u['uB5'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR']:B['COMPRESSED_RGBA_ASTC_10x5_KHR'];if(R===u['lyL'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR']:B['COMPRESSED_RGBA_ASTC_10x6_KHR'];if(R===u['bC7'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR']:B['COMPRESSED_RGBA_ASTC_10x8_KHR'];if(R===u['y3Z'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR']:B['COMPRESSED_RGBA_ASTC_10x10_KHR'];if(R===u['ojs'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR']:B['COMPRESSED_RGBA_ASTC_12x10_KHR'];if(R===u['S$4'])return z===u['KLL']?B['COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR']:B['COMPRESSED_RGBA_ASTC_12x12_KHR'];}if(R===u['Fn']||R===u['H23']||R===u['W9U']){if(null===(B=v['get']('EXT_texture_compression_bptc')))return null;if(R===u['Fn'])return z===u['KLL']?B['COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT']:B['COMPRESSED_RGBA_BPTC_UNORM_EXT'];if(R===u['H23'])return B['COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT'];if(R===u['W9U'])return B['COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT'];}if(R===u['Kef']||R===u['XG_']||R===u['HO_']||R===u['CWW']){if(null===(B=v['get']('EXT_texture_compression_rgtc')))return null;if(R===u['Fn'])return B['COMPRESSED_RED_RGTC1_EXT'];if(R===u['XG_'])return B['COMPRESSED_SIGNED_RED_RGTC1_EXT'];if(R===u['HO_'])return B['COMPRESSED_RED_GREEN_RGTC2_EXT'];if(R===u['CWW'])return B['COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT'];}return R===u['V3x']?G?A['UNSIGNED_INT_24_8']:null!==(B=v['get']('WEBGL_depth_texture'))?B['UNSIGNED_INT_24_8_WEBGL']:null:void 0x0!==A[R]?A[R]:null;}};}},0x12331:(m,H,O)=>{O(0x169b1);},0xb9f2:(m,H,O)=>{O(0x169b1);},0xdc03:(m,H,O)=>{O(0x172d2),O(0x308);},0x11073:(m,H,O)=>{O(0x172d2),O(0x308);},0x308:(m,H,O)=>{O(0x17417);},0xb12c:(m,H,O)=>{O['d'](H,{'b':()=>v});var u=O(0x14124),N=O(0x12e4b),J=O(0x17417),A=O(0x172d2),v=function(F){function G(R,j,B,z,q,b,L,y,X,C){var T;return R=void 0x0!==R?R:[],j=void 0x0!==j?j:A['hy7'],(T=F['call'](this,R,j,B,z,q,b,L,y,X,C)||this)['isCubeTexture']=!0x0,T['flipY']=!0x1,T;}return(0x0,N['A'])(G,F),(0x0,u['A'])(G,[{'key':'images','get':function(){return this['image'];},'set':function(c){this['image']=c;}}]);}(J['g']);},0x10762:(m,H,O)=>{O['d'](H,{'d':()=>A});var u=O(0x12e4b),N=O(0x17417),J=O(0x172d2),A=function(v){function F(G,c,R,j){var B;return void 0x0===G&&(G=null),void 0x0===c&&(c=0x1),void 0x0===R&&(R=0x1),void 0x0===j&&(j=0x1),(B=v['call'](this,null)||this)['isData3DTexture']=!0x0,B['image']={'data':G,'width':c,'height':R,'depth':j},B['magFilter']=J['hxR'],B['minFilter']=J['hxR'],B['wrapR']=J['ghU'],B['generateMipmaps']=!0x1,B['flipY']=!0x1,B['unpackAlignment']=0x1,B;}return(0x0,u['A'])(F,v),F;}(N['g']);},0xc71e:(m,H,O)=>{O['d'](H,{'r':()=>A});var u=O(0x12e4b),N=O(0x17417),J=O(0x172d2),A=function(v){function F(G,c,R,j){var B;return void 0x0===G&&(G=null),void 0x0===c&&(c=0x1),void 0x0===R&&(R=0x1),void 0x0===j&&(j=0x1),(B=v['call'](this,null)||this)['isDataArrayTexture']=!0x0,B['image']={'data':G,'width':c,'height':R,'depth':j},B['magFilter']=J['hxR'],B['minFilter']=J['hxR'],B['wrapR']=J['ghU'],B['generateMipmaps']=!0x1,B['flipY']=!0x1,B['unpackAlignment']=0x1,B;}return(0x0,u['A'])(F,v),F;}(N['g']);},0xac1a:(m,H,O)=>{O['d'](H,{'V':()=>A});var u=O(0x12e4b),N=O(0x17417),J=O(0x172d2),A=function(v){function F(R,j,B,z,q,b,L,y,X,C){var T;if((C=void 0x0!==C?C:J['zdS'])!==J['zdS']&&C!==J['dcC'])throw new Error('DepthTexture\x20format\x20must\x20be\x20either\x20THREE.DepthFormat\x20or\x20THREE.DepthStencilFormat');return void 0x0===B&&C===J['zdS']&&(B=J['bkx']),void 0x0===B&&C===J['dcC']&&(B=J['V3x']),(T=v['call'](this,null,z,q,b,L,y,C,B,X)||this)['isDepthTexture']=!0x0,T['image']={'width':R,'height':j},T['magFilter']=void 0x0!==L?L:J['hxR'],T['minFilter']=void 0x0!==y?y:J['hxR'],T['flipY']=!0x1,T['generateMipmaps']=!0x1,T['compareFunction']=null,T;}(0x0,u['A'])(F,v);var G=F['prototype'];return G['copy']=function(c){return v['prototype']['copy']['call'](this,c),this['compareFunction']=c['compareFunction'],this;},G['toJSON']=function(c){var R=v['prototype']['toJSON']['call'](this,c);return null!==this['compareFunction']&&(R['compareFunction']=this['compareFunction']),R;},F;}(N['g']);},0x6dbc:(m,H,O)=>{O(0x17417),O(0x172d2);},0x14f63:(m,H,O)=>{O['d'](H,{'k':()=>v});var u=O(0x14124),N=O(0x10d2d),J=O(0xbd95),A=0x0,v=(function(){function G(R){void 0x0===R&&(R=null),this['isSource']=!0x0,Object['defineProperty'](this,'id',{'value':A++}),this['uuid']=J['lk'](),this['data']=R,this['version']=0x0;}return G['prototype']['toJSON']=function(R){var j=void 0x0===R||'string'==typeof R;if(!j&&void 0x0!==R['images'][this['uuid']])return R['images'][this['uuid']];var B={'uuid':this['uuid'],'url':''},z=this['data'];if(null!==z){var q;if(Array['isArray'](z)){q=[];for(var b=0x0,L=z['length'];b<L;b++)z[b]['isDataTexture']?q['push'](F(z[b]['image'])):q['push'](F(z[b]));}else q=F(z);B['url']=q;}return j||(R['images'][this['uuid']]=B),B;},(0x0,u['A'])(G,[{'key':'needsUpdate','set':function(R){!0x0===R&&this['version']++;}}]);}());function F(G){return'undefined'!=typeof HTMLImageElement&&G instanceof HTMLImageElement||'undefined'!=typeof HTMLCanvasElement&&G instanceof HTMLCanvasElement||'undefined'!=typeof ImageBitmap&&G instanceof ImageBitmap?N['H']['getDataURL'](G):G['data']?{'data':Array['from'](G['data']),'width':G['width'],'height':G['height'],'type':G['data']['constructor']['name']}:(console['warn']('THREE.Texture:\x20Unable\x20to\x20serialize\x20Texture.'),{});}},0x17417:(m,H,O)=>{O['d'](H,{'g':()=>q});var N=O(0x14124),J=O(0x12e4b),A=O(0x161ea),v=O(0x172d2),F=O(0xbd95),G=O(0x1264d),R=O(0x3e78),j=O(0x14f63),B=O(0x1078a),z=0x0,q=function(b){function L(X,C,T,E,D,K,w,Q,U,M){var Y;return void 0x0===X&&(X=L['DEFAULT_IMAGE']),void 0x0===C&&(C=L['DEFAULT_MAPPING']),void 0x0===T&&(T=v['ghU']),void 0x0===E&&(E=v['ghU']),void 0x0===D&&(D=v['k6q']),void 0x0===K&&(K=v['$_I']),void 0x0===w&&(w=v['GWd']),void 0x0===Q&&(Q=v['OUM']),void 0x0===U&&(U=L['DEFAULT_ANISOTROPY']),void 0x0===M&&(M=v['jf0']),(Y=b['call'](this)||this)['isTexture']=!0x0,Object['defineProperty'](Y,'id',{'value':z++}),Y['uuid']=F['lk'](),Y['name']='',Y['source']=new j['k'](X),Y['mipmaps']=[],Y['mapping']=C,Y['channel']=0x0,Y['wrapS']=T,Y['wrapT']=E,Y['magFilter']=D,Y['minFilter']=K,Y['anisotropy']=U,Y['format']=w,Y['internalFormat']=null,Y['type']=Q,Y['offset']=new G['I'](0x0,0x0),Y['repeat']=new G['I'](0x1,0x1),Y['center']=new G['I'](0x0,0x0),Y['rotation']=0x0,Y['matrixAutoUpdate']=!0x0,Y['matrix']=new R['d'](),Y['generateMipmaps']=!0x0,Y['premultiplyAlpha']=!0x1,Y['flipY']=!0x0,Y['unpackAlignment']=0x4,'string'==typeof M?Y['colorSpace']=M:((0x0,B['mc'])('THREE.Texture:\x20Property\x20.encoding\x20has\x20been\x20replaced\x20by\x20.colorSpace.'),Y['colorSpace']=M===v['S2Q']?v['er$']:v['jf0']),Y['userData']={},Y['version']=0x0,Y['onUpdate']=null,Y['isRenderTargetTexture']=!0x1,Y['needsPMREMUpdate']=!0x1,Y;}(0x0,J['A'])(L,b);var y=L['prototype'];return y['updateMatrix']=function(){this['matrix']['setUvTransform'](this['offset']['x'],this['offset']['y'],this['repeat']['x'],this['repeat']['y'],this['rotation'],this['center']['x'],this['center']['y']);},y['clone']=function(){return new this['constructor']()['copy'](this);},y['copy']=function(X){return this['name']=X['name'],this['source']=X['source'],this['mipmaps']=X['mipmaps']['slice'](0x0),this['mapping']=X['mapping'],this['channel']=X['channel'],this['wrapS']=X['wrapS'],this['wrapT']=X['wrapT'],this['magFilter']=X['magFilter'],this['minFilter']=X['minFilter'],this['anisotropy']=X['anisotropy'],this['format']=X['format'],this['internalFormat']=X['internalFormat'],this['type']=X['type'],this['offset']['copy'](X['offset']),this['repeat']['copy'](X['repeat']),this['center']['copy'](X['center']),this['rotation']=X['rotation'],this['matrixAutoUpdate']=X['matrixAutoUpdate'],this['matrix']['copy'](X['matrix']),this['generateMipmaps']=X['generateMipmaps'],this['premultiplyAlpha']=X['premultiplyAlpha'],this['flipY']=X['flipY'],this['unpackAlignment']=X['unpackAlignment'],this['colorSpace']=X['colorSpace'],this['userData']=JSON['parse'](JSON['stringify'](X['userData'])),this['needsUpdate']=!0x0,this;},y['toJSON']=function(X){var C=void 0x0===X||'string'==typeof X;if(!C&&void 0x0!==X['textures'][this['uuid']])return X['textures'][this['uuid']];var T={'metadata':{'version':4.6,'type':'Texture','generator':'Texture.toJSON'},'uuid':this['uuid'],'name':this['name'],'image':this['source']['toJSON'](X)['uuid'],'mapping':this['mapping'],'channel':this['channel'],'repeat':[this['repeat']['x'],this['repeat']['y']],'offset':[this['offset']['x'],this['offset']['y']],'center':[this['center']['x'],this['center']['y']],'rotation':this['rotation'],'wrap':[this['wrapS'],this['wrapT']],'format':this['format'],'internalFormat':this['internalFormat'],'type':this['type'],'colorSpace':this['colorSpace'],'minFilter':this['minFilter'],'magFilter':this['magFilter'],'anisotropy':this['anisotropy'],'flipY':this['flipY'],'generateMipmaps':this['generateMipmaps'],'premultiplyAlpha':this['premultiplyAlpha'],'unpackAlignment':this['unpackAlignment']};return Object['keys'](this['userData'])['length']>0x0&&(T['userData']=this['userData']),C||(X['textures'][this['uuid']]=T),T;},y['dispose']=function(){this['dispatchEvent']({'type':'dispose'});},y['transformUv']=function(X){if(this['mapping']!==v['UTZ'])return X;if(X['applyMatrix3'](this['matrix']),X['x']<0x0||X['x']>0x1)switch(this['wrapS']){case v['GJx']:X['x']=X['x']-Math['floor'](X['x']);break;case v['ghU']:X['x']=X['x']<0x0?0x0:0x1;break;case v['kTW']:0x1===Math['abs'](Math['floor'](X['x'])%0x2)?X['x']=Math['ceil'](X['x'])-X['x']:X['x']=X['x']-Math['floor'](X['x']);}if(X['y']<0x0||X['y']>0x1)switch(this['wrapT']){case v['GJx']:X['y']=X['y']-Math['floor'](X['y']);break;case v['ghU']:X['y']=X['y']<0x0?0x0:0x1;break;case v['kTW']:0x1===Math['abs'](Math['floor'](X['y'])%0x2)?X['y']=Math['ceil'](X['y'])-X['y']:X['y']=X['y']-Math['floor'](X['y']);}return this['flipY']&&(X['y']=0x1-X['y']),X;},(0x0,N['A'])(L,[{'key':'image','get':function(){return this['source']['data'];},'set':function(X){void 0x0===X&&(X=null),this['source']['data']=X;}},{'key':'needsUpdate','set':function(X){!0x0===X&&(this['version']++,this['source']['needsUpdate']=!0x0);}},{'key':'encoding','get':function(){return(0x0,B['mc'])('THREE.Texture:\x20Property\x20.encoding\x20has\x20been\x20replaced\x20by\x20.colorSpace.'),this['colorSpace']===v['er$']?v['S2Q']:v['tgE'];},'set':function(X){(0x0,B['mc'])('THREE.Texture:\x20Property\x20.encoding\x20has\x20been\x20replaced\x20by\x20.colorSpace.'),this['colorSpace']=X===v['S2Q']?v['er$']:v['jf0'];}}]);}(A['Q']);q['DEFAULT_IMAGE']=null,q['DEFAULT_MAPPING']=v['UTZ'],q['DEFAULT_ANISOTROPY']=0x1;},0x14b20:(m,H,O)=>{O(0x172d2),O(0x17417);},0x1078a:(m,H,O)=>{function u(F){for(var G=F['length']-0x1;G>=0x0;--G)if(F[G]>=0xffff)return!0x0;return!0x1;}O['d'](H,{'AQ':()=>u,'lP':()=>J,'mc':()=>v,'qq':()=>N}),(Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array);function N(F){return document['createElementNS']('http://www.w3.org/1999/xhtml',F);}function J(){var F=N('canvas');return F['style']['display']='block',F;}var A={};function v(F){F in A||(A[F]=!0x0,console['warn'](F));}},0xc666:(m,H,O)=>{m['exports']=O['p']+'./package/4e8a512dac54131cbbb0.mp3';},0x50ef:(m,H,O)=>{m['exports']=O['p']+'./package/e99db4e6bd7fded791f1.mp3';},0xbc1c:(m,H,O)=>{m['exports']=O['p']+'./package/016928c19d30a9dde3a6.mp3';},0x4494:(m,H,O)=>{m['exports']=O['p']+'./package/0fd18333acc39a73982f.mp3';},0xdd70:(m,H,O)=>{m['exports']=O['p']+'./package/15afd22e3d194ea0c5f7.mp3';},0x14533:(m,H,O)=>{m['exports']=O['p']+'./package/8ec6c3e6c72d5148e959.mp3';},0x5507:(m,H,O)=>{m['exports']=O['p']+'./package/f78d568edd5221a37143.mp3';},0x32d6:(m,H,O)=>{m['exports']=O['p']+'./package/90b785ff2bbb6bbecc2a.mp3';},0x5bef:(m,H,O)=>{m['exports']=O['p']+'./package/ca16954f9bc0f316ffe6.mp3';},0x5e66:(m,H,O)=>{m['exports']=O['p']+'./package/7b17069332b4fbae3d28.mp3';},0x8cc4:(m,H,O)=>{m['exports']=O['p']+'./package/55dd09a3c49862787ac4.mp3';},0x11d1d:(m,H,O)=>{m['exports']=O['p']+'./package/c1d3e7c4459035af5314.mp3';},0x3fa2:(m,H,O)=>{m['exports']=O['p']+'./package/6936d0ccb9221c0c2587.mp3';},0x654e:(m,H,O)=>{m['exports']=O['p']+'./package/e3801eeb9f86871a55e4.mp3';},0xe6b1:(m,H,O)=>{m['exports']=O['p']+'./package/c6849ece22e0c631c268.mp3';},0xb663:(m,H,O)=>{m['exports']=O['p']+'./package/d6af5d6ce8d311baac43.mp3';},0x5ba:(m,H,O)=>{m['exports']=O['p']+'./package/63f3170f6a15f93e68a6.mp3';},0x16a51:(m,H,O)=>{m['exports']=O['p']+'./package/d0900792af4d2c6b0f7c.mp3';},0x26d3:(m,H,O)=>{m['exports']=O['p']+'./package/ddc8fe9b5b340fc5a625.mp3';},0x5fcb:(m,H,O)=>{m['exports']=O['p']+'./package/10684a207ae51686ff13.mp3';},0x3d98:(m,H,O)=>{m['exports']=O['p']+'./package/ce7c96647d550134575b.mp3';},0xbef9:(m,H,O)=>{m['exports']=O['p']+'./package/1a5af91d3d79b17ce75b.mp3';},0x9c12:(m,H,O)=>{m['exports']=O['p']+'./package/232dc3550c9600ba219c.mp3';},0x71cc:(m,H,O)=>{m['exports']=O['p']+'./package/9132a20e76c3e3d5e5ed.mp3';}}]);